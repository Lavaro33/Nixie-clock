Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

timer100ms          0x2               ./main.o
HEAD_RX             0x1               ./usart.o
BUFFER_TX           0x10              ./usart.o
nRF_RX_bufffer      0x21              ./nRF24L01.o
TX_flag             0x1               ./nRF24L01.o
TAIL_RX             0x1               ./usart.o
HEAD_TX             0x1               ./usart.o
BUFFER_RX           0x20              ./usart.o
string_tab          0x10              ./usart.o
disable_dynamic_payload
                    0x1               ./nRF24L01.o
payload_width       0x1               ./nRF24L01.o
TAIL_TX             0x1               ./usart.o
RX_flag             0x1               ./nRF24L01.o

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .text          0x00000000        0x0 ./SPI.o
 .bss           0x00000000        0x0 ./SPI.o
 .text.SPI_WriteDataBuffer
                0x00000000       0x3c ./SPI.o
 .text          0x00000000        0x0 ./main.o
 .bss           0x00000000        0x0 ./main.o
 .text          0x00000000        0x0 ./nRF24L01.o
 .bss           0x00000000        0x0 ./nRF24L01.o
 .text.nRF_Read_Registers
                0x00000000       0x32 ./nRF24L01.o
 .text.nRF_Data_Ready
                0x00000000        0xe ./nRF24L01.o
 .text.nRF_Power_Down
                0x00000000       0x1a ./nRF24L01.o
 .text.nRF_Set_PAYLOAD_Width
                0x00000000       0x18 ./nRF24L01.o
 .text.nRF_Set_Retransmission_Time_And_Ammount
                0x00000000        0x8 ./nRF24L01.o
 .text.nRF_Set_Data_Speed_And_Reciver_Power
                0x00000000        0x8 ./nRF24L01.o
 .bss.first_time
                0x00000000        0x1 ./nRF24L01.o
 .text          0x00000000        0x0 ./usart.o
 .bss           0x00000000        0x0 ./usart.o
 .text.init_USART
                0x00000000       0x14 ./usart.o
 .text.usart_read_c
                0x00000000       0x2a ./usart.o
 .text.usart_read_string
                0x00000000       0x34 ./usart.o
 .text.usart_send_str
                0x00000000       0x18 ./usart.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
LOAD ./SPI.o
LOAD ./main.o
LOAD ./nRF24L01.o
LOAD ./usart.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x766
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.__c.1870
                0x00000054        0x6 ./nRF24L01.o
 .progmem.data.__c.1872
                0x0000005a        0x6 ./nRF24L01.o
                0x00000060                . = ALIGN (0x2)
                0x00000060                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000060        0x0 linker stubs
 *(.trampolines*)
                0x00000060                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000060                __ctors_start = .
 *(.ctors)
                0x00000060                __ctors_end = .
                0x00000060                __dtors_start = .
 *(.dtors)
                0x00000060                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000060                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000060        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000006c       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                0x0000006c                __do_copy_data
 .init4         0x00000082       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x00000082                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000092        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000009a        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x0000009a                __vector_1
                0x0000009a                __vector_12
                0x0000009a                __bad_interrupt
                0x0000009a                __vector_6
                0x0000009a                __vector_11
                0x0000009a                __vector_17
                0x0000009a                __vector_19
                0x0000009a                __vector_7
                0x0000009a                __vector_5
                0x0000009a                __vector_4
                0x0000009a                __vector_9
                0x0000009a                __vector_2
                0x0000009a                __vector_15
                0x0000009a                __vector_8
                0x0000009a                __vector_16
                0x0000009a                __vector_18
                0x0000009a                __vector_20
                0x0000009e                . = ALIGN (0x2)
 *(.text.*)
 .text.init_SPI
                0x0000009e       0x26 ./SPI.o
                0x0000009e                init_SPI
 .text.SPI_WriteReadByte
                0x000000c4        0xa ./SPI.o
                0x000000c4                SPI_WriteReadByte
 .text.SPI_WriteByte
                0x000000ce        0x8 ./SPI.o
                0x000000ce                SPI_WriteByte
 .text.SPI_WriteReadDataBuffer
                0x000000d6       0x4a ./SPI.o
                0x000000d6                SPI_WriteReadDataBuffer
 .text.moja_funkcja
                0x00000120        0x2 ./main.o
                0x00000120                moja_funkcja
 .text.startup.main
                0x00000122       0x84 ./main.o
                0x00000122                main
 .text.__vector_10
                0x000001a6       0x3a ./main.o
                0x000001a6                __vector_10
 .text.register_nRF_RX_Event_Callback
                0x000001e0        0xa ./nRF24L01.o
                0x000001e0                register_nRF_RX_Event_Callback
 .text.nRF_Read_One_Byte_From_Register
                0x000001ea       0x12 ./nRF24L01.o
                0x000001ea                nRF_Read_One_Byte_From_Register
 .text.nRF_Config_Register
                0x000001fc       0x28 ./nRF24L01.o
                0x000001fc                nRF_Config_Register
 .text.nRF_Write_Register
                0x00000224       0x34 ./nRF24L01.o
                0x00000224                nRF_Write_Register
 .text.nRF_SET_Transmitter_Adres
                0x00000258       0x44 ./nRF24L01.o
                0x00000258                nRF_SET_Transmitter_Adres
 .text.nRF_SET_Reciver_Addres
                0x0000029c       0x60 ./nRF24L01.o
                0x0000029c                nRF_SET_Reciver_Addres
 .text.nRF_Set_State_And_Width_Of_CRC
                0x000002fc       0x46 ./nRF24L01.o
                0x000002fc                nRF_Set_State_And_Width_Of_CRC
 .text.nRF_TX_Power_Up
                0x00000342       0x14 ./nRF24L01.o
                0x00000342                nRF_TX_Power_Up
 .text.nRF_RX_Power_Up
                0x00000356       0x22 ./nRF24L01.o
                0x00000356                nRF_RX_Power_Up
 .text.nRF_RX_EVENT
                0x00000378       0xb0 ./nRF24L01.o
                0x00000378                nRF_RX_EVENT
 .text.nRF_Set_Channel
                0x00000428        0xa ./nRF24L01.o
                0x00000428                nRF_Set_Channel
 .text.nRF_Clear_TX
                0x00000432        0xc ./nRF24L01.o
                0x00000432                nRF_Clear_TX
 .text.nRF_Clear_RX
                0x0000043e        0xc ./nRF24L01.o
                0x0000043e                nRF_Clear_RX
 .text.nRF_Set_Active_DataPipe_And_ACK
                0x0000044a       0x60 ./nRF24L01.o
                0x0000044a                nRF_Set_Active_DataPipe_And_ACK
 .text.nRF_SendDataToAir
                0x000004aa       0x96 ./nRF24L01.o
                0x000004aa                nRF_SendDataToAir
 .text.nRF_Set_Dynamic_Payload_State_On_Data_Pipe
                0x00000540       0x2a ./nRF24L01.o
                0x00000540                nRF_Set_Dynamic_Payload_State_On_Data_Pipe
 .text.Initialize_INTERRUPT_For_nRF
                0x0000056a        0xc ./nRF24L01.o
                0x0000056a                Initialize_INTERRUPT_For_nRF
 .text.nRF_init
                0x00000576       0x6c ./nRF24L01.o
                0x00000576                nRF_init
 .text.__vector_3
                0x000005e2       0x96 ./nRF24L01.o
                0x000005e2                __vector_3
 .text.usart_send_char
                0x00000678       0x22 ./usart.o
                0x00000678                usart_send_char
 .text.__vector_13
                0x0000069a       0x7a ./usart.o
                0x0000069a                __vector_13
 .text.__vector_14
                0x00000714       0x4e ./usart.o
                0x00000714                __vector_14
                0x00000762                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000762        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x00000762                _exit
                0x00000762                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000762        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000766                _etext = .

.data           0x00800060       0x14 load address 0x00000766
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./SPI.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 ./nRF24L01.o
 .data          0x00800060        0x0 ./usart.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800060       0x13 ./main.o
 *(.gnu.linkonce.d*)
                0x00800074                . = ALIGN (0x2)
 *fill*         0x00800073        0x1 
                0x00800074                _edata = .
                0x00800074                PROVIDE (__data_end, .)

.bss            0x00800074       0x6f
                0x00800074                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.set_first_time_into_RX_MODE_after_TX_MODE
                0x00800074        0x1 ./nRF24L01.o
                0x00800074                set_first_time_into_RX_MODE_after_TX_MODE
 .bss.nRF_RX_Event_Callback
                0x00800075        0x2 ./nRF24L01.o
 .bss.flaga     0x00800077        0x1 ./usart.o
                0x00800077                flaga
 *(COMMON)
 COMMON         0x00800078        0x2 ./main.o
                0x00800078                timer100ms
 COMMON         0x0080007a       0x25 ./nRF24L01.o
                0x0080007a                nRF_RX_bufffer
                0x0080009b                TX_flag
                0x0080009c                disable_dynamic_payload
                0x0080009d                payload_width
                0x0080009e                RX_flag
 COMMON         0x0080009f       0x44 ./usart.o
                0x0080009f                HEAD_RX
                0x008000a0                BUFFER_TX
                0x008000b0                TAIL_RX
                0x008000b1                HEAD_TX
                0x008000b2                BUFFER_RX
                0x008000d2                string_tab
                0x008000e2                TAIL_TX
                0x008000e3                PROVIDE (__bss_end, .)
                0x00000766                __data_load_start = LOADADDR (.data)
                0x0000077a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000e3        0x0
                0x008000e3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000e3                PROVIDE (__noinit_end, .)
                0x008000e3                _end = .
                0x008000e3                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./SPI.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./main.o
 .comment       0x00000000       0x30 ./nRF24L01.o
 .comment       0x00000000       0x30 ./usart.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(NRF24.elf elf32-avr)
LOAD linker stubs
