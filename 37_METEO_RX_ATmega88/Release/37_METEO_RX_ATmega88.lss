
37_METEO_RX_ATmega88.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000812  000008a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000812  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002d  00800108  00800108  000008ae  2**0
                  ALLOC
  3 .stab         000009fc  00000000  00000000  000008b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000270  00000000  00000000  000012ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	23 c0       	rjmp	.+70     	; 0x48 <__ctors_end>
   2:	f9 c1       	rjmp	.+1010   	; 0x3f6 <__vector_1>
   4:	3c c0       	rjmp	.+120    	; 0x7e <__bad_interrupt>
   6:	3b c0       	rjmp	.+118    	; 0x7e <__bad_interrupt>
   8:	3a c0       	rjmp	.+116    	; 0x7e <__bad_interrupt>
   a:	39 c0       	rjmp	.+114    	; 0x7e <__bad_interrupt>
   c:	38 c0       	rjmp	.+112    	; 0x7e <__bad_interrupt>
   e:	37 c0       	rjmp	.+110    	; 0x7e <__bad_interrupt>
  10:	36 c0       	rjmp	.+108    	; 0x7e <__bad_interrupt>
  12:	35 c0       	rjmp	.+106    	; 0x7e <__bad_interrupt>
  14:	34 c0       	rjmp	.+104    	; 0x7e <__bad_interrupt>
  16:	33 c0       	rjmp	.+102    	; 0x7e <__bad_interrupt>
  18:	32 c0       	rjmp	.+100    	; 0x7e <__bad_interrupt>
  1a:	31 c0       	rjmp	.+98     	; 0x7e <__bad_interrupt>
  1c:	26 c3       	rjmp	.+1612   	; 0x66a <__vector_14>
  1e:	2f c0       	rjmp	.+94     	; 0x7e <__bad_interrupt>
  20:	2e c0       	rjmp	.+92     	; 0x7e <__bad_interrupt>
  22:	2d c0       	rjmp	.+90     	; 0x7e <__bad_interrupt>
  24:	2c c0       	rjmp	.+88     	; 0x7e <__bad_interrupt>
  26:	2b c0       	rjmp	.+86     	; 0x7e <__bad_interrupt>
  28:	2a c0       	rjmp	.+84     	; 0x7e <__bad_interrupt>
  2a:	29 c0       	rjmp	.+82     	; 0x7e <__bad_interrupt>
  2c:	28 c0       	rjmp	.+80     	; 0x7e <__bad_interrupt>
  2e:	27 c0       	rjmp	.+78     	; 0x7e <__bad_interrupt>
  30:	26 c0       	rjmp	.+76     	; 0x7e <__bad_interrupt>
  32:	25 c0       	rjmp	.+74     	; 0x7e <__bad_interrupt>

00000034 <__c.1872>:
  34:	41 54 4e 45 4c 00                                   ATNEL.

0000003a <__c.1874>:
  3a:	41 54 4e 45 4c 00                                   ATNEL.

00000040 <degree>:
  40:	0e 11 11 11 0e 20 20 20                             .....   

00000048 <__ctors_end>:
  48:	11 24       	eor	r1, r1
  4a:	1f be       	out	0x3f, r1	; 63
  4c:	cf ef       	ldi	r28, 0xFF	; 255
  4e:	d4 e0       	ldi	r29, 0x04	; 4
  50:	de bf       	out	0x3e, r29	; 62
  52:	cd bf       	out	0x3d, r28	; 61

00000054 <__do_copy_data>:
  54:	11 e0       	ldi	r17, 0x01	; 1
  56:	a0 e0       	ldi	r26, 0x00	; 0
  58:	b1 e0       	ldi	r27, 0x01	; 1
  5a:	e2 e1       	ldi	r30, 0x12	; 18
  5c:	f8 e0       	ldi	r31, 0x08	; 8
  5e:	02 c0       	rjmp	.+4      	; 0x64 <__do_copy_data+0x10>
  60:	05 90       	lpm	r0, Z+
  62:	0d 92       	st	X+, r0
  64:	a8 30       	cpi	r26, 0x08	; 8
  66:	b1 07       	cpc	r27, r17
  68:	d9 f7       	brne	.-10     	; 0x60 <__do_copy_data+0xc>

0000006a <__do_clear_bss>:
  6a:	21 e0       	ldi	r18, 0x01	; 1
  6c:	a8 e0       	ldi	r26, 0x08	; 8
  6e:	b1 e0       	ldi	r27, 0x01	; 1
  70:	01 c0       	rjmp	.+2      	; 0x74 <.do_clear_bss_start>

00000072 <.do_clear_bss_loop>:
  72:	1d 92       	st	X+, r1

00000074 <.do_clear_bss_start>:
  74:	a5 33       	cpi	r26, 0x35	; 53
  76:	b2 07       	cpc	r27, r18
  78:	e1 f7       	brne	.-8      	; 0x72 <.do_clear_bss_loop>
  7a:	5f d3       	rcall	.+1726   	; 0x73a <main>
  7c:	c8 c3       	rjmp	.+1936   	; 0x80e <_exit>

0000007e <__bad_interrupt>:
  7e:	c0 cf       	rjmp	.-128    	; 0x0 <__vectors>

00000080 <init_SPI>:
  80:	22 98       	cbi	0x04, 2	; 4
  82:	21 9a       	sbi	0x04, 1	; 4
  84:	22 9a       	sbi	0x04, 2	; 4
  86:	23 9a       	sbi	0x04, 3	; 4
  88:	24 98       	cbi	0x04, 4	; 4
  8a:	25 9a       	sbi	0x04, 5	; 4
  8c:	2a 9a       	sbi	0x05, 2	; 5
  8e:	29 98       	cbi	0x05, 1	; 5
  90:	2a 9a       	sbi	0x05, 2	; 5
  92:	2b 9a       	sbi	0x05, 3	; 5
  94:	2d 9a       	sbi	0x05, 5	; 5
  96:	8c b5       	in	r24, 0x2c	; 44
  98:	82 65       	ori	r24, 0x52	; 82
  9a:	8c bd       	out	0x2c, r24	; 44
  9c:	8d b5       	in	r24, 0x2d	; 45
  9e:	81 60       	ori	r24, 0x01	; 1
  a0:	8d bd       	out	0x2d, r24	; 45
  a2:	08 95       	ret

000000a4 <SPI_WriteReadByte>:
  a4:	8e bd       	out	0x2e, r24	; 46
  a6:	0d b4       	in	r0, 0x2d	; 45
  a8:	07 fe       	sbrs	r0, 7
  aa:	fd cf       	rjmp	.-6      	; 0xa6 <SPI_WriteReadByte+0x2>
  ac:	8e b5       	in	r24, 0x2e	; 46
  ae:	08 95       	ret

000000b0 <SPI_WriteByte>:
  b0:	8e bd       	out	0x2e, r24	; 46
  b2:	0d b4       	in	r0, 0x2d	; 45
  b4:	07 fe       	sbrs	r0, 7
  b6:	fd cf       	rjmp	.-6      	; 0xb2 <SPI_WriteByte+0x2>
  b8:	08 95       	ret

000000ba <SPI_WriteReadDataBuffer>:
  ba:	ef 92       	push	r14
  bc:	ff 92       	push	r15
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	00 d0       	rcall	.+0      	; 0xc8 <SPI_WriteReadDataBuffer+0xe>
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	8c 01       	movw	r16, r24
  ce:	7b 01       	movw	r14, r22
  d0:	0b c0       	rjmp	.+22     	; 0xe8 <SPI_WriteReadDataBuffer+0x2e>
  d2:	f7 01       	movw	r30, r14
  d4:	81 91       	ld	r24, Z+
  d6:	7f 01       	movw	r14, r30
  d8:	49 83       	std	Y+1, r20	; 0x01
  da:	6a 83       	std	Y+2, r22	; 0x02
  dc:	e3 df       	rcall	.-58     	; 0xa4 <SPI_WriteReadByte>
  de:	f8 01       	movw	r30, r16
  e0:	81 93       	st	Z+, r24
  e2:	8f 01       	movw	r16, r30
  e4:	6a 81       	ldd	r22, Y+2	; 0x02
  e6:	49 81       	ldd	r20, Y+1	; 0x01
  e8:	8e 2d       	mov	r24, r14
  ea:	86 1b       	sub	r24, r22
  ec:	84 17       	cp	r24, r20
  ee:	88 f3       	brcs	.-30     	; 0xd2 <SPI_WriteReadDataBuffer+0x18>
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	1f 91       	pop	r17
  fa:	0f 91       	pop	r16
  fc:	ff 90       	pop	r15
  fe:	ef 90       	pop	r14
 100:	08 95       	ret

00000102 <nRF_Read_One_Byte_From_Register>:
 102:	2a 98       	cbi	0x05, 2	; 5
 104:	8f 71       	andi	r24, 0x1F	; 31
 106:	d4 df       	rcall	.-88     	; 0xb0 <SPI_WriteByte>
 108:	8f ef       	ldi	r24, 0xFF	; 255
 10a:	cc df       	rcall	.-104    	; 0xa4 <SPI_WriteReadByte>
 10c:	2a 9a       	sbi	0x05, 2	; 5
 10e:	08 95       	ret

00000110 <nRF_Config_Register>:
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	1f 92       	push	r1
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
 11a:	2a 98       	cbi	0x05, 2	; 5
 11c:	8f 71       	andi	r24, 0x1F	; 31
 11e:	80 62       	ori	r24, 0x20	; 32
 120:	69 83       	std	Y+1, r22	; 0x01
 122:	c6 df       	rcall	.-116    	; 0xb0 <SPI_WriteByte>
 124:	69 81       	ldd	r22, Y+1	; 0x01
 126:	86 2f       	mov	r24, r22
 128:	c3 df       	rcall	.-122    	; 0xb0 <SPI_WriteByte>
 12a:	2a 9a       	sbi	0x05, 2	; 5
 12c:	0f 90       	pop	r0
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <nRF_Write_Register>:
 134:	0f 93       	push	r16
 136:	1f 93       	push	r17
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	1f 92       	push	r1
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	8b 01       	movw	r16, r22
 144:	2a 98       	cbi	0x05, 2	; 5
 146:	8f 71       	andi	r24, 0x1F	; 31
 148:	80 62       	ori	r24, 0x20	; 32
 14a:	49 83       	std	Y+1, r20	; 0x01
 14c:	b1 df       	rcall	.-158    	; 0xb0 <SPI_WriteByte>
 14e:	49 81       	ldd	r20, Y+1	; 0x01
 150:	b8 01       	movw	r22, r16
 152:	c8 01       	movw	r24, r16
 154:	b2 df       	rcall	.-156    	; 0xba <SPI_WriteReadDataBuffer>
 156:	2a 9a       	sbi	0x05, 2	; 5
 158:	0f 90       	pop	r0
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	0f 91       	pop	r16
 162:	08 95       	ret

00000164 <nRF_SET_Transmitter_Adres>:
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	00 d0       	rcall	.+0      	; 0x16a <nRF_SET_Transmitter_Adres+0x6>
 16a:	00 d0       	rcall	.+0      	; 0x16c <nRF_SET_Transmitter_Adres+0x8>
 16c:	1f 92       	push	r1
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	de 01       	movw	r26, r28
 174:	11 96       	adiw	r26, 0x01	; 1
 176:	9e 01       	movw	r18, r28
 178:	2a 5f       	subi	r18, 0xFA	; 250
 17a:	3f 4f       	sbci	r19, 0xFF	; 255
 17c:	fc 01       	movw	r30, r24
 17e:	01 96       	adiw	r24, 0x01	; 1
 180:	e4 91       	lpm	r30, Z
 182:	ed 93       	st	X+, r30
 184:	a2 17       	cp	r26, r18
 186:	b3 07       	cpc	r27, r19
 188:	c9 f7       	brne	.-14     	; 0x17c <nRF_SET_Transmitter_Adres+0x18>
 18a:	45 e0       	ldi	r20, 0x05	; 5
 18c:	be 01       	movw	r22, r28
 18e:	6f 5f       	subi	r22, 0xFF	; 255
 190:	7f 4f       	sbci	r23, 0xFF	; 255
 192:	80 e1       	ldi	r24, 0x10	; 16
 194:	cf df       	rcall	.-98     	; 0x134 <nRF_Write_Register>
 196:	0f 90       	pop	r0
 198:	0f 90       	pop	r0
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	df 91       	pop	r29
 1a2:	cf 91       	pop	r28
 1a4:	08 95       	ret

000001a6 <nRF_SET_Reciver_Addres>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <nRF_SET_Reciver_Addres+0x6>
 1ac:	00 d0       	rcall	.+0      	; 0x1ae <nRF_SET_Reciver_Addres+0x8>
 1ae:	1f 92       	push	r1
 1b0:	cd b7       	in	r28, 0x3d	; 61
 1b2:	de b7       	in	r29, 0x3e	; 62
 1b4:	80 31       	cpi	r24, 0x10	; 16
 1b6:	28 f4       	brcc	.+10     	; 0x1c2 <nRF_SET_Reciver_Addres+0x1c>
 1b8:	8a 30       	cpi	r24, 0x0A	; 10
 1ba:	18 f0       	brcs	.+6      	; 0x1c2 <nRF_SET_Reciver_Addres+0x1c>
 1bc:	8c 30       	cpi	r24, 0x0C	; 12
 1be:	a8 f4       	brcc	.+42     	; 0x1ea <nRF_SET_Reciver_Addres+0x44>
 1c0:	01 c0       	rjmp	.+2      	; 0x1c4 <nRF_SET_Reciver_Addres+0x1e>
 1c2:	8a e0       	ldi	r24, 0x0A	; 10
 1c4:	de 01       	movw	r26, r28
 1c6:	11 96       	adiw	r26, 0x01	; 1
 1c8:	9e 01       	movw	r18, r28
 1ca:	2a 5f       	subi	r18, 0xFA	; 250
 1cc:	3f 4f       	sbci	r19, 0xFF	; 255
 1ce:	fb 01       	movw	r30, r22
 1d0:	6f 5f       	subi	r22, 0xFF	; 255
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	e4 91       	lpm	r30, Z
 1d6:	ed 93       	st	X+, r30
 1d8:	a2 17       	cp	r26, r18
 1da:	b3 07       	cpc	r27, r19
 1dc:	c1 f7       	brne	.-16     	; 0x1ce <nRF_SET_Reciver_Addres+0x28>
 1de:	45 e0       	ldi	r20, 0x05	; 5
 1e0:	be 01       	movw	r22, r28
 1e2:	6f 5f       	subi	r22, 0xFF	; 255
 1e4:	7f 4f       	sbci	r23, 0xFF	; 255
 1e6:	a6 df       	rcall	.-180    	; 0x134 <nRF_Write_Register>
 1e8:	04 c0       	rjmp	.+8      	; 0x1f2 <nRF_SET_Reciver_Addres+0x4c>
 1ea:	fb 01       	movw	r30, r22
 1ec:	64 91       	lpm	r22, Z
 1ee:	69 83       	std	Y+1, r22	; 0x01
 1f0:	8f df       	rcall	.-226    	; 0x110 <nRF_Config_Register>
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	df 91       	pop	r29
 1fe:	cf 91       	pop	r28
 200:	08 95       	ret

00000202 <nRF_Set_State_And_Width_Of_CRC>:
 202:	1f 93       	push	r17
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	1f 92       	push	r1
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	18 2f       	mov	r17, r24
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	69 83       	std	Y+1, r22	; 0x01
 214:	76 df       	rcall	.-276    	; 0x102 <nRF_Read_One_Byte_From_Register>
 216:	69 81       	ldd	r22, Y+1	; 0x01
 218:	11 30       	cpi	r17, 0x01	; 1
 21a:	09 f4       	brne	.+2      	; 0x21e <nRF_Set_State_And_Width_Of_CRC+0x1c>
 21c:	04 c0       	rjmp	.+8      	; 0x226 <nRF_Set_State_And_Width_Of_CRC+0x24>
 21e:	12 30       	cpi	r17, 0x02	; 2
 220:	11 f4       	brne	.+4      	; 0x226 <nRF_Set_State_And_Width_Of_CRC+0x24>
 222:	84 60       	ori	r24, 0x04	; 4
 224:	01 c0       	rjmp	.+2      	; 0x228 <nRF_Set_State_And_Width_Of_CRC+0x26>
 226:	8b 7f       	andi	r24, 0xFB	; 251
 228:	61 30       	cpi	r22, 0x01	; 1
 22a:	11 f4       	brne	.+4      	; 0x230 <nRF_Set_State_And_Width_Of_CRC+0x2e>
 22c:	88 60       	ori	r24, 0x08	; 8
 22e:	03 c0       	rjmp	.+6      	; 0x236 <nRF_Set_State_And_Width_Of_CRC+0x34>
 230:	62 30       	cpi	r22, 0x02	; 2
 232:	09 f4       	brne	.+2      	; 0x236 <nRF_Set_State_And_Width_Of_CRC+0x34>
 234:	87 7f       	andi	r24, 0xF7	; 247
 236:	68 2f       	mov	r22, r24
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	0f 90       	pop	r0
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	1f 91       	pop	r17
 242:	66 cf       	rjmp	.-308    	; 0x110 <nRF_Config_Register>

00000244 <nRF_RX_Power_Up>:
 244:	29 98       	cbi	0x05, 1	; 5
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	5c df       	rcall	.-328    	; 0x102 <nRF_Read_One_Byte_From_Register>
 24a:	68 2f       	mov	r22, r24
 24c:	63 60       	ori	r22, 0x03	; 3
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	5f df       	rcall	.-322    	; 0x110 <nRF_Config_Register>
 252:	29 9a       	sbi	0x05, 1	; 5
 254:	83 e0       	ldi	r24, 0x03	; 3
 256:	91 e0       	ldi	r25, 0x01	; 1
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <nRF_RX_Power_Up+0x14>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <nRF_RX_Power_Up+0x1a>
 25e:	00 00       	nop
 260:	08 95       	ret

00000262 <nRF_RX_EVENT>:
 262:	ff 92       	push	r15
 264:	0f 93       	push	r16
 266:	1f 93       	push	r17
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	80 91 08 01 	lds	r24, 0x0108
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	19 f4       	brne	.+6      	; 0x27a <nRF_RX_EVENT+0x18>
 274:	e7 df       	rcall	.-50     	; 0x244 <nRF_RX_Power_Up>
 276:	10 92 08 01 	sts	0x0108, r1
 27a:	80 91 2f 01 	lds	r24, 0x012F
 27e:	88 23       	and	r24, r24
 280:	c9 f1       	breq	.+114    	; 0x2f4 <nRF_RX_EVENT+0x92>
 282:	29 98       	cbi	0x05, 1	; 5
 284:	10 92 2f 01 	sts	0x012F, r1
 288:	8b e0       	ldi	r24, 0x0B	; 11
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	08 2f       	mov	r16, r24
 28e:	2a 98       	cbi	0x05, 2	; 5
 290:	80 e6       	ldi	r24, 0x60	; 96
 292:	0e df       	rcall	.-484    	; 0xb0 <SPI_WriteByte>
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	06 df       	rcall	.-500    	; 0xa4 <SPI_WriteReadByte>
 298:	18 2f       	mov	r17, r24
 29a:	2a 9a       	sbi	0x05, 2	; 5
 29c:	81 32       	cpi	r24, 0x21	; 33
 29e:	50 f0       	brcs	.+20     	; 0x2b4 <nRF_RX_EVENT+0x52>
 2a0:	2a 98       	cbi	0x05, 2	; 5
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	ff de       	rcall	.-514    	; 0xa4 <SPI_WriteReadByte>
 2a6:	2a 9a       	sbi	0x05, 2	; 5
 2a8:	68 2f       	mov	r22, r24
 2aa:	60 64       	ori	r22, 0x40	; 64
 2ac:	87 e0       	ldi	r24, 0x07	; 7
 2ae:	30 df       	rcall	.-416    	; 0x110 <nRF_Config_Register>
 2b0:	29 9a       	sbi	0x05, 1	; 5
 2b2:	20 c0       	rjmp	.+64     	; 0x2f4 <nRF_RX_EVENT+0x92>
 2b4:	2a 98       	cbi	0x05, 2	; 5
 2b6:	81 e6       	ldi	r24, 0x61	; 97
 2b8:	fb de       	rcall	.-522    	; 0xb0 <SPI_WriteByte>
 2ba:	cb e0       	ldi	r28, 0x0B	; 11
 2bc:	d1 e0       	ldi	r29, 0x01	; 1
 2be:	f1 2e       	mov	r15, r17
 2c0:	f0 0e       	add	r15, r16
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <nRF_RX_EVENT+0x68>
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	ee de       	rcall	.-548    	; 0xa4 <SPI_WriteReadByte>
 2c8:	89 93       	st	Y+, r24
 2ca:	fc 12       	cpse	r15, r28
 2cc:	fb cf       	rjmp	.-10     	; 0x2c4 <nRF_RX_EVENT+0x62>
 2ce:	2a 9a       	sbi	0x05, 2	; 5
 2d0:	87 e1       	ldi	r24, 0x17	; 23
 2d2:	17 df       	rcall	.-466    	; 0x102 <nRF_Read_One_Byte_From_Register>
 2d4:	c8 2f       	mov	r28, r24
 2d6:	11 23       	and	r17, r17
 2d8:	51 f0       	breq	.+20     	; 0x2ee <nRF_RX_EVENT+0x8c>
 2da:	e0 91 09 01 	lds	r30, 0x0109
 2de:	f0 91 0a 01 	lds	r31, 0x010A
 2e2:	30 97       	sbiw	r30, 0x00	; 0
 2e4:	21 f0       	breq	.+8      	; 0x2ee <nRF_RX_EVENT+0x8c>
 2e6:	61 2f       	mov	r22, r17
 2e8:	8b e0       	ldi	r24, 0x0B	; 11
 2ea:	91 e0       	ldi	r25, 0x01	; 1
 2ec:	09 95       	icall
 2ee:	c0 ff       	sbrs	r28, 0
 2f0:	ce cf       	rjmp	.-100    	; 0x28e <nRF_RX_EVENT+0x2c>
 2f2:	d6 cf       	rjmp	.-84     	; 0x2a0 <nRF_RX_EVENT+0x3e>
 2f4:	df 91       	pop	r29
 2f6:	cf 91       	pop	r28
 2f8:	1f 91       	pop	r17
 2fa:	0f 91       	pop	r16
 2fc:	ff 90       	pop	r15
 2fe:	08 95       	ret

00000300 <nRF_Set_Channel>:
 300:	68 2f       	mov	r22, r24
 302:	6f 77       	andi	r22, 0x7F	; 127
 304:	85 e0       	ldi	r24, 0x05	; 5
 306:	04 cf       	rjmp	.-504    	; 0x110 <nRF_Config_Register>

00000308 <nRF_Clear_TX>:
 308:	2a 98       	cbi	0x05, 2	; 5
 30a:	81 ee       	ldi	r24, 0xE1	; 225
 30c:	d1 de       	rcall	.-606    	; 0xb0 <SPI_WriteByte>
 30e:	2a 9a       	sbi	0x05, 2	; 5
 310:	08 95       	ret

00000312 <nRF_Clear_RX>:
 312:	2a 98       	cbi	0x05, 2	; 5
 314:	82 ee       	ldi	r24, 0xE2	; 226
 316:	cc de       	rcall	.-616    	; 0xb0 <SPI_WriteByte>
 318:	2a 9a       	sbi	0x05, 2	; 5
 31a:	08 95       	ret

0000031c <nRF_Set_Active_DataPipe_And_ACK>:
 31c:	0f 93       	push	r16
 31e:	1f 93       	push	r17
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	1f 92       	push	r1
 326:	cd b7       	in	r28, 0x3d	; 61
 328:	de b7       	in	r29, 0x3e	; 62
 32a:	18 2f       	mov	r17, r24
 32c:	04 2f       	mov	r16, r20
 32e:	82 e0       	ldi	r24, 0x02	; 2
 330:	69 83       	std	Y+1, r22	; 0x01
 332:	e7 de       	rcall	.-562    	; 0x102 <nRF_Read_One_Byte_From_Register>
 334:	98 2f       	mov	r25, r24
 336:	69 81       	ldd	r22, Y+1	; 0x01
 338:	61 30       	cpi	r22, 0x01	; 1
 33a:	11 f4       	brne	.+4      	; 0x340 <nRF_Set_Active_DataPipe_And_ACK+0x24>
 33c:	91 2b       	or	r25, r17
 33e:	05 c0       	rjmp	.+10     	; 0x34a <nRF_Set_Active_DataPipe_And_ACK+0x2e>
 340:	62 30       	cpi	r22, 0x02	; 2
 342:	19 f4       	brne	.+6      	; 0x34a <nRF_Set_Active_DataPipe_And_ACK+0x2e>
 344:	81 2f       	mov	r24, r17
 346:	80 95       	com	r24
 348:	98 23       	and	r25, r24
 34a:	69 2f       	mov	r22, r25
 34c:	82 e0       	ldi	r24, 0x02	; 2
 34e:	e0 de       	rcall	.-576    	; 0x110 <nRF_Config_Register>
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	d7 de       	rcall	.-594    	; 0x102 <nRF_Read_One_Byte_From_Register>
 354:	68 2f       	mov	r22, r24
 356:	01 30       	cpi	r16, 0x01	; 1
 358:	11 f4       	brne	.+4      	; 0x35e <nRF_Set_Active_DataPipe_And_ACK+0x42>
 35a:	61 2b       	or	r22, r17
 35c:	04 c0       	rjmp	.+8      	; 0x366 <nRF_Set_Active_DataPipe_And_ACK+0x4a>
 35e:	02 30       	cpi	r16, 0x02	; 2
 360:	11 f4       	brne	.+4      	; 0x366 <nRF_Set_Active_DataPipe_And_ACK+0x4a>
 362:	10 95       	com	r17
 364:	61 23       	and	r22, r17
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	0f 90       	pop	r0
 36a:	df 91       	pop	r29
 36c:	cf 91       	pop	r28
 36e:	1f 91       	pop	r17
 370:	0f 91       	pop	r16
 372:	ce ce       	rjmp	.-612    	; 0x110 <nRF_Config_Register>

00000374 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>:
 374:	cf 93       	push	r28
 376:	c6 2f       	mov	r28, r22
 378:	68 2f       	mov	r22, r24
 37a:	8c e1       	ldi	r24, 0x1C	; 28
 37c:	c9 de       	rcall	.-622    	; 0x110 <nRF_Config_Register>
 37e:	8d e1       	ldi	r24, 0x1D	; 29
 380:	c0 de       	rcall	.-640    	; 0x102 <nRF_Read_One_Byte_From_Register>
 382:	c1 30       	cpi	r28, 0x01	; 1
 384:	11 f4       	brne	.+4      	; 0x38a <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x16>
 386:	84 60       	ori	r24, 0x04	; 4
 388:	03 c0       	rjmp	.+6      	; 0x390 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1c>
 38a:	c2 30       	cpi	r28, 0x02	; 2
 38c:	09 f4       	brne	.+2      	; 0x390 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1c>
 38e:	8b 7f       	andi	r24, 0xFB	; 251
 390:	68 2f       	mov	r22, r24
 392:	8d e1       	ldi	r24, 0x1D	; 29
 394:	cf 91       	pop	r28
 396:	bc ce       	rjmp	.-648    	; 0x110 <nRF_Config_Register>

00000398 <Initialize_INTERRUPT_For_nRF>:
 398:	e8 9a       	sbi	0x1d, 0	; 29
 39a:	e9 e6       	ldi	r30, 0x69	; 105
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	80 81       	ld	r24, Z
 3a0:	82 60       	ori	r24, 0x02	; 2
 3a2:	80 83       	st	Z, r24
 3a4:	08 95       	ret

000003a6 <nRF_init>:
 3a6:	6c de       	rcall	.-808    	; 0x80 <init_SPI>
 3a8:	f7 df       	rcall	.-18     	; 0x398 <Initialize_INTERRUPT_For_nRF>
 3aa:	84 e3       	ldi	r24, 0x34	; 52
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	da de       	rcall	.-588    	; 0x164 <nRF_SET_Transmitter_Adres>
 3b0:	6a e3       	ldi	r22, 0x3A	; 58
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	8a e0       	ldi	r24, 0x0A	; 10
 3b6:	f7 de       	rcall	.-530    	; 0x1a6 <nRF_SET_Reciver_Addres>
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	a9 de       	rcall	.-686    	; 0x110 <nRF_Config_Register>
 3be:	a9 df       	rcall	.-174    	; 0x312 <nRF_Clear_RX>
 3c0:	a3 df       	rcall	.-186    	; 0x308 <nRF_Clear_TX>
 3c2:	61 e0       	ldi	r22, 0x01	; 1
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	1d df       	rcall	.-454    	; 0x202 <nRF_Set_State_And_Width_Of_CRC>
 3c8:	8a e0       	ldi	r24, 0x0A	; 10
 3ca:	9a df       	rcall	.-204    	; 0x300 <nRF_Set_Channel>
 3cc:	41 e0       	ldi	r20, 0x01	; 1
 3ce:	61 e0       	ldi	r22, 0x01	; 1
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	a4 df       	rcall	.-184    	; 0x31c <nRF_Set_Active_DataPipe_And_ACK>
 3d4:	6f ef       	ldi	r22, 0xFF	; 255
 3d6:	84 e0       	ldi	r24, 0x04	; 4
 3d8:	9b de       	rcall	.-714    	; 0x110 <nRF_Config_Register>
 3da:	66 e0       	ldi	r22, 0x06	; 6
 3dc:	86 e0       	ldi	r24, 0x06	; 6
 3de:	98 de       	rcall	.-720    	; 0x110 <nRF_Config_Register>
 3e0:	61 e0       	ldi	r22, 0x01	; 1
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	c7 df       	rcall	.-114    	; 0x374 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	80 93 2f 01 	sts	0x012F, r24
 3ec:	10 92 2c 01 	sts	0x012C, r1
 3f0:	60 e7       	ldi	r22, 0x70	; 112
 3f2:	87 e0       	ldi	r24, 0x07	; 7
 3f4:	8d ce       	rjmp	.-742    	; 0x110 <nRF_Config_Register>

000003f6 <__vector_1>:
 3f6:	1f 92       	push	r1
 3f8:	0f 92       	push	r0
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	0f 92       	push	r0
 3fe:	11 24       	eor	r1, r1
 400:	2f 93       	push	r18
 402:	3f 93       	push	r19
 404:	4f 93       	push	r20
 406:	5f 93       	push	r21
 408:	6f 93       	push	r22
 40a:	7f 93       	push	r23
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	af 93       	push	r26
 412:	bf 93       	push	r27
 414:	cf 93       	push	r28
 416:	ef 93       	push	r30
 418:	ff 93       	push	r31
 41a:	2a 98       	cbi	0x05, 2	; 5
 41c:	8f ef       	ldi	r24, 0xFF	; 255
 41e:	42 de       	rcall	.-892    	; 0xa4 <SPI_WriteReadByte>
 420:	c8 2f       	mov	r28, r24
 422:	2a 9a       	sbi	0x05, 2	; 5
 424:	86 ff       	sbrs	r24, 6
 426:	03 c0       	rjmp	.+6      	; 0x42e <__vector_1+0x38>
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	80 93 2f 01 	sts	0x012F, r24
 42e:	c5 ff       	sbrs	r28, 5
 430:	0a c0       	rjmp	.+20     	; 0x446 <__vector_1+0x50>
 432:	c0 62       	ori	r28, 0x20	; 32
 434:	6c 2f       	mov	r22, r28
 436:	87 e0       	ldi	r24, 0x07	; 7
 438:	6b de       	rcall	.-810    	; 0x110 <nRF_Config_Register>
 43a:	10 92 2c 01 	sts	0x012C, r1
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	80 93 08 01 	sts	0x0108, r24
 444:	29 98       	cbi	0x05, 1	; 5
 446:	c4 ff       	sbrs	r28, 4
 448:	0b c0       	rjmp	.+22     	; 0x460 <__vector_1+0x6a>
 44a:	6c 2f       	mov	r22, r28
 44c:	60 63       	ori	r22, 0x30	; 48
 44e:	87 e0       	ldi	r24, 0x07	; 7
 450:	5f de       	rcall	.-834    	; 0x110 <nRF_Config_Register>
 452:	10 92 2c 01 	sts	0x012C, r1
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	80 93 08 01 	sts	0x0108, r24
 45c:	55 df       	rcall	.-342    	; 0x308 <nRF_Clear_TX>
 45e:	29 98       	cbi	0x05, 1	; 5
 460:	ff 91       	pop	r31
 462:	ef 91       	pop	r30
 464:	cf 91       	pop	r28
 466:	bf 91       	pop	r27
 468:	af 91       	pop	r26
 46a:	9f 91       	pop	r25
 46c:	8f 91       	pop	r24
 46e:	7f 91       	pop	r23
 470:	6f 91       	pop	r22
 472:	5f 91       	pop	r21
 474:	4f 91       	pop	r20
 476:	3f 91       	pop	r19
 478:	2f 91       	pop	r18
 47a:	0f 90       	pop	r0
 47c:	0f be       	out	0x3f, r0	; 63
 47e:	0f 90       	pop	r0
 480:	1f 90       	pop	r1
 482:	18 95       	reti

00000484 <data_dir_out>:
 484:	50 9a       	sbi	0x0a, 0	; 10
 486:	3d 9a       	sbi	0x07, 5	; 7
 488:	3c 9a       	sbi	0x07, 4	; 7
 48a:	3b 9a       	sbi	0x07, 3	; 7
 48c:	08 95       	ret

0000048e <lcd_readHalf>:
 48e:	86 b1       	in	r24, 0x06	; 6
 490:	83 fb       	bst	r24, 3
 492:	88 27       	eor	r24, r24
 494:	80 f9       	bld	r24, 0
 496:	34 99       	sbic	0x06, 4	; 6
 498:	82 60       	ori	r24, 0x02	; 2
 49a:	35 99       	sbic	0x06, 5	; 6
 49c:	84 60       	ori	r24, 0x04	; 4
 49e:	48 99       	sbic	0x09, 0	; 9
 4a0:	88 60       	ori	r24, 0x08	; 8
 4a2:	08 95       	ret

000004a4 <lcd_sendHalf>:
 4a4:	80 ff       	sbrs	r24, 0
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <lcd_sendHalf+0x8>
 4a8:	43 9a       	sbi	0x08, 3	; 8
 4aa:	01 c0       	rjmp	.+2      	; 0x4ae <lcd_sendHalf+0xa>
 4ac:	43 98       	cbi	0x08, 3	; 8
 4ae:	81 ff       	sbrs	r24, 1
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <lcd_sendHalf+0x12>
 4b2:	44 9a       	sbi	0x08, 4	; 8
 4b4:	01 c0       	rjmp	.+2      	; 0x4b8 <lcd_sendHalf+0x14>
 4b6:	44 98       	cbi	0x08, 4	; 8
 4b8:	82 ff       	sbrs	r24, 2
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <lcd_sendHalf+0x1c>
 4bc:	45 9a       	sbi	0x08, 5	; 8
 4be:	01 c0       	rjmp	.+2      	; 0x4c2 <lcd_sendHalf+0x1e>
 4c0:	45 98       	cbi	0x08, 5	; 8
 4c2:	83 ff       	sbrs	r24, 3
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <lcd_sendHalf+0x26>
 4c6:	58 9a       	sbi	0x0b, 0	; 11
 4c8:	08 95       	ret
 4ca:	58 98       	cbi	0x0b, 0	; 11
 4cc:	08 95       	ret

000004ce <_lcd_read_byte>:
 4ce:	cf 93       	push	r28
 4d0:	50 98       	cbi	0x0a, 0	; 10
 4d2:	3d 98       	cbi	0x07, 5	; 7
 4d4:	3c 98       	cbi	0x07, 4	; 7
 4d6:	3b 98       	cbi	0x07, 3	; 7
 4d8:	41 9a       	sbi	0x08, 1	; 8
 4da:	42 9a       	sbi	0x08, 2	; 8
 4dc:	d8 df       	rcall	.-80     	; 0x48e <lcd_readHalf>
 4de:	c8 2f       	mov	r28, r24
 4e0:	c2 95       	swap	r28
 4e2:	c0 7f       	andi	r28, 0xF0	; 240
 4e4:	42 98       	cbi	0x08, 2	; 8
 4e6:	42 9a       	sbi	0x08, 2	; 8
 4e8:	d2 df       	rcall	.-92     	; 0x48e <lcd_readHalf>
 4ea:	42 98       	cbi	0x08, 2	; 8
 4ec:	8c 2b       	or	r24, r28
 4ee:	cf 91       	pop	r28
 4f0:	08 95       	ret

000004f2 <check_BF>:
 4f2:	40 98       	cbi	0x08, 0	; 8
 4f4:	ec cf       	rjmp	.-40     	; 0x4ce <_lcd_read_byte>

000004f6 <_lcd_write_byte>:
 4f6:	cf 93       	push	r28
 4f8:	c8 2f       	mov	r28, r24
 4fa:	c4 df       	rcall	.-120    	; 0x484 <data_dir_out>
 4fc:	41 98       	cbi	0x08, 1	; 8
 4fe:	42 9a       	sbi	0x08, 2	; 8
 500:	8c 2f       	mov	r24, r28
 502:	82 95       	swap	r24
 504:	8f 70       	andi	r24, 0x0F	; 15
 506:	ce df       	rcall	.-100    	; 0x4a4 <lcd_sendHalf>
 508:	42 98       	cbi	0x08, 2	; 8
 50a:	42 9a       	sbi	0x08, 2	; 8
 50c:	8c 2f       	mov	r24, r28
 50e:	ca df       	rcall	.-108    	; 0x4a4 <lcd_sendHalf>
 510:	42 98       	cbi	0x08, 2	; 8
 512:	ef df       	rcall	.-34     	; 0x4f2 <check_BF>
 514:	87 fd       	sbrc	r24, 7
 516:	fd cf       	rjmp	.-6      	; 0x512 <__stack+0x13>
 518:	cf 91       	pop	r28
 51a:	08 95       	ret

0000051c <lcd_write_cmd>:
 51c:	40 98       	cbi	0x08, 0	; 8
 51e:	eb cf       	rjmp	.-42     	; 0x4f6 <_lcd_write_byte>

00000520 <lcd_write_data>:
 520:	40 9a       	sbi	0x08, 0	; 8
 522:	e9 cf       	rjmp	.-46     	; 0x4f6 <_lcd_write_byte>

00000524 <lcd_char>:
 524:	98 2f       	mov	r25, r24
 526:	90 58       	subi	r25, 0x80	; 128
 528:	98 30       	cpi	r25, 0x08	; 8
 52a:	08 f4       	brcc	.+2      	; 0x52e <lcd_char+0xa>
 52c:	87 70       	andi	r24, 0x07	; 7
 52e:	f8 cf       	rjmp	.-16     	; 0x520 <lcd_write_data>

00000530 <lcd_str>:
 530:	cf 93       	push	r28
 532:	df 93       	push	r29
 534:	ec 01       	movw	r28, r24
 536:	01 c0       	rjmp	.+2      	; 0x53a <lcd_str+0xa>
 538:	f5 df       	rcall	.-22     	; 0x524 <lcd_char>
 53a:	89 91       	ld	r24, Y+
 53c:	81 11       	cpse	r24, r1
 53e:	fc cf       	rjmp	.-8      	; 0x538 <lcd_str+0x8>
 540:	df 91       	pop	r29
 542:	cf 91       	pop	r28
 544:	08 95       	ret

00000546 <lcd_int>:
 546:	cf 93       	push	r28
 548:	df 93       	push	r29
 54a:	cd b7       	in	r28, 0x3d	; 61
 54c:	de b7       	in	r29, 0x3e	; 62
 54e:	61 97       	sbiw	r28, 0x11	; 17
 550:	0f b6       	in	r0, 0x3f	; 63
 552:	f8 94       	cli
 554:	de bf       	out	0x3e, r29	; 62
 556:	0f be       	out	0x3f, r0	; 63
 558:	cd bf       	out	0x3d, r28	; 61
 55a:	4a e0       	ldi	r20, 0x0A	; 10
 55c:	50 e0       	ldi	r21, 0x00	; 0
 55e:	be 01       	movw	r22, r28
 560:	6f 5f       	subi	r22, 0xFF	; 255
 562:	7f 4f       	sbci	r23, 0xFF	; 255
 564:	25 d1       	rcall	.+586    	; 0x7b0 <itoa>
 566:	e4 df       	rcall	.-56     	; 0x530 <lcd_str>
 568:	61 96       	adiw	r28, 0x11	; 17
 56a:	0f b6       	in	r0, 0x3f	; 63
 56c:	f8 94       	cli
 56e:	de bf       	out	0x3e, r29	; 62
 570:	0f be       	out	0x3f, r0	; 63
 572:	cd bf       	out	0x3d, r28	; 61
 574:	df 91       	pop	r29
 576:	cf 91       	pop	r28
 578:	08 95       	ret

0000057a <lcd_defchar_P>:
 57a:	0f 93       	push	r16
 57c:	1f 93       	push	r17
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
 582:	eb 01       	movw	r28, r22
 584:	87 70       	andi	r24, 0x07	; 7
 586:	88 0f       	add	r24, r24
 588:	88 0f       	add	r24, r24
 58a:	88 0f       	add	r24, r24
 58c:	80 5c       	subi	r24, 0xC0	; 192
 58e:	c6 df       	rcall	.-116    	; 0x51c <lcd_write_cmd>
 590:	8e 01       	movw	r16, r28
 592:	08 5f       	subi	r16, 0xF8	; 248
 594:	1f 4f       	sbci	r17, 0xFF	; 255
 596:	fe 01       	movw	r30, r28
 598:	21 96       	adiw	r28, 0x01	; 1
 59a:	84 91       	lpm	r24, Z
 59c:	c1 df       	rcall	.-126    	; 0x520 <lcd_write_data>
 59e:	c0 17       	cp	r28, r16
 5a0:	d1 07       	cpc	r29, r17
 5a2:	c9 f7       	brne	.-14     	; 0x596 <lcd_defchar_P+0x1c>
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	1f 91       	pop	r17
 5aa:	0f 91       	pop	r16
 5ac:	08 95       	ret

000005ae <lcd_locate>:
 5ae:	81 30       	cpi	r24, 0x01	; 1
 5b0:	09 f4       	brne	.+2      	; 0x5b4 <lcd_locate+0x6>
 5b2:	80 e4       	ldi	r24, 0x40	; 64
 5b4:	60 58       	subi	r22, 0x80	; 128
 5b6:	86 0f       	add	r24, r22
 5b8:	b1 cf       	rjmp	.-158    	; 0x51c <lcd_write_cmd>

000005ba <lcd_cls>:
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	af cf       	rjmp	.-162    	; 0x51c <lcd_write_cmd>

000005be <lcd_init>:
 5be:	51 9a       	sbi	0x0a, 1	; 10
 5c0:	59 9a       	sbi	0x0b, 1	; 11
 5c2:	60 df       	rcall	.-320    	; 0x484 <data_dir_out>
 5c4:	38 9a       	sbi	0x07, 0	; 7
 5c6:	3a 9a       	sbi	0x07, 2	; 7
 5c8:	39 9a       	sbi	0x07, 1	; 7
 5ca:	40 9a       	sbi	0x08, 0	; 8
 5cc:	42 9a       	sbi	0x08, 2	; 8
 5ce:	41 9a       	sbi	0x08, 1	; 8
 5d0:	8f e2       	ldi	r24, 0x2F	; 47
 5d2:	95 e7       	ldi	r25, 0x75	; 117
 5d4:	01 97       	sbiw	r24, 0x01	; 1
 5d6:	f1 f7       	brne	.-4      	; 0x5d4 <lcd_init+0x16>
 5d8:	00 c0       	rjmp	.+0      	; 0x5da <lcd_init+0x1c>
 5da:	00 00       	nop
 5dc:	42 98       	cbi	0x08, 2	; 8
 5de:	40 98       	cbi	0x08, 0	; 8
 5e0:	41 98       	cbi	0x08, 1	; 8
 5e2:	42 9a       	sbi	0x08, 2	; 8
 5e4:	83 e0       	ldi	r24, 0x03	; 3
 5e6:	5e df       	rcall	.-324    	; 0x4a4 <lcd_sendHalf>
 5e8:	42 98       	cbi	0x08, 2	; 8
 5ea:	87 e0       	ldi	r24, 0x07	; 7
 5ec:	90 e2       	ldi	r25, 0x20	; 32
 5ee:	01 97       	sbiw	r24, 0x01	; 1
 5f0:	f1 f7       	brne	.-4      	; 0x5ee <lcd_init+0x30>
 5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <lcd_init+0x36>
 5f4:	00 00       	nop
 5f6:	42 9a       	sbi	0x08, 2	; 8
 5f8:	83 e0       	ldi	r24, 0x03	; 3
 5fa:	54 df       	rcall	.-344    	; 0x4a4 <lcd_sendHalf>
 5fc:	42 98       	cbi	0x08, 2	; 8
 5fe:	87 ec       	ldi	r24, 0xC7	; 199
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	01 97       	sbiw	r24, 0x01	; 1
 604:	f1 f7       	brne	.-4      	; 0x602 <lcd_init+0x44>
 606:	00 c0       	rjmp	.+0      	; 0x608 <lcd_init+0x4a>
 608:	00 00       	nop
 60a:	42 9a       	sbi	0x08, 2	; 8
 60c:	83 e0       	ldi	r24, 0x03	; 3
 60e:	4a df       	rcall	.-364    	; 0x4a4 <lcd_sendHalf>
 610:	42 98       	cbi	0x08, 2	; 8
 612:	87 ec       	ldi	r24, 0xC7	; 199
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	01 97       	sbiw	r24, 0x01	; 1
 618:	f1 f7       	brne	.-4      	; 0x616 <lcd_init+0x58>
 61a:	00 c0       	rjmp	.+0      	; 0x61c <lcd_init+0x5e>
 61c:	00 00       	nop
 61e:	42 9a       	sbi	0x08, 2	; 8
 620:	82 e0       	ldi	r24, 0x02	; 2
 622:	40 df       	rcall	.-384    	; 0x4a4 <lcd_sendHalf>
 624:	42 98       	cbi	0x08, 2	; 8
 626:	87 ec       	ldi	r24, 0xC7	; 199
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	01 97       	sbiw	r24, 0x01	; 1
 62c:	f1 f7       	brne	.-4      	; 0x62a <lcd_init+0x6c>
 62e:	00 c0       	rjmp	.+0      	; 0x630 <lcd_init+0x72>
 630:	00 00       	nop
 632:	88 e2       	ldi	r24, 0x28	; 40
 634:	73 df       	rcall	.-282    	; 0x51c <lcd_write_cmd>
 636:	88 e0       	ldi	r24, 0x08	; 8
 638:	71 df       	rcall	.-286    	; 0x51c <lcd_write_cmd>
 63a:	8c e0       	ldi	r24, 0x0C	; 12
 63c:	6f df       	rcall	.-290    	; 0x51c <lcd_write_cmd>
 63e:	86 e0       	ldi	r24, 0x06	; 6
 640:	6d df       	rcall	.-294    	; 0x51c <lcd_write_cmd>
 642:	bb cf       	rjmp	.-138    	; 0x5ba <lcd_cls>

00000644 <i2cSetBitrate>:
 644:	bc 01       	movw	r22, r24
 646:	80 e4       	ldi	r24, 0x40	; 64
 648:	9f e1       	ldi	r25, 0x1F	; 31
 64a:	9e d0       	rcall	.+316    	; 0x788 <__udivmodhi4>
 64c:	86 2f       	mov	r24, r22
 64e:	60 31       	cpi	r22, 0x10	; 16
 650:	48 f0       	brcs	.+18     	; 0x664 <i2cSetBitrate+0x20>
 652:	77 27       	eor	r23, r23
 654:	cb 01       	movw	r24, r22
 656:	40 97       	sbiw	r24, 0x10	; 16
 658:	97 ff       	sbrs	r25, 7
 65a:	02 c0       	rjmp	.+4      	; 0x660 <i2cSetBitrate+0x1c>
 65c:	cb 01       	movw	r24, r22
 65e:	0f 97       	sbiw	r24, 0x0f	; 15
 660:	95 95       	asr	r25
 662:	87 95       	ror	r24
 664:	80 93 b8 00 	sts	0x00B8, r24
 668:	08 95       	ret

0000066a <__vector_14>:
 66a:	1f 92       	push	r1
 66c:	0f 92       	push	r0
 66e:	0f b6       	in	r0, 0x3f	; 63
 670:	0f 92       	push	r0
 672:	11 24       	eor	r1, r1
 674:	8f 93       	push	r24
 676:	9f 93       	push	r25
 678:	80 91 30 01 	lds	r24, 0x0130
 67c:	90 91 31 01 	lds	r25, 0x0131
 680:	00 97       	sbiw	r24, 0x00	; 0
 682:	29 f0       	breq	.+10     	; 0x68e <__vector_14+0x24>
 684:	01 97       	sbiw	r24, 0x01	; 1
 686:	90 93 31 01 	sts	0x0131, r25
 68a:	80 93 30 01 	sts	0x0130, r24
 68e:	9f 91       	pop	r25
 690:	8f 91       	pop	r24
 692:	0f 90       	pop	r0
 694:	0f be       	out	0x3f, r0	; 63
 696:	0f 90       	pop	r0
 698:	1f 90       	pop	r1
 69a:	18 95       	reti

0000069c <receive_and_display>:
 69c:	cf 93       	push	r28
 69e:	df 93       	push	r29
 6a0:	cd b7       	in	r28, 0x3d	; 61
 6a2:	de b7       	in	r29, 0x3e	; 62
 6a4:	2d 97       	sbiw	r28, 0x0d	; 13
 6a6:	0f b6       	in	r0, 0x3f	; 63
 6a8:	f8 94       	cli
 6aa:	de bf       	out	0x3e, r29	; 62
 6ac:	0f be       	out	0x3f, r0	; 63
 6ae:	cd bf       	out	0x3d, r28	; 61
 6b0:	84 df       	rcall	.-248    	; 0x5ba <lcd_cls>
 6b2:	de 01       	movw	r26, r28
 6b4:	11 96       	adiw	r26, 0x01	; 1
 6b6:	8d e0       	ldi	r24, 0x0D	; 13
 6b8:	fd 01       	movw	r30, r26
 6ba:	11 92       	st	Z+, r1
 6bc:	8a 95       	dec	r24
 6be:	e9 f7       	brne	.-6      	; 0x6ba <receive_and_display+0x1e>
 6c0:	eb e0       	ldi	r30, 0x0B	; 11
 6c2:	f1 e0       	ldi	r31, 0x01	; 1
 6c4:	81 91       	ld	r24, Z+
 6c6:	8d 93       	st	X+, r24
 6c8:	81 e0       	ldi	r24, 0x01	; 1
 6ca:	e8 31       	cpi	r30, 0x18	; 24
 6cc:	f8 07       	cpc	r31, r24
 6ce:	d1 f7       	brne	.-12     	; 0x6c4 <receive_and_display+0x28>
 6d0:	60 e0       	ldi	r22, 0x00	; 0
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	6c df       	rcall	.-296    	; 0x5ae <lcd_locate>
 6d6:	89 81       	ldd	r24, Y+1	; 0x01
 6d8:	25 df       	rcall	.-438    	; 0x524 <lcd_char>
 6da:	8a 81       	ldd	r24, Y+2	; 0x02
 6dc:	23 df       	rcall	.-442    	; 0x524 <lcd_char>
 6de:	8e e2       	ldi	r24, 0x2E	; 46
 6e0:	21 df       	rcall	.-446    	; 0x524 <lcd_char>
 6e2:	8b 81       	ldd	r24, Y+3	; 0x03
 6e4:	1f df       	rcall	.-450    	; 0x524 <lcd_char>
 6e6:	80 e8       	ldi	r24, 0x80	; 128
 6e8:	1d df       	rcall	.-454    	; 0x524 <lcd_char>
 6ea:	83 e4       	ldi	r24, 0x43	; 67
 6ec:	1b df       	rcall	.-458    	; 0x524 <lcd_char>
 6ee:	6b e0       	ldi	r22, 0x0B	; 11
 6f0:	80 e0       	ldi	r24, 0x00	; 0
 6f2:	5d df       	rcall	.-326    	; 0x5ae <lcd_locate>
 6f4:	8a 85       	ldd	r24, Y+10	; 0x0a
 6f6:	16 df       	rcall	.-468    	; 0x524 <lcd_char>
 6f8:	8b 85       	ldd	r24, Y+11	; 0x0b
 6fa:	14 df       	rcall	.-472    	; 0x524 <lcd_char>
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	91 e0       	ldi	r25, 0x01	; 1
 700:	17 df       	rcall	.-466    	; 0x530 <lcd_str>
 702:	63 e0       	ldi	r22, 0x03	; 3
 704:	81 e0       	ldi	r24, 0x01	; 1
 706:	53 df       	rcall	.-346    	; 0x5ae <lcd_locate>
 708:	8c 81       	ldd	r24, Y+4	; 0x04
 70a:	0c df       	rcall	.-488    	; 0x524 <lcd_char>
 70c:	8d 81       	ldd	r24, Y+5	; 0x05
 70e:	0a df       	rcall	.-492    	; 0x524 <lcd_char>
 710:	8e 81       	ldd	r24, Y+6	; 0x06
 712:	08 df       	rcall	.-496    	; 0x524 <lcd_char>
 714:	8f 81       	ldd	r24, Y+7	; 0x07
 716:	06 df       	rcall	.-500    	; 0x524 <lcd_char>
 718:	8e e2       	ldi	r24, 0x2E	; 46
 71a:	04 df       	rcall	.-504    	; 0x524 <lcd_char>
 71c:	88 85       	ldd	r24, Y+8	; 0x08
 71e:	02 df       	rcall	.-508    	; 0x524 <lcd_char>
 720:	89 85       	ldd	r24, Y+9	; 0x09
 722:	00 df       	rcall	.-512    	; 0x524 <lcd_char>
 724:	84 e0       	ldi	r24, 0x04	; 4
 726:	91 e0       	ldi	r25, 0x01	; 1
 728:	2d 96       	adiw	r28, 0x0d	; 13
 72a:	0f b6       	in	r0, 0x3f	; 63
 72c:	f8 94       	cli
 72e:	de bf       	out	0x3e, r29	; 62
 730:	0f be       	out	0x3f, r0	; 63
 732:	cd bf       	out	0x3d, r28	; 61
 734:	df 91       	pop	r29
 736:	cf 91       	pop	r28
 738:	fb ce       	rjmp	.-522    	; 0x530 <lcd_str>

0000073a <main>:
 73a:	41 df       	rcall	.-382    	; 0x5be <lcd_init>
 73c:	60 e4       	ldi	r22, 0x40	; 64
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	80 e8       	ldi	r24, 0x80	; 128
 742:	1b df       	rcall	.-458    	; 0x57a <lcd_defchar_P>
 744:	84 e6       	ldi	r24, 0x64	; 100
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	7d df       	rcall	.-262    	; 0x644 <i2cSetBitrate>
 74a:	2d de       	rcall	.-934    	; 0x3a6 <nRF_init>
 74c:	8f e0       	ldi	r24, 0x0F	; 15
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	fa de       	rcall	.-524    	; 0x546 <lcd_int>
 752:	84 b5       	in	r24, 0x24	; 36
 754:	82 60       	ori	r24, 0x02	; 2
 756:	84 bd       	out	0x24, r24	; 36
 758:	85 b5       	in	r24, 0x25	; 37
 75a:	86 60       	ori	r24, 0x06	; 6
 75c:	85 bd       	out	0x25, r24	; 37
 75e:	80 91 6e 00 	lds	r24, 0x006E
 762:	82 60       	ori	r24, 0x02	; 2
 764:	80 93 6e 00 	sts	0x006E, r24
 768:	8b e6       	ldi	r24, 0x6B	; 107
 76a:	87 bd       	out	0x27, r24	; 39
 76c:	78 94       	sei
 76e:	6a dd       	rcall	.-1324   	; 0x244 <nRF_RX_Power_Up>
 770:	78 dd       	rcall	.-1296   	; 0x262 <nRF_RX_EVENT>
 772:	94 df       	rcall	.-216    	; 0x69c <receive_and_display>
 774:	2f ef       	ldi	r18, 0xFF	; 255
 776:	89 e6       	ldi	r24, 0x69	; 105
 778:	98 e1       	ldi	r25, 0x18	; 24
 77a:	21 50       	subi	r18, 0x01	; 1
 77c:	80 40       	sbci	r24, 0x00	; 0
 77e:	90 40       	sbci	r25, 0x00	; 0
 780:	e1 f7       	brne	.-8      	; 0x77a <main+0x40>
 782:	00 c0       	rjmp	.+0      	; 0x784 <main+0x4a>
 784:	00 00       	nop
 786:	f4 cf       	rjmp	.-24     	; 0x770 <main+0x36>

00000788 <__udivmodhi4>:
 788:	aa 1b       	sub	r26, r26
 78a:	bb 1b       	sub	r27, r27
 78c:	51 e1       	ldi	r21, 0x11	; 17
 78e:	07 c0       	rjmp	.+14     	; 0x79e <__udivmodhi4_ep>

00000790 <__udivmodhi4_loop>:
 790:	aa 1f       	adc	r26, r26
 792:	bb 1f       	adc	r27, r27
 794:	a6 17       	cp	r26, r22
 796:	b7 07       	cpc	r27, r23
 798:	10 f0       	brcs	.+4      	; 0x79e <__udivmodhi4_ep>
 79a:	a6 1b       	sub	r26, r22
 79c:	b7 0b       	sbc	r27, r23

0000079e <__udivmodhi4_ep>:
 79e:	88 1f       	adc	r24, r24
 7a0:	99 1f       	adc	r25, r25
 7a2:	5a 95       	dec	r21
 7a4:	a9 f7       	brne	.-22     	; 0x790 <__udivmodhi4_loop>
 7a6:	80 95       	com	r24
 7a8:	90 95       	com	r25
 7aa:	bc 01       	movw	r22, r24
 7ac:	cd 01       	movw	r24, r26
 7ae:	08 95       	ret

000007b0 <itoa>:
 7b0:	fb 01       	movw	r30, r22
 7b2:	9f 01       	movw	r18, r30
 7b4:	e8 94       	clt
 7b6:	42 30       	cpi	r20, 0x02	; 2
 7b8:	bc f0       	brlt	.+46     	; 0x7e8 <itoa+0x38>
 7ba:	45 32       	cpi	r20, 0x25	; 37
 7bc:	ac f4       	brge	.+42     	; 0x7e8 <itoa+0x38>
 7be:	4a 30       	cpi	r20, 0x0A	; 10
 7c0:	29 f4       	brne	.+10     	; 0x7cc <itoa+0x1c>
 7c2:	97 fb       	bst	r25, 7
 7c4:	1e f4       	brtc	.+6      	; 0x7cc <itoa+0x1c>
 7c6:	90 95       	com	r25
 7c8:	81 95       	neg	r24
 7ca:	9f 4f       	sbci	r25, 0xFF	; 255
 7cc:	64 2f       	mov	r22, r20
 7ce:	77 27       	eor	r23, r23
 7d0:	db df       	rcall	.-74     	; 0x788 <__udivmodhi4>
 7d2:	80 5d       	subi	r24, 0xD0	; 208
 7d4:	8a 33       	cpi	r24, 0x3A	; 58
 7d6:	0c f0       	brlt	.+2      	; 0x7da <itoa+0x2a>
 7d8:	89 5d       	subi	r24, 0xD9	; 217
 7da:	81 93       	st	Z+, r24
 7dc:	cb 01       	movw	r24, r22
 7de:	00 97       	sbiw	r24, 0x00	; 0
 7e0:	a9 f7       	brne	.-22     	; 0x7cc <itoa+0x1c>
 7e2:	16 f4       	brtc	.+4      	; 0x7e8 <itoa+0x38>
 7e4:	5d e2       	ldi	r21, 0x2D	; 45
 7e6:	51 93       	st	Z+, r21
 7e8:	10 82       	st	Z, r1
 7ea:	c9 01       	movw	r24, r18
 7ec:	00 c0       	rjmp	.+0      	; 0x7ee <strrev>

000007ee <strrev>:
 7ee:	dc 01       	movw	r26, r24
 7f0:	fc 01       	movw	r30, r24
 7f2:	67 2f       	mov	r22, r23
 7f4:	71 91       	ld	r23, Z+
 7f6:	77 23       	and	r23, r23
 7f8:	e1 f7       	brne	.-8      	; 0x7f2 <strrev+0x4>
 7fa:	32 97       	sbiw	r30, 0x02	; 2
 7fc:	04 c0       	rjmp	.+8      	; 0x806 <strrev+0x18>
 7fe:	7c 91       	ld	r23, X
 800:	6d 93       	st	X+, r22
 802:	70 83       	st	Z, r23
 804:	62 91       	ld	r22, -Z
 806:	ae 17       	cp	r26, r30
 808:	bf 07       	cpc	r27, r31
 80a:	c8 f3       	brcs	.-14     	; 0x7fe <strrev+0x10>
 80c:	08 95       	ret

0000080e <_exit>:
 80e:	f8 94       	cli

00000810 <__stop_program>:
 810:	ff cf       	rjmp	.-2      	; 0x810 <__stop_program>
