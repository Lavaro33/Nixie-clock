Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                              ./nRF24L01.o (__do_clear_bss)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
                              ./main.o (strcmp_P)

Allocating common symbols
Common symbol       size              file

HEAD_RX             0x1               ./usart.o
BUFFER_TX           0x10              ./usart.o
nRF_RX_bufffer      0x21              ./nRF24L01.o
TX_flag             0x1               ./nRF24L01.o
TAIL_RX             0x1               ./usart.o
HEAD_TX             0x1               ./usart.o
BUFFER_RX           0x20              ./usart.o
string_tab          0x10              ./usart.o
disable_dynamic_payload
                    0x1               ./nRF24L01.o
payload_width       0x1               ./nRF24L01.o
TAIL_TX             0x1               ./usart.o
RX_flag             0x1               ./nRF24L01.o

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
 .text          0x00000000        0x0 ./SPI.o
 .bss           0x00000000        0x0 ./SPI.o
 .text.SPI_WriteDataBuffer
                0x00000000       0x3c ./SPI.o
 .text          0x00000000        0x0 ./main.o
 .bss           0x00000000        0x0 ./main.o
 .text          0x00000000        0x0 ./nRF24L01.o
 .bss           0x00000000        0x0 ./nRF24L01.o
 .text.nRF_Read_Registers
                0x00000000       0x32 ./nRF24L01.o
 .text.nRF_Data_Ready
                0x00000000        0xe ./nRF24L01.o
 .text.nRF_TX_Power_Up
                0x00000000       0x14 ./nRF24L01.o
 .text.nRF_Power_Down
                0x00000000       0x1a ./nRF24L01.o
 .text.nRF_SendDataToAir
                0x00000000       0x94 ./nRF24L01.o
 .text.nRF_Set_PAYLOAD_Width
                0x00000000       0x18 ./nRF24L01.o
 .text.nRF_Set_Retransmission_Time_And_Ammount
                0x00000000        0x8 ./nRF24L01.o
 .text.nRF_Set_Data_Speed_And_Reciver_Power
                0x00000000        0x8 ./nRF24L01.o
 .bss.first_time
                0x00000000        0x1 ./nRF24L01.o
 .text          0x00000000        0x0 ./usart.o
 .bss           0x00000000        0x0 ./usart.o
 .text.init_USART
                0x00000000       0x1e ./usart.o
 .text.usart_read_c
                0x00000000       0x2a ./usart.o
 .text.usart_read_string
                0x00000000       0x34 ./usart.o
 .text.usart_send_str
                0x00000000       0x18 ./usart.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp_P.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
LOAD ./SPI.o
LOAD ./main.o
LOAD ./nRF24L01.o
LOAD ./usart.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x684
 *(.vectors)
 .vectors       0x00000000       0x68 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.__c.1921
                0x00000068        0xa ./main.o
 .progmem.data.__c.1923
                0x00000072        0x9 ./main.o
 .progmem.data.__c.1883
                0x0000007b        0x6 ./nRF24L01.o
 .progmem.data.__c.1885
                0x00000081        0x6 ./nRF24L01.o
                0x00000088                . = ALIGN (0x2)
 *fill*         0x00000087        0x1 
                0x00000088                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000088        0x0 linker stubs
 *(.trampolines*)
                0x00000088                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000088                __ctors_start = .
 *(.ctors)
                0x00000088                __ctors_end = .
                0x00000088                __dtors_start = .
 *(.dtors)
                0x00000088                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000088        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
                0x00000088                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000088        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000094       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x00000094                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000a4        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000ac        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
                0x000000ac                __vector_22
                0x000000ac                __vector_24
                0x000000ac                __vector_12
                0x000000ac                __bad_interrupt
                0x000000ac                __vector_6
                0x000000ac                __vector_3
                0x000000ac                __vector_23
                0x000000ac                __vector_25
                0x000000ac                __vector_11
                0x000000ac                __vector_13
                0x000000ac                __vector_17
                0x000000ac                __vector_7
                0x000000ac                __vector_5
                0x000000ac                __vector_4
                0x000000ac                __vector_9
                0x000000ac                __vector_2
                0x000000ac                __vector_21
                0x000000ac                __vector_15
                0x000000ac                __vector_8
                0x000000ac                __vector_14
                0x000000ac                __vector_10
                0x000000ac                __vector_16
                0x000000ac                __vector_20
                0x000000b0                . = ALIGN (0x2)
 *(.text.*)
 .text.init_SPI
                0x000000b0       0x28 ./SPI.o
                0x000000b0                init_SPI
 .text.SPI_WriteReadByte
                0x000000d8        0xc ./SPI.o
                0x000000d8                SPI_WriteReadByte
 .text.SPI_WriteByte
                0x000000e4        0xa ./SPI.o
                0x000000e4                SPI_WriteByte
 .text.SPI_WriteReadDataBuffer
                0x000000ee       0x4a ./SPI.o
                0x000000ee                SPI_WriteReadDataBuffer
 .text.moja_funkcja
                0x00000138       0x2a ./main.o
                0x00000138                moja_funkcja
 .text.startup.main
                0x00000162       0x1c ./main.o
                0x00000162                main
 .text.register_nRF_RX_Event_Callback
                0x0000017e        0xa ./nRF24L01.o
                0x0000017e                register_nRF_RX_Event_Callback
 .text.nRF_Read_One_Byte_From_Register
                0x00000188       0x12 ./nRF24L01.o
                0x00000188                nRF_Read_One_Byte_From_Register
 .text.nRF_Config_Register
                0x0000019a       0x28 ./nRF24L01.o
                0x0000019a                nRF_Config_Register
 .text.nRF_Write_Register
                0x000001c2       0x34 ./nRF24L01.o
                0x000001c2                nRF_Write_Register
 .text.nRF_SET_Transmitter_Adres
                0x000001f6       0x44 ./nRF24L01.o
                0x000001f6                nRF_SET_Transmitter_Adres
 .text.nRF_SET_Reciver_Addres
                0x0000023a       0x60 ./nRF24L01.o
                0x0000023a                nRF_SET_Reciver_Addres
 .text.nRF_Set_State_And_Width_Of_CRC
                0x0000029a       0x46 ./nRF24L01.o
                0x0000029a                nRF_Set_State_And_Width_Of_CRC
 .text.nRF_RX_Power_Up
                0x000002e0       0x22 ./nRF24L01.o
                0x000002e0                nRF_RX_Power_Up
 .text.nRF_RX_EVENT
                0x00000302       0xb0 ./nRF24L01.o
                0x00000302                nRF_RX_EVENT
 .text.nRF_Set_Channel
                0x000003b2        0xa ./nRF24L01.o
                0x000003b2                nRF_Set_Channel
 .text.nRF_Clear_TX
                0x000003bc        0xc ./nRF24L01.o
                0x000003bc                nRF_Clear_TX
 .text.nRF_Clear_RX
                0x000003c8        0xc ./nRF24L01.o
                0x000003c8                nRF_Clear_RX
 .text.nRF_Set_Active_DataPipe_And_ACK
                0x000003d4       0x60 ./nRF24L01.o
                0x000003d4                nRF_Set_Active_DataPipe_And_ACK
 .text.nRF_Set_Dynamic_Payload_State_On_Data_Pipe
                0x00000434       0x2a ./nRF24L01.o
                0x00000434                nRF_Set_Dynamic_Payload_State_On_Data_Pipe
 .text.Initialize_INTERRUPT_For_nRF
                0x0000045e        0xe ./nRF24L01.o
                0x0000045e                Initialize_INTERRUPT_For_nRF
 .text.nRF_init
                0x0000046c       0x6c ./nRF24L01.o
                0x0000046c                nRF_init
 .text.__vector_1
                0x000004d8       0x96 ./nRF24L01.o
                0x000004d8                __vector_1
 .text.usart_send_char
                0x0000056e       0x2a ./usart.o
                0x0000056e                usart_send_char
 .text.__vector_18
                0x00000598       0x7e ./usart.o
                0x00000598                __vector_18
 .text.__vector_19
                0x00000616       0x58 ./usart.o
                0x00000616                __vector_19
 .text.avr-libc
                0x0000066e       0x12 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
                0x0000066e                strcmp_P
                0x00000680                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000680        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x00000680                _exit
                0x00000680                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000680        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000684                _etext = .

.data           0x00800100        0x0 load address 0x00000684
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 ./SPI.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 ./nRF24L01.o
 .data          0x00800100        0x0 ./usart.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x6d
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.set_first_time_into_RX_MODE_after_TX_MODE
                0x00800100        0x1 ./nRF24L01.o
                0x00800100                set_first_time_into_RX_MODE_after_TX_MODE
 .bss.nRF_RX_Event_Callback
                0x00800101        0x2 ./nRF24L01.o
 .bss.flaga     0x00800103        0x1 ./usart.o
                0x00800103                flaga
 *(COMMON)
 COMMON         0x00800104       0x25 ./nRF24L01.o
                0x00800104                nRF_RX_bufffer
                0x00800125                TX_flag
                0x00800126                disable_dynamic_payload
                0x00800127                payload_width
                0x00800128                RX_flag
 COMMON         0x00800129       0x44 ./usart.o
                0x00800129                HEAD_RX
                0x0080012a                BUFFER_TX
                0x0080013a                TAIL_RX
                0x0080013b                HEAD_TX
                0x0080013c                BUFFER_RX
                0x0080015c                string_tab
                0x0080016c                TAIL_TX
                0x0080016d                PROVIDE (__bss_end, .)
                0x00000684                __data_load_start = LOADADDR (.data)
                0x00000684                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080016d        0x0
                0x0080016d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080016d                PROVIDE (__noinit_end, .)
                0x0080016d                _end = .
                0x0080016d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x750
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o
 .stab          0x000006cc       0x84 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
                                 0x90 (size before relaxing)

.stabstr        0x00000000      0x10f
 *(.stabstr)
 .stabstr       0x00000000      0x10f c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./SPI.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./main.o
 .comment       0x00000000       0x30 ./nRF24L01.o
 .comment       0x00000000       0x30 ./usart.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Arduino_NRF24.elf elf32-avr)
LOAD linker stubs
