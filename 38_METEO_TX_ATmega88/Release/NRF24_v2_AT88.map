Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

timer100ms          0x2               ./main.o
nRF_RX_bufffer      0x21              ./nRF24L01.o
TX_flag             0x1               ./nRF24L01.o
disable_dynamic_payload
                    0x1               ./nRF24L01.o
payload_width       0x1               ./nRF24L01.o
RX_flag             0x1               ./nRF24L01.o

Discarded input sections

 .data          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
 .text          0x00000000        0x0 ./SPI.o
 .data          0x00000000        0x0 ./SPI.o
 .bss           0x00000000        0x0 ./SPI.o
 .text.SPI_WriteDataBuffer
                0x00000000       0x38 ./SPI.o
 .text          0x00000000        0x0 ./main.o
 .data          0x00000000        0x0 ./main.o
 .bss           0x00000000        0x0 ./main.o
 COMMON         0x00000000        0x2 ./main.o
 .text          0x00000000        0x0 ./nRF24L01.o
 .data          0x00000000        0x0 ./nRF24L01.o
 .bss           0x00000000        0x0 ./nRF24L01.o
 .text.nRF_Read_Registers
                0x00000000       0x2e ./nRF24L01.o
 .text.nRF_Data_Ready
                0x00000000        0xc ./nRF24L01.o
 .text.nRF_RX_EVENT
                0x00000000       0xa2 ./nRF24L01.o
 .text.nRF_Power_Down
                0x00000000       0x12 ./nRF24L01.o
 .text.nRF_Set_PAYLOAD_Width
                0x00000000       0x16 ./nRF24L01.o
 .text.nRF_Set_Retransmission_Time_And_Ammount
                0x00000000        0x6 ./nRF24L01.o
 .text.nRF_Set_Data_Speed_And_Reciver_Power
                0x00000000        0x6 ./nRF24L01.o
 .bss.first_time
                0x00000000        0x1 ./nRF24L01.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
LOAD ./SPI.o
LOAD ./main.o
LOAD ./nRF24L01.o
START GROUP
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4\libm.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4\libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x49e
 *(.vectors)
 .vectors       0x00000000       0x34 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x00000034                . = ALIGN (0x2)
                0x00000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000034        0x0 linker stubs
 *(.trampolines*)
                0x00000034                __trampolines_end = .
 *(.progmem*)
 .progmem.data.__c.1982
                0x00000034        0x6 ./nRF24L01.o
 .progmem.data.__c.1980
                0x0000003a        0x6 ./nRF24L01.o
                0x00000040                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000040                __ctors_start = .
 *(.ctors)
                0x00000040                __ctors_end = .
                0x00000040                __dtors_start = .
 *(.dtors)
                0x00000040                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000040        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
                0x00000040                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000040        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000004c       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_copy_data.o)
                0x0000004c                __do_copy_data
 .init4         0x00000062       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_clear_bss.o)
                0x00000062                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000072        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
 *(.init9)
 *(.text)
 .text          0x00000076        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/../../../../avr/lib/avr4/crtm88p.o
                0x00000076                __vector_22
                0x00000076                __vector_24
                0x00000076                __vector_12
                0x00000076                __bad_interrupt
                0x00000076                __vector_6
                0x00000076                __vector_3
                0x00000076                __vector_23
                0x00000076                __vector_25
                0x00000076                __vector_11
                0x00000076                __vector_13
                0x00000076                __vector_17
                0x00000076                __vector_19
                0x00000076                __vector_7
                0x00000076                __vector_5
                0x00000076                __vector_4
                0x00000076                __vector_9
                0x00000076                __vector_2
                0x00000076                __vector_21
                0x00000076                __vector_15
                0x00000076                __vector_8
                0x00000076                __vector_14
                0x00000076                __vector_10
                0x00000076                __vector_16
                0x00000076                __vector_18
                0x00000076                __vector_20
                0x00000078                . = ALIGN (0x2)
 *(.text.*)
 .text.init_SPI
                0x00000078       0x2a ./SPI.o
                0x00000078                init_SPI
 .text.SPI_WriteReadByte
                0x000000a2        0xc ./SPI.o
                0x000000a2                SPI_WriteReadByte
 .text.SPI_WriteByte
                0x000000ae        0xa ./SPI.o
                0x000000ae                SPI_WriteByte
 .text.SPI_WriteReadDataBuffer
                0x000000b8       0x48 ./SPI.o
                0x000000b8                SPI_WriteReadDataBuffer
 .text.moja_funkcja
                0x00000100        0x2 ./main.o
                0x00000100                moja_funkcja
 .text.startup.main
                0x00000102       0x26 ./main.o
                0x00000102                main
 .text.register_nRF_RX_Event_Callback
                0x00000128        0xa ./nRF24L01.o
                0x00000128                register_nRF_RX_Event_Callback
 .text.nRF_Read_One_Byte_From_Register
                0x00000132        0xe ./nRF24L01.o
                0x00000132                nRF_Read_One_Byte_From_Register
 .text.nRF_Config_Register
                0x00000140       0x24 ./nRF24L01.o
                0x00000140                nRF_Config_Register
 .text.nRF_Write_Register
                0x00000164       0x30 ./nRF24L01.o
                0x00000164                nRF_Write_Register
 .text.nRF_SET_Transmitter_Adres
                0x00000194       0x3e ./nRF24L01.o
                0x00000194                nRF_SET_Transmitter_Adres
 .text.nRF_SET_Reciver_Addres
                0x000001d2       0x56 ./nRF24L01.o
                0x000001d2                nRF_SET_Reciver_Addres
 .text.nRF_Set_State_And_Width_Of_CRC
                0x00000228       0x40 ./nRF24L01.o
                0x00000228                nRF_Set_State_And_Width_Of_CRC
 .text.nRF_TX_Power_Up
                0x00000268       0x10 ./nRF24L01.o
                0x00000268                nRF_TX_Power_Up
 .text.nRF_RX_Power_Up
                0x00000278       0x1e ./nRF24L01.o
                0x00000278                nRF_RX_Power_Up
 .text.nRF_Set_Channel
                0x00000296        0x8 ./nRF24L01.o
                0x00000296                nRF_Set_Channel
 .text.nRF_Clear_TX
                0x0000029e        0xa ./nRF24L01.o
                0x0000029e                nRF_Clear_TX
 .text.nRF_Clear_RX
                0x000002a8        0xa ./nRF24L01.o
                0x000002a8                nRF_Clear_RX
 .text.nRF_Set_Active_DataPipe_And_ACK
                0x000002b2       0x58 ./nRF24L01.o
                0x000002b2                nRF_Set_Active_DataPipe_And_ACK
 .text.nRF_SendDataToAir
                0x0000030a       0x80 ./nRF24L01.o
                0x0000030a                nRF_SendDataToAir
 .text.nRF_Set_Dynamic_Payload_State_On_Data_Pipe
                0x0000038a       0x24 ./nRF24L01.o
                0x0000038a                nRF_Set_Dynamic_Payload_State_On_Data_Pipe
 .text.Initialize_INTERRUPT_For_nRF
                0x000003ae        0xe ./nRF24L01.o
                0x000003ae                Initialize_INTERRUPT_For_nRF
 .text.nRF_init
                0x000003bc       0x50 ./nRF24L01.o
                0x000003bc                nRF_init
 .text.__vector_1
                0x0000040c       0x8e ./nRF24L01.o
                0x0000040c                __vector_1
                0x0000049a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000049a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
                0x0000049a                _exit
                0x0000049a                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000049a        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.8.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000049e                _etext = .

.data           0x00800100        0x8 load address 0x0000049e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800100        0x7 ./main.o
 *(.gnu.linkonce.d*)
                0x00800108                . = ALIGN (0x2)
 *fill*         0x00800107        0x1 
                0x00800108                _edata = .
                0x00800108                PROVIDE (__data_end, .)

.bss            0x00800108       0x28
                0x00800108                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.nRF_RX_Event_Callback
                0x00800108        0x2 ./nRF24L01.o
 .bss.set_first_time_into_RX_MODE_after_TX_MODE
                0x0080010a        0x1 ./nRF24L01.o
                0x0080010a                set_first_time_into_RX_MODE_after_TX_MODE
 *(COMMON)
 COMMON         0x0080010b       0x25 ./nRF24L01.o
                0x0080010b                nRF_RX_bufffer
                0x0080012c                TX_flag
                0x0080012d                disable_dynamic_payload
                0x0080012e                payload_width
                0x0080012f                RX_flag
                0x00800130                PROVIDE (__bss_end, .)
                0x0000049e                __data_load_start = LOADADDR (.data)
                0x000004a6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800130        0x0
                0x00800130                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800130                PROVIDE (__noinit_end, .)
                0x00800130                _end = .
                0x00800130                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 ./SPI.o
                                 0x31 (size before relaxing)
 .comment       0x00000000       0x31 ./main.o
 .comment       0x00000000       0x31 ./nRF24L01.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(NRF24_v2_AT88.elf elf32-avr)
LOAD linker stubs
