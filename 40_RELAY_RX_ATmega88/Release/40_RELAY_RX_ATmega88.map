Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                              ./nRF24L01/nRF24L01.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

sec2                0x2               ./main.o
prog_timer1         0x2               ./main.o
nRF_RX_bufffer      0x21              ./nRF24L01/nRF24L01.o
prog_timer5         0x2               ./main.o
sec1                0x2               ./main.o
state               0x1               ./main.o
TX_flag             0x1               ./nRF24L01/nRF24L01.o
prog_timer2         0x2               ./main.o
sec4_on             0x1               ./main.o
prog_timer3         0x2               ./main.o
disable_dynamic_payload
                    0x1               ./nRF24L01/nRF24L01.o
payload_width       0x1               ./nRF24L01/nRF24L01.o
sec3                0x2               ./main.o
RX_flag             0x1               ./nRF24L01/nRF24L01.o
prog_timer4         0x2               ./main.o
prog_timer6         0x2               ./main.o

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 .text          0x00000000        0x0 ./nRF24L01/SPI.o
 .bss           0x00000000        0x0 ./nRF24L01/SPI.o
 .text.SPI_WriteDataBuffer
                0x00000000       0x3a ./nRF24L01/SPI.o
 .text          0x00000000        0x0 ./nRF24L01/nRF24L01.o
 .bss           0x00000000        0x0 ./nRF24L01/nRF24L01.o
 .text.register_nRF_RX_Event_Callback
                0x00000000        0xa ./nRF24L01/nRF24L01.o
 .text.nRF_Read_Registers
                0x00000000       0x2e ./nRF24L01/nRF24L01.o
 .text.nRF_Data_Ready
                0x00000000        0xc ./nRF24L01/nRF24L01.o
 .text.nRF_TX_Power_Up
                0x00000000       0x10 ./nRF24L01/nRF24L01.o
 .text.nRF_Power_Down
                0x00000000       0x12 ./nRF24L01/nRF24L01.o
 .text.nRF_SendDataToAir
                0x00000000       0x8c ./nRF24L01/nRF24L01.o
 .text.nRF_Set_PAYLOAD_Width
                0x00000000       0x16 ./nRF24L01/nRF24L01.o
 .text.nRF_Set_Retransmission_Time_And_Ammount
                0x00000000        0x6 ./nRF24L01/nRF24L01.o
 .text.nRF_Set_Data_Speed_And_Reciver_Power
                0x00000000        0x6 ./nRF24L01/nRF24L01.o
 .bss.first_time
                0x00000000        0x1 ./nRF24L01/nRF24L01.o
 .text          0x00000000        0x0 ./LED/led.o
 .bss           0x00000000        0x0 ./LED/led.o
 .text          0x00000000        0x0 ./main.o
 .bss           0x00000000        0x0 ./main.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
LOAD ./nRF24L01/SPI.o
LOAD ./nRF24L01/nRF24L01.o
LOAD ./LED/led.o
LOAD ./main.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7fc
 *(.vectors)
 .vectors       0x00000000       0x34 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.__c.1872
                0x00000034        0x6 ./nRF24L01/nRF24L01.o
 .progmem.data.__c.1874
                0x0000003a        0x6 ./nRF24L01/nRF24L01.o
                0x00000040                . = ALIGN (0x2)
                0x00000040                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000040        0x0 linker stubs
 *(.trampolines*)
                0x00000040                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000040                __ctors_start = .
 *(.ctors)
                0x00000040                __ctors_end = .
                0x00000040                __dtors_start = .
 *(.dtors)
                0x00000040                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000040        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
                0x00000040                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000040        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000004c       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x0000004c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000005c        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 *(.init9)
 *(.text)
 .text          0x00000060        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
                0x00000060                __vector_22
                0x00000060                __vector_24
                0x00000060                __vector_12
                0x00000060                __bad_interrupt
                0x00000060                __vector_6
                0x00000060                __vector_3
                0x00000060                __vector_23
                0x00000060                __vector_25
                0x00000060                __vector_13
                0x00000060                __vector_17
                0x00000060                __vector_19
                0x00000060                __vector_7
                0x00000060                __vector_5
                0x00000060                __vector_4
                0x00000060                __vector_9
                0x00000060                __vector_2
                0x00000060                __vector_21
                0x00000060                __vector_15
                0x00000060                __vector_8
                0x00000060                __vector_14
                0x00000060                __vector_10
                0x00000060                __vector_16
                0x00000060                __vector_18
                0x00000060                __vector_20
                0x00000062                . = ALIGN (0x2)
 *(.text.*)
 .text.init_SPI
                0x00000062       0x24 ./nRF24L01/SPI.o
                0x00000062                init_SPI
 .text.SPI_WriteReadByte
                0x00000086        0xc ./nRF24L01/SPI.o
                0x00000086                SPI_WriteReadByte
 .text.SPI_WriteByte
                0x00000092        0xa ./nRF24L01/SPI.o
                0x00000092                SPI_WriteByte
 .text.SPI_WriteReadDataBuffer
                0x0000009c       0x48 ./nRF24L01/SPI.o
                0x0000009c                SPI_WriteReadDataBuffer
 .text.nRF_Read_One_Byte_From_Register
                0x000000e4        0xe ./nRF24L01/nRF24L01.o
                0x000000e4                nRF_Read_One_Byte_From_Register
 .text.nRF_Config_Register
                0x000000f2       0x24 ./nRF24L01/nRF24L01.o
                0x000000f2                nRF_Config_Register
 .text.nRF_Write_Register
                0x00000116       0x30 ./nRF24L01/nRF24L01.o
                0x00000116                nRF_Write_Register
 .text.nRF_SET_Transmitter_Adres
                0x00000146       0x42 ./nRF24L01/nRF24L01.o
                0x00000146                nRF_SET_Transmitter_Adres
 .text.nRF_SET_Reciver_Addres
                0x00000188       0x5c ./nRF24L01/nRF24L01.o
                0x00000188                nRF_SET_Reciver_Addres
 .text.nRF_Set_State_And_Width_Of_CRC
                0x000001e4       0x42 ./nRF24L01/nRF24L01.o
                0x000001e4                nRF_Set_State_And_Width_Of_CRC
 .text.nRF_RX_Power_Up
                0x00000226       0x1e ./nRF24L01/nRF24L01.o
                0x00000226                nRF_RX_Power_Up
 .text.nRF_RX_EVENT
                0x00000244       0x9e ./nRF24L01/nRF24L01.o
                0x00000244                nRF_RX_EVENT
 .text.nRF_Set_Channel
                0x000002e2        0x8 ./nRF24L01/nRF24L01.o
                0x000002e2                nRF_Set_Channel
 .text.nRF_Clear_TX
                0x000002ea        0xa ./nRF24L01/nRF24L01.o
                0x000002ea                nRF_Clear_TX
 .text.nRF_Clear_RX
                0x000002f4        0xa ./nRF24L01/nRF24L01.o
                0x000002f4                nRF_Clear_RX
 .text.nRF_Set_Active_DataPipe_And_ACK
                0x000002fe       0x58 ./nRF24L01/nRF24L01.o
                0x000002fe                nRF_Set_Active_DataPipe_And_ACK
 .text.nRF_Set_Dynamic_Payload_State_On_Data_Pipe
                0x00000356       0x24 ./nRF24L01/nRF24L01.o
                0x00000356                nRF_Set_Dynamic_Payload_State_On_Data_Pipe
 .text.Initialize_INTERRUPT_For_nRF
                0x0000037a        0xe ./nRF24L01/nRF24L01.o
                0x0000037a                Initialize_INTERRUPT_For_nRF
 .text.nRF_init
                0x00000388       0x50 ./nRF24L01/nRF24L01.o
                0x00000388                nRF_init
 .text.__vector_1
                0x000003d8       0x8e ./nRF24L01/nRF24L01.o
                0x000003d8                __vector_1
 .text.led_init
                0x00000466       0x2e ./LED/led.o
                0x00000466                led_init
 .text.led_on_off
                0x00000494      0x1a0 ./main.o
                0x00000494                led_on_off
 .text.receive_and_display
                0x00000634       0x7c ./main.o
                0x00000634                receive_and_display
 .text.prog_timer_init
                0x000006b0       0x28 ./main.o
                0x000006b0                prog_timer_init
 .text.startup.main
                0x000006d8       0x80 ./main.o
                0x000006d8                main
 .text.__vector_11
                0x00000758       0xa0 ./main.o
                0x00000758                __vector_11
                0x000007f8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                0x000007f8                _exit
                0x000007f8                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007f8        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000007fc                _etext = .

.data           0x00800100        0x0 load address 0x000007fc
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 .data          0x00800100        0x0 ./nRF24L01/SPI.o
 .data          0x00800100        0x0 ./nRF24L01/nRF24L01.o
 .data          0x00800100        0x0 ./LED/led.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x3d
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.set_first_time_into_RX_MODE_after_TX_MODE
                0x00800100        0x1 ./nRF24L01/nRF24L01.o
                0x00800100                set_first_time_into_RX_MODE_after_TX_MODE
 .bss.nRF_RX_Event_Callback
                0x00800101        0x2 ./nRF24L01/nRF24L01.o
 .bss.turbo_state
                0x00800103        0x1 ./main.o
 *(COMMON)
 COMMON         0x00800104       0x25 ./nRF24L01/nRF24L01.o
                0x00800104                nRF_RX_bufffer
                0x00800125                TX_flag
                0x00800126                disable_dynamic_payload
                0x00800127                payload_width
                0x00800128                RX_flag
 COMMON         0x00800129       0x14 ./main.o
                0x00800129                sec2
                0x0080012b                prog_timer1
                0x0080012d                prog_timer5
                0x0080012f                sec1
                0x00800131                state
                0x00800132                prog_timer2
                0x00800134                sec4_on
                0x00800135                prog_timer3
                0x00800137                sec3
                0x00800139                prog_timer4
                0x0080013b                prog_timer6
                0x0080013d                PROVIDE (__bss_end, .)
                0x000007fc                __data_load_start = LOADADDR (.data)
                0x000007fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080013d        0x0
                0x0080013d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080013d                PROVIDE (__noinit_end, .)
                0x0080013d                _end = .
                0x0080013d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./nRF24L01/SPI.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./nRF24L01/nRF24L01.o
 .comment       0x00000000       0x30 ./LED/led.o
 .comment       0x00000000       0x30 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(40_RELAY_RX_ATmega88.elf elf32-avr)
LOAD linker stubs
