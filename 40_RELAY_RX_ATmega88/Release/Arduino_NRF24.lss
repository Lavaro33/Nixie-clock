
Arduino_NRF24.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000684  00000718  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000684  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006d  00800100  00800100  00000718  2**0
                  ALLOC
  3 .stab         00000750  00000000  00000000  00000718  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000010f  00000000  00000000  00000e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000f77  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 44 00 	jmp	0x88	; 0x88 <__ctors_end>
   4:	0c 94 6c 02 	jmp	0x4d8	; 0x4d8 <__vector_1>
   8:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
   c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  10:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  14:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  18:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  1c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  20:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  24:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  28:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  2c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  30:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  34:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  38:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  3c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  40:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  44:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  48:	0c 94 cc 02 	jmp	0x598	; 0x598 <__vector_18>
  4c:	0c 94 0b 03 	jmp	0x616	; 0x616 <__vector_19>
  50:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  54:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  58:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  5c:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  60:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>
  64:	0c 94 56 00 	jmp	0xac	; 0xac <__bad_interrupt>

00000068 <__c.1921>:
  68:	5a 41 50 41 4c 5f 4c 45 44 00                       ZAPAL_LED.

00000072 <__c.1923>:
  72:	5a 47 41 53 5f 4c 45 44 00                          ZGAS_LED.

0000007b <__c.1883>:
  7b:	41 54 4e 45 4c 00                                   ATNEL.

00000081 <__c.1885>:
  81:	41 54 4e 45 4c 00 00                                ATNEL..

00000088 <__ctors_end>:
  88:	11 24       	eor	r1, r1
  8a:	1f be       	out	0x3f, r1	; 63
  8c:	cf ef       	ldi	r28, 0xFF	; 255
  8e:	d8 e0       	ldi	r29, 0x08	; 8
  90:	de bf       	out	0x3e, r29	; 62
  92:	cd bf       	out	0x3d, r28	; 61

00000094 <__do_clear_bss>:
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	a0 e0       	ldi	r26, 0x00	; 0
  98:	b1 e0       	ldi	r27, 0x01	; 1
  9a:	01 c0       	rjmp	.+2      	; 0x9e <.do_clear_bss_start>

0000009c <.do_clear_bss_loop>:
  9c:	1d 92       	st	X+, r1

0000009e <.do_clear_bss_start>:
  9e:	ad 36       	cpi	r26, 0x6D	; 109
  a0:	b2 07       	cpc	r27, r18
  a2:	e1 f7       	brne	.-8      	; 0x9c <.do_clear_bss_loop>
  a4:	0e 94 b1 00 	call	0x162	; 0x162 <main>
  a8:	0c 94 40 03 	jmp	0x680	; 0x680 <_exit>

000000ac <__bad_interrupt>:
  ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b0 <init_SPI>:
  b0:	52 98       	cbi	0x0a, 2	; 10
  b2:	38 9a       	sbi	0x07, 0	; 7
  b4:	39 9a       	sbi	0x07, 1	; 7
  b6:	22 9a       	sbi	0x04, 2	; 4
  b8:	23 9a       	sbi	0x04, 3	; 4
  ba:	24 98       	cbi	0x04, 4	; 4
  bc:	25 9a       	sbi	0x04, 5	; 4
  be:	5a 9a       	sbi	0x0b, 2	; 11
  c0:	40 98       	cbi	0x08, 0	; 8
  c2:	41 9a       	sbi	0x08, 1	; 8
  c4:	2a 9a       	sbi	0x05, 2	; 5
  c6:	2b 9a       	sbi	0x05, 3	; 5
  c8:	2d 9a       	sbi	0x05, 5	; 5
  ca:	8c b5       	in	r24, 0x2c	; 44
  cc:	82 65       	ori	r24, 0x52	; 82
  ce:	8c bd       	out	0x2c, r24	; 44
  d0:	8d b5       	in	r24, 0x2d	; 45
  d2:	81 60       	ori	r24, 0x01	; 1
  d4:	8d bd       	out	0x2d, r24	; 45
  d6:	08 95       	ret

000000d8 <SPI_WriteReadByte>:
  d8:	8e bd       	out	0x2e, r24	; 46
  da:	0d b4       	in	r0, 0x2d	; 45
  dc:	07 fe       	sbrs	r0, 7
  de:	fd cf       	rjmp	.-6      	; 0xda <SPI_WriteReadByte+0x2>
  e0:	8e b5       	in	r24, 0x2e	; 46
  e2:	08 95       	ret

000000e4 <SPI_WriteByte>:
  e4:	8e bd       	out	0x2e, r24	; 46
  e6:	0d b4       	in	r0, 0x2d	; 45
  e8:	07 fe       	sbrs	r0, 7
  ea:	fd cf       	rjmp	.-6      	; 0xe6 <SPI_WriteByte+0x2>
  ec:	08 95       	ret

000000ee <SPI_WriteReadDataBuffer>:
  ee:	ef 92       	push	r14
  f0:	ff 92       	push	r15
  f2:	0f 93       	push	r16
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	00 d0       	rcall	.+0      	; 0xfc <SPI_WriteReadDataBuffer+0xe>
  fc:	cd b7       	in	r28, 0x3d	; 61
  fe:	de b7       	in	r29, 0x3e	; 62
 100:	8c 01       	movw	r16, r24
 102:	7b 01       	movw	r14, r22
 104:	0c c0       	rjmp	.+24     	; 0x11e <SPI_WriteReadDataBuffer+0x30>
 106:	f7 01       	movw	r30, r14
 108:	81 91       	ld	r24, Z+
 10a:	7f 01       	movw	r14, r30
 10c:	49 83       	std	Y+1, r20	; 0x01
 10e:	6a 83       	std	Y+2, r22	; 0x02
 110:	0e 94 6c 00 	call	0xd8	; 0xd8 <SPI_WriteReadByte>
 114:	f8 01       	movw	r30, r16
 116:	81 93       	st	Z+, r24
 118:	8f 01       	movw	r16, r30
 11a:	6a 81       	ldd	r22, Y+2	; 0x02
 11c:	49 81       	ldd	r20, Y+1	; 0x01
 11e:	8e 2d       	mov	r24, r14
 120:	86 1b       	sub	r24, r22
 122:	84 17       	cp	r24, r20
 124:	80 f3       	brcs	.-32     	; 0x106 <SPI_WriteReadDataBuffer+0x18>
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	1f 91       	pop	r17
 130:	0f 91       	pop	r16
 132:	ff 90       	pop	r15
 134:	ef 90       	pop	r14
 136:	08 95       	ret

00000138 <moja_funkcja>:
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	ec 01       	movw	r28, r24
 13e:	68 e6       	ldi	r22, 0x68	; 104
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	0e 94 37 03 	call	0x66e	; 0x66e <strcmp_P>
 146:	89 2b       	or	r24, r25
 148:	09 f4       	brne	.+2      	; 0x14c <moja_funkcja+0x14>
 14a:	28 9a       	sbi	0x05, 0	; 5
 14c:	62 e7       	ldi	r22, 0x72	; 114
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	ce 01       	movw	r24, r28
 152:	0e 94 37 03 	call	0x66e	; 0x66e <strcmp_P>
 156:	89 2b       	or	r24, r25
 158:	09 f4       	brne	.+2      	; 0x15c <moja_funkcja+0x24>
 15a:	28 98       	cbi	0x05, 0	; 5
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <main>:
 162:	20 9a       	sbi	0x04, 0	; 4
 164:	28 98       	cbi	0x05, 0	; 5
 166:	0e 94 36 02 	call	0x46c	; 0x46c <nRF_init>
 16a:	8c e9       	ldi	r24, 0x9C	; 156
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 bf 00 	call	0x17e	; 0x17e <register_nRF_RX_Event_Callback>
 172:	78 94       	sei
 174:	0e 94 70 01 	call	0x2e0	; 0x2e0 <nRF_RX_Power_Up>
 178:	0e 94 81 01 	call	0x302	; 0x302 <nRF_RX_EVENT>
 17c:	fd cf       	rjmp	.-6      	; 0x178 <main+0x16>

0000017e <register_nRF_RX_Event_Callback>:
 17e:	90 93 02 01 	sts	0x0102, r25
 182:	80 93 01 01 	sts	0x0101, r24
 186:	08 95       	ret

00000188 <nRF_Read_One_Byte_From_Register>:
 188:	41 98       	cbi	0x08, 1	; 8
 18a:	8f 71       	andi	r24, 0x1F	; 31
 18c:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	0e 94 6c 00 	call	0xd8	; 0xd8 <SPI_WriteReadByte>
 196:	41 9a       	sbi	0x08, 1	; 8
 198:	08 95       	ret

0000019a <nRF_Config_Register>:
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	1f 92       	push	r1
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	41 98       	cbi	0x08, 1	; 8
 1a6:	8f 71       	andi	r24, 0x1F	; 31
 1a8:	80 62       	ori	r24, 0x20	; 32
 1aa:	69 83       	std	Y+1, r22	; 0x01
 1ac:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 1b0:	69 81       	ldd	r22, Y+1	; 0x01
 1b2:	86 2f       	mov	r24, r22
 1b4:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 1b8:	41 9a       	sbi	0x08, 1	; 8
 1ba:	0f 90       	pop	r0
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	08 95       	ret

000001c2 <nRF_Write_Register>:
 1c2:	0f 93       	push	r16
 1c4:	1f 93       	push	r17
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
 1ca:	1f 92       	push	r1
 1cc:	cd b7       	in	r28, 0x3d	; 61
 1ce:	de b7       	in	r29, 0x3e	; 62
 1d0:	8b 01       	movw	r16, r22
 1d2:	41 98       	cbi	0x08, 1	; 8
 1d4:	8f 71       	andi	r24, 0x1F	; 31
 1d6:	80 62       	ori	r24, 0x20	; 32
 1d8:	49 83       	std	Y+1, r20	; 0x01
 1da:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 1de:	49 81       	ldd	r20, Y+1	; 0x01
 1e0:	b8 01       	movw	r22, r16
 1e2:	c8 01       	movw	r24, r16
 1e4:	0e 94 77 00 	call	0xee	; 0xee <SPI_WriteReadDataBuffer>
 1e8:	41 9a       	sbi	0x08, 1	; 8
 1ea:	0f 90       	pop	r0
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	1f 91       	pop	r17
 1f2:	0f 91       	pop	r16
 1f4:	08 95       	ret

000001f6 <nRF_SET_Transmitter_Adres>:
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	00 d0       	rcall	.+0      	; 0x1fc <nRF_SET_Transmitter_Adres+0x6>
 1fc:	00 d0       	rcall	.+0      	; 0x1fe <nRF_SET_Transmitter_Adres+0x8>
 1fe:	1f 92       	push	r1
 200:	cd b7       	in	r28, 0x3d	; 61
 202:	de b7       	in	r29, 0x3e	; 62
 204:	de 01       	movw	r26, r28
 206:	11 96       	adiw	r26, 0x01	; 1
 208:	9e 01       	movw	r18, r28
 20a:	2a 5f       	subi	r18, 0xFA	; 250
 20c:	3f 4f       	sbci	r19, 0xFF	; 255
 20e:	fc 01       	movw	r30, r24
 210:	01 96       	adiw	r24, 0x01	; 1
 212:	e4 91       	lpm	r30, Z
 214:	ed 93       	st	X+, r30
 216:	a2 17       	cp	r26, r18
 218:	b3 07       	cpc	r27, r19
 21a:	c9 f7       	brne	.-14     	; 0x20e <nRF_SET_Transmitter_Adres+0x18>
 21c:	45 e0       	ldi	r20, 0x05	; 5
 21e:	be 01       	movw	r22, r28
 220:	6f 5f       	subi	r22, 0xFF	; 255
 222:	7f 4f       	sbci	r23, 0xFF	; 255
 224:	80 e1       	ldi	r24, 0x10	; 16
 226:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <nRF_Write_Register>
 22a:	0f 90       	pop	r0
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	08 95       	ret

0000023a <nRF_SET_Reciver_Addres>:
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	00 d0       	rcall	.+0      	; 0x240 <nRF_SET_Reciver_Addres+0x6>
 240:	00 d0       	rcall	.+0      	; 0x242 <nRF_SET_Reciver_Addres+0x8>
 242:	1f 92       	push	r1
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	80 31       	cpi	r24, 0x10	; 16
 24a:	28 f4       	brcc	.+10     	; 0x256 <nRF_SET_Reciver_Addres+0x1c>
 24c:	8a 30       	cpi	r24, 0x0A	; 10
 24e:	18 f0       	brcs	.+6      	; 0x256 <nRF_SET_Reciver_Addres+0x1c>
 250:	8c 30       	cpi	r24, 0x0C	; 12
 252:	b0 f4       	brcc	.+44     	; 0x280 <nRF_SET_Reciver_Addres+0x46>
 254:	01 c0       	rjmp	.+2      	; 0x258 <nRF_SET_Reciver_Addres+0x1e>
 256:	8a e0       	ldi	r24, 0x0A	; 10
 258:	de 01       	movw	r26, r28
 25a:	11 96       	adiw	r26, 0x01	; 1
 25c:	9e 01       	movw	r18, r28
 25e:	2a 5f       	subi	r18, 0xFA	; 250
 260:	3f 4f       	sbci	r19, 0xFF	; 255
 262:	fb 01       	movw	r30, r22
 264:	6f 5f       	subi	r22, 0xFF	; 255
 266:	7f 4f       	sbci	r23, 0xFF	; 255
 268:	e4 91       	lpm	r30, Z
 26a:	ed 93       	st	X+, r30
 26c:	a2 17       	cp	r26, r18
 26e:	b3 07       	cpc	r27, r19
 270:	c1 f7       	brne	.-16     	; 0x262 <nRF_SET_Reciver_Addres+0x28>
 272:	45 e0       	ldi	r20, 0x05	; 5
 274:	be 01       	movw	r22, r28
 276:	6f 5f       	subi	r22, 0xFF	; 255
 278:	7f 4f       	sbci	r23, 0xFF	; 255
 27a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <nRF_Write_Register>
 27e:	05 c0       	rjmp	.+10     	; 0x28a <nRF_SET_Reciver_Addres+0x50>
 280:	fb 01       	movw	r30, r22
 282:	64 91       	lpm	r22, Z
 284:	69 83       	std	Y+1, r22	; 0x01
 286:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 28a:	0f 90       	pop	r0
 28c:	0f 90       	pop	r0
 28e:	0f 90       	pop	r0
 290:	0f 90       	pop	r0
 292:	0f 90       	pop	r0
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	08 95       	ret

0000029a <nRF_Set_State_And_Width_Of_CRC>:
 29a:	1f 93       	push	r17
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	1f 92       	push	r1
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	18 2f       	mov	r17, r24
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	69 83       	std	Y+1, r22	; 0x01
 2ac:	0e 94 c4 00 	call	0x188	; 0x188 <nRF_Read_One_Byte_From_Register>
 2b0:	69 81       	ldd	r22, Y+1	; 0x01
 2b2:	11 30       	cpi	r17, 0x01	; 1
 2b4:	09 f4       	brne	.+2      	; 0x2b8 <nRF_Set_State_And_Width_Of_CRC+0x1e>
 2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <nRF_Set_State_And_Width_Of_CRC+0x26>
 2b8:	12 30       	cpi	r17, 0x02	; 2
 2ba:	11 f4       	brne	.+4      	; 0x2c0 <nRF_Set_State_And_Width_Of_CRC+0x26>
 2bc:	84 60       	ori	r24, 0x04	; 4
 2be:	01 c0       	rjmp	.+2      	; 0x2c2 <nRF_Set_State_And_Width_Of_CRC+0x28>
 2c0:	8b 7f       	andi	r24, 0xFB	; 251
 2c2:	61 30       	cpi	r22, 0x01	; 1
 2c4:	11 f4       	brne	.+4      	; 0x2ca <nRF_Set_State_And_Width_Of_CRC+0x30>
 2c6:	88 60       	ori	r24, 0x08	; 8
 2c8:	03 c0       	rjmp	.+6      	; 0x2d0 <nRF_Set_State_And_Width_Of_CRC+0x36>
 2ca:	62 30       	cpi	r22, 0x02	; 2
 2cc:	09 f4       	brne	.+2      	; 0x2d0 <nRF_Set_State_And_Width_Of_CRC+0x36>
 2ce:	87 7f       	andi	r24, 0xF7	; 247
 2d0:	68 2f       	mov	r22, r24
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	0f 90       	pop	r0
 2d6:	df 91       	pop	r29
 2d8:	cf 91       	pop	r28
 2da:	1f 91       	pop	r17
 2dc:	0c 94 cd 00 	jmp	0x19a	; 0x19a <nRF_Config_Register>

000002e0 <nRF_RX_Power_Up>:
 2e0:	40 98       	cbi	0x08, 0	; 8
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	0e 94 c4 00 	call	0x188	; 0x188 <nRF_Read_One_Byte_From_Register>
 2e8:	68 2f       	mov	r22, r24
 2ea:	63 60       	ori	r22, 0x03	; 3
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 2f2:	40 9a       	sbi	0x08, 0	; 8
 2f4:	87 e0       	ldi	r24, 0x07	; 7
 2f6:	92 e0       	ldi	r25, 0x02	; 2
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <nRF_RX_Power_Up+0x18>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <nRF_RX_Power_Up+0x1e>
 2fe:	00 00       	nop
 300:	08 95       	ret

00000302 <nRF_RX_EVENT>:
 302:	ff 92       	push	r15
 304:	0f 93       	push	r16
 306:	1f 93       	push	r17
 308:	cf 93       	push	r28
 30a:	df 93       	push	r29
 30c:	80 91 00 01 	lds	r24, 0x0100
 310:	81 30       	cpi	r24, 0x01	; 1
 312:	21 f4       	brne	.+8      	; 0x31c <nRF_RX_EVENT+0x1a>
 314:	0e 94 70 01 	call	0x2e0	; 0x2e0 <nRF_RX_Power_Up>
 318:	10 92 00 01 	sts	0x0100, r1
 31c:	80 91 28 01 	lds	r24, 0x0128
 320:	88 23       	and	r24, r24
 322:	09 f4       	brne	.+2      	; 0x326 <nRF_RX_EVENT+0x24>
 324:	40 c0       	rjmp	.+128    	; 0x3a6 <nRF_RX_EVENT+0xa4>
 326:	40 98       	cbi	0x08, 0	; 8
 328:	10 92 28 01 	sts	0x0128, r1
 32c:	84 e0       	ldi	r24, 0x04	; 4
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	08 2f       	mov	r16, r24
 332:	41 98       	cbi	0x08, 1	; 8
 334:	80 e6       	ldi	r24, 0x60	; 96
 336:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	0e 94 6c 00 	call	0xd8	; 0xd8 <SPI_WriteReadByte>
 340:	18 2f       	mov	r17, r24
 342:	41 9a       	sbi	0x08, 1	; 8
 344:	81 32       	cpi	r24, 0x21	; 33
 346:	60 f0       	brcs	.+24     	; 0x360 <nRF_RX_EVENT+0x5e>
 348:	41 98       	cbi	0x08, 1	; 8
 34a:	8f ef       	ldi	r24, 0xFF	; 255
 34c:	0e 94 6c 00 	call	0xd8	; 0xd8 <SPI_WriteReadByte>
 350:	41 9a       	sbi	0x08, 1	; 8
 352:	68 2f       	mov	r22, r24
 354:	60 64       	ori	r22, 0x40	; 64
 356:	87 e0       	ldi	r24, 0x07	; 7
 358:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 35c:	40 9a       	sbi	0x08, 0	; 8
 35e:	23 c0       	rjmp	.+70     	; 0x3a6 <nRF_RX_EVENT+0xa4>
 360:	41 98       	cbi	0x08, 1	; 8
 362:	81 e6       	ldi	r24, 0x61	; 97
 364:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 368:	c4 e0       	ldi	r28, 0x04	; 4
 36a:	d1 e0       	ldi	r29, 0x01	; 1
 36c:	f1 2e       	mov	r15, r17
 36e:	f0 0e       	add	r15, r16
 370:	04 c0       	rjmp	.+8      	; 0x37a <nRF_RX_EVENT+0x78>
 372:	8f ef       	ldi	r24, 0xFF	; 255
 374:	0e 94 6c 00 	call	0xd8	; 0xd8 <SPI_WriteReadByte>
 378:	89 93       	st	Y+, r24
 37a:	fc 12       	cpse	r15, r28
 37c:	fa cf       	rjmp	.-12     	; 0x372 <nRF_RX_EVENT+0x70>
 37e:	41 9a       	sbi	0x08, 1	; 8
 380:	87 e1       	ldi	r24, 0x17	; 23
 382:	0e 94 c4 00 	call	0x188	; 0x188 <nRF_Read_One_Byte_From_Register>
 386:	c8 2f       	mov	r28, r24
 388:	11 23       	and	r17, r17
 38a:	51 f0       	breq	.+20     	; 0x3a0 <nRF_RX_EVENT+0x9e>
 38c:	e0 91 01 01 	lds	r30, 0x0101
 390:	f0 91 02 01 	lds	r31, 0x0102
 394:	30 97       	sbiw	r30, 0x00	; 0
 396:	21 f0       	breq	.+8      	; 0x3a0 <nRF_RX_EVENT+0x9e>
 398:	61 2f       	mov	r22, r17
 39a:	84 e0       	ldi	r24, 0x04	; 4
 39c:	91 e0       	ldi	r25, 0x01	; 1
 39e:	09 95       	icall
 3a0:	c0 ff       	sbrs	r28, 0
 3a2:	c7 cf       	rjmp	.-114    	; 0x332 <nRF_RX_EVENT+0x30>
 3a4:	d1 cf       	rjmp	.-94     	; 0x348 <nRF_RX_EVENT+0x46>
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	1f 91       	pop	r17
 3ac:	0f 91       	pop	r16
 3ae:	ff 90       	pop	r15
 3b0:	08 95       	ret

000003b2 <nRF_Set_Channel>:
 3b2:	68 2f       	mov	r22, r24
 3b4:	6f 77       	andi	r22, 0x7F	; 127
 3b6:	85 e0       	ldi	r24, 0x05	; 5
 3b8:	0c 94 cd 00 	jmp	0x19a	; 0x19a <nRF_Config_Register>

000003bc <nRF_Clear_TX>:
 3bc:	41 98       	cbi	0x08, 1	; 8
 3be:	81 ee       	ldi	r24, 0xE1	; 225
 3c0:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 3c4:	41 9a       	sbi	0x08, 1	; 8
 3c6:	08 95       	ret

000003c8 <nRF_Clear_RX>:
 3c8:	41 98       	cbi	0x08, 1	; 8
 3ca:	82 ee       	ldi	r24, 0xE2	; 226
 3cc:	0e 94 72 00 	call	0xe4	; 0xe4 <SPI_WriteByte>
 3d0:	41 9a       	sbi	0x08, 1	; 8
 3d2:	08 95       	ret

000003d4 <nRF_Set_Active_DataPipe_And_ACK>:
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	1f 92       	push	r1
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	18 2f       	mov	r17, r24
 3e4:	04 2f       	mov	r16, r20
 3e6:	82 e0       	ldi	r24, 0x02	; 2
 3e8:	69 83       	std	Y+1, r22	; 0x01
 3ea:	0e 94 c4 00 	call	0x188	; 0x188 <nRF_Read_One_Byte_From_Register>
 3ee:	98 2f       	mov	r25, r24
 3f0:	69 81       	ldd	r22, Y+1	; 0x01
 3f2:	61 30       	cpi	r22, 0x01	; 1
 3f4:	11 f4       	brne	.+4      	; 0x3fa <nRF_Set_Active_DataPipe_And_ACK+0x26>
 3f6:	91 2b       	or	r25, r17
 3f8:	05 c0       	rjmp	.+10     	; 0x404 <nRF_Set_Active_DataPipe_And_ACK+0x30>
 3fa:	62 30       	cpi	r22, 0x02	; 2
 3fc:	19 f4       	brne	.+6      	; 0x404 <nRF_Set_Active_DataPipe_And_ACK+0x30>
 3fe:	81 2f       	mov	r24, r17
 400:	80 95       	com	r24
 402:	98 23       	and	r25, r24
 404:	69 2f       	mov	r22, r25
 406:	82 e0       	ldi	r24, 0x02	; 2
 408:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	0e 94 c4 00 	call	0x188	; 0x188 <nRF_Read_One_Byte_From_Register>
 412:	68 2f       	mov	r22, r24
 414:	01 30       	cpi	r16, 0x01	; 1
 416:	11 f4       	brne	.+4      	; 0x41c <nRF_Set_Active_DataPipe_And_ACK+0x48>
 418:	61 2b       	or	r22, r17
 41a:	04 c0       	rjmp	.+8      	; 0x424 <nRF_Set_Active_DataPipe_And_ACK+0x50>
 41c:	02 30       	cpi	r16, 0x02	; 2
 41e:	11 f4       	brne	.+4      	; 0x424 <nRF_Set_Active_DataPipe_And_ACK+0x50>
 420:	10 95       	com	r17
 422:	61 23       	and	r22, r17
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	0f 90       	pop	r0
 428:	df 91       	pop	r29
 42a:	cf 91       	pop	r28
 42c:	1f 91       	pop	r17
 42e:	0f 91       	pop	r16
 430:	0c 94 cd 00 	jmp	0x19a	; 0x19a <nRF_Config_Register>

00000434 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>:
 434:	cf 93       	push	r28
 436:	c6 2f       	mov	r28, r22
 438:	68 2f       	mov	r22, r24
 43a:	8c e1       	ldi	r24, 0x1C	; 28
 43c:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 440:	8d e1       	ldi	r24, 0x1D	; 29
 442:	0e 94 c4 00 	call	0x188	; 0x188 <nRF_Read_One_Byte_From_Register>
 446:	c1 30       	cpi	r28, 0x01	; 1
 448:	11 f4       	brne	.+4      	; 0x44e <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1a>
 44a:	84 60       	ori	r24, 0x04	; 4
 44c:	03 c0       	rjmp	.+6      	; 0x454 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x20>
 44e:	c2 30       	cpi	r28, 0x02	; 2
 450:	09 f4       	brne	.+2      	; 0x454 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x20>
 452:	8b 7f       	andi	r24, 0xFB	; 251
 454:	68 2f       	mov	r22, r24
 456:	8d e1       	ldi	r24, 0x1D	; 29
 458:	cf 91       	pop	r28
 45a:	0c 94 cd 00 	jmp	0x19a	; 0x19a <nRF_Config_Register>

0000045e <Initialize_INTERRUPT_For_nRF>:
 45e:	e8 9a       	sbi	0x1d, 0	; 29
 460:	e9 e6       	ldi	r30, 0x69	; 105
 462:	f0 e0       	ldi	r31, 0x00	; 0
 464:	80 81       	ld	r24, Z
 466:	82 60       	ori	r24, 0x02	; 2
 468:	80 83       	st	Z, r24
 46a:	08 95       	ret

0000046c <nRF_init>:
 46c:	0e 94 58 00 	call	0xb0	; 0xb0 <init_SPI>
 470:	0e 94 2f 02 	call	0x45e	; 0x45e <Initialize_INTERRUPT_For_nRF>
 474:	8b e7       	ldi	r24, 0x7B	; 123
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <nRF_SET_Transmitter_Adres>
 47c:	61 e8       	ldi	r22, 0x81	; 129
 47e:	70 e0       	ldi	r23, 0x00	; 0
 480:	8a e0       	ldi	r24, 0x0A	; 10
 482:	0e 94 1d 01 	call	0x23a	; 0x23a <nRF_SET_Reciver_Addres>
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 48e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <nRF_Clear_RX>
 492:	0e 94 de 01 	call	0x3bc	; 0x3bc <nRF_Clear_TX>
 496:	61 e0       	ldi	r22, 0x01	; 1
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	0e 94 4d 01 	call	0x29a	; 0x29a <nRF_Set_State_And_Width_Of_CRC>
 49e:	8a e0       	ldi	r24, 0x0A	; 10
 4a0:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <nRF_Set_Channel>
 4a4:	41 e0       	ldi	r20, 0x01	; 1
 4a6:	61 e0       	ldi	r22, 0x01	; 1
 4a8:	81 e0       	ldi	r24, 0x01	; 1
 4aa:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <nRF_Set_Active_DataPipe_And_ACK>
 4ae:	6f ef       	ldi	r22, 0xFF	; 255
 4b0:	84 e0       	ldi	r24, 0x04	; 4
 4b2:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 4b6:	66 e0       	ldi	r22, 0x06	; 6
 4b8:	86 e0       	ldi	r24, 0x06	; 6
 4ba:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 4be:	61 e0       	ldi	r22, 0x01	; 1
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	0e 94 1a 02 	call	0x434	; 0x434 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	80 93 28 01 	sts	0x0128, r24
 4cc:	10 92 25 01 	sts	0x0125, r1
 4d0:	60 e7       	ldi	r22, 0x70	; 112
 4d2:	87 e0       	ldi	r24, 0x07	; 7
 4d4:	0c 94 cd 00 	jmp	0x19a	; 0x19a <nRF_Config_Register>

000004d8 <__vector_1>:
 4d8:	1f 92       	push	r1
 4da:	0f 92       	push	r0
 4dc:	0f b6       	in	r0, 0x3f	; 63
 4de:	0f 92       	push	r0
 4e0:	11 24       	eor	r1, r1
 4e2:	2f 93       	push	r18
 4e4:	3f 93       	push	r19
 4e6:	4f 93       	push	r20
 4e8:	5f 93       	push	r21
 4ea:	6f 93       	push	r22
 4ec:	7f 93       	push	r23
 4ee:	8f 93       	push	r24
 4f0:	9f 93       	push	r25
 4f2:	af 93       	push	r26
 4f4:	bf 93       	push	r27
 4f6:	cf 93       	push	r28
 4f8:	ef 93       	push	r30
 4fa:	ff 93       	push	r31
 4fc:	41 98       	cbi	0x08, 1	; 8
 4fe:	8f ef       	ldi	r24, 0xFF	; 255
 500:	0e 94 6c 00 	call	0xd8	; 0xd8 <SPI_WriteReadByte>
 504:	c8 2f       	mov	r28, r24
 506:	41 9a       	sbi	0x08, 1	; 8
 508:	86 ff       	sbrs	r24, 6
 50a:	03 c0       	rjmp	.+6      	; 0x512 <__vector_1+0x3a>
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	80 93 28 01 	sts	0x0128, r24
 512:	c5 ff       	sbrs	r28, 5
 514:	0b c0       	rjmp	.+22     	; 0x52c <__vector_1+0x54>
 516:	c0 62       	ori	r28, 0x20	; 32
 518:	6c 2f       	mov	r22, r28
 51a:	87 e0       	ldi	r24, 0x07	; 7
 51c:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 520:	10 92 25 01 	sts	0x0125, r1
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	80 93 00 01 	sts	0x0100, r24
 52a:	40 98       	cbi	0x08, 0	; 8
 52c:	c4 ff       	sbrs	r28, 4
 52e:	0d c0       	rjmp	.+26     	; 0x54a <__vector_1+0x72>
 530:	6c 2f       	mov	r22, r28
 532:	60 63       	ori	r22, 0x30	; 48
 534:	87 e0       	ldi	r24, 0x07	; 7
 536:	0e 94 cd 00 	call	0x19a	; 0x19a <nRF_Config_Register>
 53a:	10 92 25 01 	sts	0x0125, r1
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	80 93 00 01 	sts	0x0100, r24
 544:	0e 94 de 01 	call	0x3bc	; 0x3bc <nRF_Clear_TX>
 548:	40 98       	cbi	0x08, 0	; 8
 54a:	ff 91       	pop	r31
 54c:	ef 91       	pop	r30
 54e:	cf 91       	pop	r28
 550:	bf 91       	pop	r27
 552:	af 91       	pop	r26
 554:	9f 91       	pop	r25
 556:	8f 91       	pop	r24
 558:	7f 91       	pop	r23
 55a:	6f 91       	pop	r22
 55c:	5f 91       	pop	r21
 55e:	4f 91       	pop	r20
 560:	3f 91       	pop	r19
 562:	2f 91       	pop	r18
 564:	0f 90       	pop	r0
 566:	0f be       	out	0x3f, r0	; 63
 568:	0f 90       	pop	r0
 56a:	1f 90       	pop	r1
 56c:	18 95       	reti

0000056e <usart_send_char>:
 56e:	90 91 3b 01 	lds	r25, 0x013B
 572:	9f 5f       	subi	r25, 0xFF	; 255
 574:	9f 70       	andi	r25, 0x0F	; 15
 576:	20 91 6c 01 	lds	r18, 0x016C
 57a:	92 17       	cp	r25, r18
 57c:	e1 f3       	breq	.-8      	; 0x576 <usart_send_char+0x8>
 57e:	e9 2f       	mov	r30, r25
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	e6 5d       	subi	r30, 0xD6	; 214
 584:	fe 4f       	sbci	r31, 0xFE	; 254
 586:	80 83       	st	Z, r24
 588:	90 93 3b 01 	sts	0x013B, r25
 58c:	80 91 c1 00 	lds	r24, 0x00C1
 590:	80 62       	ori	r24, 0x20	; 32
 592:	80 93 c1 00 	sts	0x00C1, r24
 596:	08 95       	ret

00000598 <__vector_18>:
 598:	1f 92       	push	r1
 59a:	0f 92       	push	r0
 59c:	0f b6       	in	r0, 0x3f	; 63
 59e:	0f 92       	push	r0
 5a0:	11 24       	eor	r1, r1
 5a2:	2f 93       	push	r18
 5a4:	3f 93       	push	r19
 5a6:	4f 93       	push	r20
 5a8:	5f 93       	push	r21
 5aa:	6f 93       	push	r22
 5ac:	7f 93       	push	r23
 5ae:	8f 93       	push	r24
 5b0:	9f 93       	push	r25
 5b2:	af 93       	push	r26
 5b4:	bf 93       	push	r27
 5b6:	ef 93       	push	r30
 5b8:	ff 93       	push	r31
 5ba:	80 91 c6 00 	lds	r24, 0x00C6
 5be:	8d 30       	cpi	r24, 0x0D	; 13
 5c0:	49 f4       	brne	.+18     	; 0x5d4 <__vector_18+0x3c>
 5c2:	0e 94 b7 02 	call	0x56e	; 0x56e <usart_send_char>
 5c6:	8a e0       	ldi	r24, 0x0A	; 10
 5c8:	0e 94 b7 02 	call	0x56e	; 0x56e <usart_send_char>
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	80 93 03 01 	sts	0x0103, r24
 5d2:	80 e0       	ldi	r24, 0x00	; 0
 5d4:	80 93 c6 00 	sts	0x00C6, r24
 5d8:	e0 91 29 01 	lds	r30, 0x0129
 5dc:	ef 5f       	subi	r30, 0xFF	; 255
 5de:	ef 71       	andi	r30, 0x1F	; 31
 5e0:	90 91 3a 01 	lds	r25, 0x013A
 5e4:	e9 17       	cp	r30, r25
 5e6:	31 f0       	breq	.+12     	; 0x5f4 <__vector_18+0x5c>
 5e8:	e0 93 29 01 	sts	0x0129, r30
 5ec:	f0 e0       	ldi	r31, 0x00	; 0
 5ee:	e4 5c       	subi	r30, 0xC4	; 196
 5f0:	fe 4f       	sbci	r31, 0xFE	; 254
 5f2:	80 83       	st	Z, r24
 5f4:	ff 91       	pop	r31
 5f6:	ef 91       	pop	r30
 5f8:	bf 91       	pop	r27
 5fa:	af 91       	pop	r26
 5fc:	9f 91       	pop	r25
 5fe:	8f 91       	pop	r24
 600:	7f 91       	pop	r23
 602:	6f 91       	pop	r22
 604:	5f 91       	pop	r21
 606:	4f 91       	pop	r20
 608:	3f 91       	pop	r19
 60a:	2f 91       	pop	r18
 60c:	0f 90       	pop	r0
 60e:	0f be       	out	0x3f, r0	; 63
 610:	0f 90       	pop	r0
 612:	1f 90       	pop	r1
 614:	18 95       	reti

00000616 <__vector_19>:
 616:	1f 92       	push	r1
 618:	0f 92       	push	r0
 61a:	0f b6       	in	r0, 0x3f	; 63
 61c:	0f 92       	push	r0
 61e:	11 24       	eor	r1, r1
 620:	8f 93       	push	r24
 622:	9f 93       	push	r25
 624:	ef 93       	push	r30
 626:	ff 93       	push	r31
 628:	90 91 3b 01 	lds	r25, 0x013B
 62c:	80 91 6c 01 	lds	r24, 0x016C
 630:	98 17       	cp	r25, r24
 632:	79 f0       	breq	.+30     	; 0x652 <__vector_19+0x3c>
 634:	80 91 6c 01 	lds	r24, 0x016C
 638:	8f 5f       	subi	r24, 0xFF	; 255
 63a:	8f 70       	andi	r24, 0x0F	; 15
 63c:	80 93 6c 01 	sts	0x016C, r24
 640:	e0 91 6c 01 	lds	r30, 0x016C
 644:	f0 e0       	ldi	r31, 0x00	; 0
 646:	e6 5d       	subi	r30, 0xD6	; 214
 648:	fe 4f       	sbci	r31, 0xFE	; 254
 64a:	80 81       	ld	r24, Z
 64c:	80 93 c6 00 	sts	0x00C6, r24
 650:	05 c0       	rjmp	.+10     	; 0x65c <__vector_19+0x46>
 652:	80 91 c1 00 	lds	r24, 0x00C1
 656:	8f 7d       	andi	r24, 0xDF	; 223
 658:	80 93 c1 00 	sts	0x00C1, r24
 65c:	ff 91       	pop	r31
 65e:	ef 91       	pop	r30
 660:	9f 91       	pop	r25
 662:	8f 91       	pop	r24
 664:	0f 90       	pop	r0
 666:	0f be       	out	0x3f, r0	; 63
 668:	0f 90       	pop	r0
 66a:	1f 90       	pop	r1
 66c:	18 95       	reti

0000066e <strcmp_P>:
 66e:	fb 01       	movw	r30, r22
 670:	dc 01       	movw	r26, r24
 672:	8d 91       	ld	r24, X+
 674:	05 90       	lpm	r0, Z+
 676:	80 19       	sub	r24, r0
 678:	01 10       	cpse	r0, r1
 67a:	d9 f3       	breq	.-10     	; 0x672 <strcmp_P+0x4>
 67c:	99 0b       	sbc	r25, r25
 67e:	08 95       	ret

00000680 <_exit>:
 680:	f8 94       	cli

00000682 <__stop_program>:
 682:	ff cf       	rjmp	.-2      	; 0x682 <__stop_program>
