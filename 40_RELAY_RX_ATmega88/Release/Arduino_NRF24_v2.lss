
Arduino_NRF24_v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000866  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  00000866  000008fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000005c  00800090  00800090  0000092a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000092a  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
   4:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
   8:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
   c:	0c 94 b1 03 	jmp	0x762	; 0x762 <__vector_3>
  10:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  14:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  18:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  1c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  20:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  24:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  28:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  2c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  30:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  34:	0c 94 aa 00 	jmp	0x154	; 0x154 <__vector_13>
  38:	0c 94 83 00 	jmp	0x106	; 0x106 <__vector_14>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__vector_15>
  40:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  44:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  48:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  4c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  50:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	41 54       	subi	r20, 0x41	; 65
  56:	4e 45       	sbci	r20, 0x5E	; 94
  58:	4c 00       	.word	0x004c	; ????

0000005a <__c.1979>:
  5a:	41 54 4e 45 4c 00                                   ATNEL.

00000060 <__ctors_end>:
  60:	11 24       	eor	r1, r1
  62:	1f be       	out	0x3f, r1	; 63
  64:	cf e5       	ldi	r28, 0x5F	; 95
  66:	d8 e0       	ldi	r29, 0x08	; 8
  68:	de bf       	out	0x3e, r29	; 62
  6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
  6c:	10 e0       	ldi	r17, 0x00	; 0
  6e:	a0 e6       	ldi	r26, 0x60	; 96
  70:	b0 e0       	ldi	r27, 0x00	; 0
  72:	e6 e6       	ldi	r30, 0x66	; 102
  74:	f8 e0       	ldi	r31, 0x08	; 8
  76:	02 c0       	rjmp	.+4      	; 0x7c <__do_copy_data+0x10>
  78:	05 90       	lpm	r0, Z+
  7a:	0d 92       	st	X+, r0
  7c:	a0 39       	cpi	r26, 0x90	; 144
  7e:	b1 07       	cpc	r27, r17
  80:	d9 f7       	brne	.-10     	; 0x78 <__do_copy_data+0xc>

00000082 <__do_clear_bss>:
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	a0 e9       	ldi	r26, 0x90	; 144
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	01 c0       	rjmp	.+2      	; 0x8c <.do_clear_bss_start>

0000008a <.do_clear_bss_loop>:
  8a:	1d 92       	st	X+, r1

0000008c <.do_clear_bss_start>:
  8c:	ac 3e       	cpi	r26, 0xEC	; 236
  8e:	b2 07       	cpc	r27, r18
  90:	e1 f7       	brne	.-8      	; 0x8a <.do_clear_bss_loop>
  92:	0e 94 f6 01 	call	0x3ec	; 0x3ec <main>
  96:	0c 94 31 04 	jmp	0x862	; 0x862 <_exit>

0000009a <__bad_interrupt>:
  9a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009e <USART_Init>:
  9e:	90 bd       	out	0x20, r25	; 32
  a0:	89 b9       	out	0x09, r24	; 9
  a2:	88 e1       	ldi	r24, 0x18	; 24
  a4:	8a b9       	out	0x0a, r24	; 10
  a6:	86 e8       	ldi	r24, 0x86	; 134
  a8:	80 bd       	out	0x20, r24	; 32
  aa:	8a 9a       	sbi	0x11, 2	; 17
  ac:	92 9a       	sbi	0x12, 2	; 18
  ae:	8a b1       	in	r24, 0x0a	; 10
  b0:	88 6d       	ori	r24, 0xD8	; 216
  b2:	8a b9       	out	0x0a, r24	; 10
  b4:	08 95       	ret

000000b6 <__vector_15>:
  b6:	1f 92       	push	r1
  b8:	0f 92       	push	r0
  ba:	0f b6       	in	r0, 0x3f	; 63
  bc:	0f 92       	push	r0
  be:	11 24       	eor	r1, r1
  c0:	92 98       	cbi	0x12, 2	; 18
  c2:	0f 90       	pop	r0
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	0f 90       	pop	r0
  c8:	1f 90       	pop	r1
  ca:	18 95       	reti

000000cc <uart_putc>:
  cc:	90 91 93 00 	lds	r25, 0x0093
  d0:	9f 5f       	subi	r25, 0xFF	; 255
  d2:	9f 70       	andi	r25, 0x0F	; 15
  d4:	20 91 94 00 	lds	r18, 0x0094
  d8:	92 17       	cp	r25, r18
  da:	e1 f3       	breq	.-8      	; 0xd4 <uart_putc+0x8>
  dc:	e9 2f       	mov	r30, r25
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	eb 56       	subi	r30, 0x6B	; 107
  e2:	ff 4f       	sbci	r31, 0xFF	; 255
  e4:	80 83       	st	Z, r24
  e6:	90 93 93 00 	sts	0x0093, r25
  ea:	55 9a       	sbi	0x0a, 5	; 10
  ec:	08 95       	ret

000000ee <uart_puts>:
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	ec 01       	movw	r28, r24
  f4:	89 91       	ld	r24, Y+
  f6:	88 23       	and	r24, r24
  f8:	19 f0       	breq	.+6      	; 0x100 <uart_puts+0x12>
  fa:	0e 94 66 00 	call	0xcc	; 0xcc <uart_putc>
  fe:	fa cf       	rjmp	.-12     	; 0xf4 <uart_puts+0x6>
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <__vector_14>:
 106:	1f 92       	push	r1
 108:	0f 92       	push	r0
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	0f 92       	push	r0
 10e:	11 24       	eor	r1, r1
 110:	8f 93       	push	r24
 112:	9f 93       	push	r25
 114:	ef 93       	push	r30
 116:	ff 93       	push	r31
 118:	90 91 93 00 	lds	r25, 0x0093
 11c:	80 91 94 00 	lds	r24, 0x0094
 120:	98 17       	cp	r25, r24
 122:	71 f0       	breq	.+28     	; 0x140 <__vector_14+0x3a>
 124:	80 91 94 00 	lds	r24, 0x0094
 128:	8f 5f       	subi	r24, 0xFF	; 255
 12a:	8f 70       	andi	r24, 0x0F	; 15
 12c:	80 93 94 00 	sts	0x0094, r24
 130:	e0 91 94 00 	lds	r30, 0x0094
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	eb 56       	subi	r30, 0x6B	; 107
 138:	ff 4f       	sbci	r31, 0xFF	; 255
 13a:	80 81       	ld	r24, Z
 13c:	8c b9       	out	0x0c, r24	; 12
 13e:	01 c0       	rjmp	.+2      	; 0x142 <__vector_14+0x3c>
 140:	55 98       	cbi	0x0a, 5	; 10
 142:	ff 91       	pop	r31
 144:	ef 91       	pop	r30
 146:	9f 91       	pop	r25
 148:	8f 91       	pop	r24
 14a:	0f 90       	pop	r0
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	0f 90       	pop	r0
 150:	1f 90       	pop	r1
 152:	18 95       	reti

00000154 <__vector_13>:
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	ef 93       	push	r30
 164:	ff 93       	push	r31
 166:	8c b1       	in	r24, 0x0c	; 12
 168:	e0 91 a5 00 	lds	r30, 0x00A5
 16c:	ef 5f       	subi	r30, 0xFF	; 255
 16e:	ef 71       	andi	r30, 0x1F	; 31
 170:	90 91 a6 00 	lds	r25, 0x00A6
 174:	e9 17       	cp	r30, r25
 176:	31 f0       	breq	.+12     	; 0x184 <__vector_13+0x30>
 178:	e0 93 a5 00 	sts	0x00A5, r30
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	e9 55       	subi	r30, 0x59	; 89
 180:	ff 4f       	sbci	r31, 0xFF	; 255
 182:	80 83       	st	Z, r24
 184:	ff 91       	pop	r31
 186:	ef 91       	pop	r30
 188:	9f 91       	pop	r25
 18a:	8f 91       	pop	r24
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <data_dir_out>:
 196:	d6 9a       	sbi	0x1a, 6	; 26
 198:	d5 9a       	sbi	0x1a, 5	; 26
 19a:	d4 9a       	sbi	0x1a, 4	; 26
 19c:	d3 9a       	sbi	0x1a, 3	; 26
 19e:	08 95       	ret

000001a0 <lcd_readHalf>:
 1a0:	89 b3       	in	r24, 0x19	; 25
 1a2:	83 fb       	bst	r24, 3
 1a4:	88 27       	eor	r24, r24
 1a6:	80 f9       	bld	r24, 0
 1a8:	cc 99       	sbic	0x19, 4	; 25
 1aa:	82 60       	ori	r24, 0x02	; 2
 1ac:	cd 99       	sbic	0x19, 5	; 25
 1ae:	84 60       	ori	r24, 0x04	; 4
 1b0:	ce 99       	sbic	0x19, 6	; 25
 1b2:	88 60       	ori	r24, 0x08	; 8
 1b4:	08 95       	ret

000001b6 <lcd_sendHalf>:
 1b6:	80 ff       	sbrs	r24, 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <lcd_sendHalf+0x8>
 1ba:	db 9a       	sbi	0x1b, 3	; 27
 1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <lcd_sendHalf+0xa>
 1be:	db 98       	cbi	0x1b, 3	; 27
 1c0:	81 ff       	sbrs	r24, 1
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <lcd_sendHalf+0x12>
 1c4:	dc 9a       	sbi	0x1b, 4	; 27
 1c6:	01 c0       	rjmp	.+2      	; 0x1ca <lcd_sendHalf+0x14>
 1c8:	dc 98       	cbi	0x1b, 4	; 27
 1ca:	82 ff       	sbrs	r24, 2
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <lcd_sendHalf+0x1c>
 1ce:	dd 9a       	sbi	0x1b, 5	; 27
 1d0:	01 c0       	rjmp	.+2      	; 0x1d4 <lcd_sendHalf+0x1e>
 1d2:	dd 98       	cbi	0x1b, 5	; 27
 1d4:	83 ff       	sbrs	r24, 3
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <lcd_sendHalf+0x26>
 1d8:	de 9a       	sbi	0x1b, 6	; 27
 1da:	08 95       	ret
 1dc:	de 98       	cbi	0x1b, 6	; 27
 1de:	08 95       	ret

000001e0 <_lcd_read_byte>:
 1e0:	cf 93       	push	r28
 1e2:	d6 98       	cbi	0x1a, 6	; 26
 1e4:	d5 98       	cbi	0x1a, 5	; 26
 1e6:	d4 98       	cbi	0x1a, 4	; 26
 1e8:	d3 98       	cbi	0x1a, 3	; 26
 1ea:	d9 9a       	sbi	0x1b, 1	; 27
 1ec:	da 9a       	sbi	0x1b, 2	; 27
 1ee:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_readHalf>
 1f2:	c8 2f       	mov	r28, r24
 1f4:	c2 95       	swap	r28
 1f6:	c0 7f       	andi	r28, 0xF0	; 240
 1f8:	da 98       	cbi	0x1b, 2	; 27
 1fa:	da 9a       	sbi	0x1b, 2	; 27
 1fc:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_readHalf>
 200:	da 98       	cbi	0x1b, 2	; 27
 202:	8c 2b       	or	r24, r28
 204:	cf 91       	pop	r28
 206:	08 95       	ret

00000208 <check_BF>:
 208:	d8 98       	cbi	0x1b, 0	; 27
 20a:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <_lcd_read_byte>

0000020e <_lcd_write_byte>:
 20e:	cf 93       	push	r28
 210:	c8 2f       	mov	r28, r24
 212:	0e 94 cb 00 	call	0x196	; 0x196 <data_dir_out>
 216:	d9 98       	cbi	0x1b, 1	; 27
 218:	da 9a       	sbi	0x1b, 2	; 27
 21a:	8c 2f       	mov	r24, r28
 21c:	82 95       	swap	r24
 21e:	8f 70       	andi	r24, 0x0F	; 15
 220:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_sendHalf>
 224:	da 98       	cbi	0x1b, 2	; 27
 226:	da 9a       	sbi	0x1b, 2	; 27
 228:	8c 2f       	mov	r24, r28
 22a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_sendHalf>
 22e:	da 98       	cbi	0x1b, 2	; 27
 230:	0e 94 04 01 	call	0x208	; 0x208 <check_BF>
 234:	87 fd       	sbrc	r24, 7
 236:	fc cf       	rjmp	.-8      	; 0x230 <_lcd_write_byte+0x22>
 238:	cf 91       	pop	r28
 23a:	08 95       	ret

0000023c <lcd_write_cmd>:
 23c:	d8 98       	cbi	0x1b, 0	; 27
 23e:	0c 94 07 01 	jmp	0x20e	; 0x20e <_lcd_write_byte>

00000242 <lcd_write_data>:
 242:	d8 9a       	sbi	0x1b, 0	; 27
 244:	0c 94 07 01 	jmp	0x20e	; 0x20e <_lcd_write_byte>

00000248 <lcd_char>:
 248:	90 e8       	ldi	r25, 0x80	; 128
 24a:	98 0f       	add	r25, r24
 24c:	98 30       	cpi	r25, 0x08	; 8
 24e:	08 f4       	brcc	.+2      	; 0x252 <lcd_char+0xa>
 250:	87 70       	andi	r24, 0x07	; 7
 252:	0c 94 21 01 	jmp	0x242	; 0x242 <lcd_write_data>

00000256 <lcd_str>:
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	ec 01       	movw	r28, r24
 25c:	89 91       	ld	r24, Y+
 25e:	88 23       	and	r24, r24
 260:	19 f0       	breq	.+6      	; 0x268 <lcd_str+0x12>
 262:	0e 94 24 01 	call	0x248	; 0x248 <lcd_char>
 266:	fa cf       	rjmp	.-12     	; 0x25c <lcd_str+0x6>
 268:	df 91       	pop	r29
 26a:	cf 91       	pop	r28
 26c:	08 95       	ret

0000026e <lcd_cls>:
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0c 94 1e 01 	jmp	0x23c	; 0x23c <lcd_write_cmd>

00000274 <lcd_init>:
 274:	d7 9a       	sbi	0x1a, 7	; 26
 276:	df 9a       	sbi	0x1b, 7	; 27
 278:	0e 94 cb 00 	call	0x196	; 0x196 <data_dir_out>
 27c:	d0 9a       	sbi	0x1a, 0	; 26
 27e:	d2 9a       	sbi	0x1a, 2	; 26
 280:	d1 9a       	sbi	0x1a, 1	; 26
 282:	d8 9a       	sbi	0x1b, 0	; 27
 284:	da 9a       	sbi	0x1b, 2	; 27
 286:	d9 9a       	sbi	0x1b, 1	; 27
 288:	8f ef       	ldi	r24, 0xFF	; 255
 28a:	91 ea       	ldi	r25, 0xA1	; 161
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <lcd_init+0x18>
 290:	00 c0       	rjmp	.+0      	; 0x292 <lcd_init+0x1e>
 292:	00 00       	nop
 294:	da 98       	cbi	0x1b, 2	; 27
 296:	d8 98       	cbi	0x1b, 0	; 27
 298:	d9 98       	cbi	0x1b, 1	; 27
 29a:	da 9a       	sbi	0x1b, 2	; 27
 29c:	83 e0       	ldi	r24, 0x03	; 3
 29e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_sendHalf>
 2a2:	da 98       	cbi	0x1b, 2	; 27
 2a4:	87 e4       	ldi	r24, 0x47	; 71
 2a6:	9c e2       	ldi	r25, 0x2C	; 44
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <lcd_init+0x34>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <lcd_init+0x3a>
 2ae:	da 9a       	sbi	0x1b, 2	; 27
 2b0:	83 e0       	ldi	r24, 0x03	; 3
 2b2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_sendHalf>
 2b6:	da 98       	cbi	0x1b, 2	; 27
 2b8:	84 e1       	ldi	r24, 0x14	; 20
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <lcd_init+0x48>
 2c0:	00 00       	nop
 2c2:	da 9a       	sbi	0x1b, 2	; 27
 2c4:	83 e0       	ldi	r24, 0x03	; 3
 2c6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_sendHalf>
 2ca:	da 98       	cbi	0x1b, 2	; 27
 2cc:	84 e1       	ldi	r24, 0x14	; 20
 2ce:	91 e0       	ldi	r25, 0x01	; 1
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <lcd_init+0x5c>
 2d4:	00 00       	nop
 2d6:	da 9a       	sbi	0x1b, 2	; 27
 2d8:	82 e0       	ldi	r24, 0x02	; 2
 2da:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_sendHalf>
 2de:	da 98       	cbi	0x1b, 2	; 27
 2e0:	84 e1       	ldi	r24, 0x14	; 20
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <lcd_init+0x70>
 2e8:	00 00       	nop
 2ea:	88 e2       	ldi	r24, 0x28	; 40
 2ec:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_write_cmd>
 2f0:	88 e0       	ldi	r24, 0x08	; 8
 2f2:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_write_cmd>
 2f6:	8c e0       	ldi	r24, 0x0C	; 12
 2f8:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_write_cmd>
 2fc:	86 e0       	ldi	r24, 0x06	; 6
 2fe:	0e 94 1e 01 	call	0x23c	; 0x23c <lcd_write_cmd>
 302:	0c 94 37 01 	jmp	0x26e	; 0x26e <lcd_cls>

00000306 <init_SPI>:
 306:	ba 98       	cbi	0x17, 2	; 23
 308:	bb 9a       	sbi	0x17, 3	; 23
 30a:	b9 9a       	sbi	0x17, 1	; 23
 30c:	bc 9a       	sbi	0x17, 4	; 23
 30e:	bd 9a       	sbi	0x17, 5	; 23
 310:	be 98       	cbi	0x17, 6	; 23
 312:	bf 9a       	sbi	0x17, 7	; 23
 314:	c2 9a       	sbi	0x18, 2	; 24
 316:	c3 98       	cbi	0x18, 3	; 24
 318:	c1 9a       	sbi	0x18, 1	; 24
 31a:	c4 9a       	sbi	0x18, 4	; 24
 31c:	c5 9a       	sbi	0x18, 5	; 24
 31e:	c7 9a       	sbi	0x18, 7	; 24
 320:	8d b1       	in	r24, 0x0d	; 13
 322:	82 65       	ori	r24, 0x52	; 82
 324:	8d b9       	out	0x0d, r24	; 13
 326:	70 9a       	sbi	0x0e, 0	; 14
 328:	08 95       	ret

0000032a <SPI_WriteReadByte>:
 32a:	8f b9       	out	0x0f, r24	; 15
 32c:	77 9b       	sbis	0x0e, 7	; 14
 32e:	fe cf       	rjmp	.-4      	; 0x32c <SPI_WriteReadByte+0x2>
 330:	8f b1       	in	r24, 0x0f	; 15
 332:	08 95       	ret

00000334 <SPI_WriteByte>:
 334:	8f b9       	out	0x0f, r24	; 15
 336:	77 9b       	sbis	0x0e, 7	; 14
 338:	fe cf       	rjmp	.-4      	; 0x336 <SPI_WriteByte+0x2>
 33a:	08 95       	ret

0000033c <SPI_WriteReadDataBuffer>:
 33c:	cf 92       	push	r12
 33e:	df 92       	push	r13
 340:	ff 92       	push	r15
 342:	0f 93       	push	r16
 344:	1f 93       	push	r17
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	1f 92       	push	r1
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62
 350:	f6 2e       	mov	r15, r22
 352:	8c 01       	movw	r16, r24
 354:	6b 01       	movw	r12, r22
 356:	8c 2d       	mov	r24, r12
 358:	8f 19       	sub	r24, r15
 35a:	84 17       	cp	r24, r20
 35c:	58 f4       	brcc	.+22     	; 0x374 <SPI_WriteReadDataBuffer+0x38>
 35e:	f6 01       	movw	r30, r12
 360:	81 91       	ld	r24, Z+
 362:	6f 01       	movw	r12, r30
 364:	49 83       	std	Y+1, r20	; 0x01
 366:	0e 94 95 01 	call	0x32a	; 0x32a <SPI_WriteReadByte>
 36a:	f8 01       	movw	r30, r16
 36c:	81 93       	st	Z+, r24
 36e:	8f 01       	movw	r16, r30
 370:	49 81       	ldd	r20, Y+1	; 0x01
 372:	f1 cf       	rjmp	.-30     	; 0x356 <SPI_WriteReadDataBuffer+0x1a>
 374:	0f 90       	pop	r0
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	0f 91       	pop	r16
 37e:	ff 90       	pop	r15
 380:	df 90       	pop	r13
 382:	cf 90       	pop	r12
 384:	08 95       	ret

00000386 <moja_funkcja>:
 386:	0f 93       	push	r16
 388:	1f 93       	push	r17
 38a:	cf 93       	push	r28
 38c:	df 93       	push	r29
 38e:	00 d0       	rcall	.+0      	; 0x390 <moja_funkcja+0xa>
 390:	00 d0       	rcall	.+0      	; 0x392 <moja_funkcja+0xc>
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
 396:	8c 01       	movw	r16, r24
 398:	86 2f       	mov	r24, r22
 39a:	19 82       	std	Y+1, r1	; 0x01
 39c:	1a 82       	std	Y+2, r1	; 0x02
 39e:	1b 82       	std	Y+3, r1	; 0x03
 3a0:	1c 82       	std	Y+4, r1	; 0x04
 3a2:	4a e0       	ldi	r20, 0x0A	; 10
 3a4:	be 01       	movw	r22, r28
 3a6:	6f 5f       	subi	r22, 0xFF	; 255
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__itoa_ncheck>
 3b0:	80 e6       	ldi	r24, 0x60	; 96
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	0e 94 77 00 	call	0xee	; 0xee <uart_puts>
 3b8:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_cls>
 3bc:	81 e7       	ldi	r24, 0x71	; 113
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_str>
 3c4:	ce 01       	movw	r24, r28
 3c6:	01 96       	adiw	r24, 0x01	; 1
 3c8:	0e 94 77 00 	call	0xee	; 0xee <uart_puts>
 3cc:	8f e7       	ldi	r24, 0x7F	; 127
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 77 00 	call	0xee	; 0xee <uart_puts>
 3d4:	c8 01       	movw	r24, r16
 3d6:	0e 94 77 00 	call	0xee	; 0xee <uart_puts>
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	08 95       	ret

000003ec <main>:
 3ec:	b8 9a       	sbi	0x17, 0	; 23
 3ee:	c0 98       	cbi	0x18, 0	; 24
 3f0:	85 e0       	ldi	r24, 0x05	; 5
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	0e 94 4f 00 	call	0x9e	; 0x9e <USART_Init>
 3f8:	0e 94 3a 01 	call	0x274	; 0x274 <lcd_init>
 3fc:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <nRF_init>
 400:	83 ec       	ldi	r24, 0xC3	; 195
 402:	91 e0       	ldi	r25, 0x01	; 1
 404:	0e 94 0a 02 	call	0x414	; 0x414 <register_nRF_RX_Event_Callback>
 408:	78 94       	sei
 40a:	0e 94 b5 02 	call	0x56a	; 0x56a <nRF_RX_Power_Up>
 40e:	0e 94 c5 02 	call	0x58a	; 0x58a <nRF_RX_EVENT>
 412:	fd cf       	rjmp	.-6      	; 0x40e <main+0x22>

00000414 <register_nRF_RX_Event_Callback>:
 414:	90 93 91 00 	sts	0x0091, r25
 418:	80 93 90 00 	sts	0x0090, r24
 41c:	08 95       	ret

0000041e <nRF_Read_One_Byte_From_Register>:
 41e:	c1 98       	cbi	0x18, 1	; 24
 420:	8f 71       	andi	r24, 0x1F	; 31
 422:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 426:	8f ef       	ldi	r24, 0xFF	; 255
 428:	0e 94 95 01 	call	0x32a	; 0x32a <SPI_WriteReadByte>
 42c:	c1 9a       	sbi	0x18, 1	; 24
 42e:	08 95       	ret

00000430 <nRF_Config_Register>:
 430:	cf 93       	push	r28
 432:	df 93       	push	r29
 434:	1f 92       	push	r1
 436:	cd b7       	in	r28, 0x3d	; 61
 438:	de b7       	in	r29, 0x3e	; 62
 43a:	c1 98       	cbi	0x18, 1	; 24
 43c:	8f 71       	andi	r24, 0x1F	; 31
 43e:	80 62       	ori	r24, 0x20	; 32
 440:	69 83       	std	Y+1, r22	; 0x01
 442:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 446:	69 81       	ldd	r22, Y+1	; 0x01
 448:	86 2f       	mov	r24, r22
 44a:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 44e:	c1 9a       	sbi	0x18, 1	; 24
 450:	0f 90       	pop	r0
 452:	df 91       	pop	r29
 454:	cf 91       	pop	r28
 456:	08 95       	ret

00000458 <nRF_Write_Register>:
 458:	0f 93       	push	r16
 45a:	1f 93       	push	r17
 45c:	cf 93       	push	r28
 45e:	df 93       	push	r29
 460:	1f 92       	push	r1
 462:	cd b7       	in	r28, 0x3d	; 61
 464:	de b7       	in	r29, 0x3e	; 62
 466:	8b 01       	movw	r16, r22
 468:	c1 98       	cbi	0x18, 1	; 24
 46a:	8f 71       	andi	r24, 0x1F	; 31
 46c:	80 62       	ori	r24, 0x20	; 32
 46e:	49 83       	std	Y+1, r20	; 0x01
 470:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 474:	49 81       	ldd	r20, Y+1	; 0x01
 476:	b8 01       	movw	r22, r16
 478:	c8 01       	movw	r24, r16
 47a:	0e 94 9e 01 	call	0x33c	; 0x33c <SPI_WriteReadDataBuffer>
 47e:	c1 9a       	sbi	0x18, 1	; 24
 480:	0f 90       	pop	r0
 482:	df 91       	pop	r29
 484:	cf 91       	pop	r28
 486:	1f 91       	pop	r17
 488:	0f 91       	pop	r16
 48a:	08 95       	ret

0000048c <nRF_SET_Transmitter_Adres>:
 48c:	cf 93       	push	r28
 48e:	df 93       	push	r29
 490:	00 d0       	rcall	.+0      	; 0x492 <nRF_SET_Transmitter_Adres+0x6>
 492:	00 d0       	rcall	.+0      	; 0x494 <nRF_SET_Transmitter_Adres+0x8>
 494:	1f 92       	push	r1
 496:	cd b7       	in	r28, 0x3d	; 61
 498:	de b7       	in	r29, 0x3e	; 62
 49a:	de 01       	movw	r26, r28
 49c:	11 96       	adiw	r26, 0x01	; 1
 49e:	9e 01       	movw	r18, r28
 4a0:	2a 5f       	subi	r18, 0xFA	; 250
 4a2:	3f 4f       	sbci	r19, 0xFF	; 255
 4a4:	bd 01       	movw	r22, r26
 4a6:	fc 01       	movw	r30, r24
 4a8:	44 91       	lpm	r20, Z
 4aa:	4d 93       	st	X+, r20
 4ac:	01 96       	adiw	r24, 0x01	; 1
 4ae:	a2 17       	cp	r26, r18
 4b0:	b3 07       	cpc	r27, r19
 4b2:	c9 f7       	brne	.-14     	; 0x4a6 <nRF_SET_Transmitter_Adres+0x1a>
 4b4:	45 e0       	ldi	r20, 0x05	; 5
 4b6:	80 e1       	ldi	r24, 0x10	; 16
 4b8:	0e 94 2c 02 	call	0x458	; 0x458 <nRF_Write_Register>
 4bc:	0f 90       	pop	r0
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	0f 90       	pop	r0
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <nRF_SET_Reciver_Addres>:
 4cc:	cf 93       	push	r28
 4ce:	df 93       	push	r29
 4d0:	00 d0       	rcall	.+0      	; 0x4d2 <nRF_SET_Reciver_Addres+0x6>
 4d2:	00 d0       	rcall	.+0      	; 0x4d4 <nRF_SET_Reciver_Addres+0x8>
 4d4:	1f 92       	push	r1
 4d6:	cd b7       	in	r28, 0x3d	; 61
 4d8:	de b7       	in	r29, 0x3e	; 62
 4da:	96 ef       	ldi	r25, 0xF6	; 246
 4dc:	98 0f       	add	r25, r24
 4de:	96 30       	cpi	r25, 0x06	; 6
 4e0:	18 f4       	brcc	.+6      	; 0x4e8 <nRF_SET_Reciver_Addres+0x1c>
 4e2:	8c 30       	cpi	r24, 0x0C	; 12
 4e4:	98 f4       	brcc	.+38     	; 0x50c <nRF_SET_Reciver_Addres+0x40>
 4e6:	01 c0       	rjmp	.+2      	; 0x4ea <nRF_SET_Reciver_Addres+0x1e>
 4e8:	8a e0       	ldi	r24, 0x0A	; 10
 4ea:	de 01       	movw	r26, r28
 4ec:	11 96       	adiw	r26, 0x01	; 1
 4ee:	9e 01       	movw	r18, r28
 4f0:	2a 5f       	subi	r18, 0xFA	; 250
 4f2:	3f 4f       	sbci	r19, 0xFF	; 255
 4f4:	fb 01       	movw	r30, r22
 4f6:	bd 01       	movw	r22, r26
 4f8:	94 91       	lpm	r25, Z
 4fa:	9d 93       	st	X+, r25
 4fc:	31 96       	adiw	r30, 0x01	; 1
 4fe:	a2 17       	cp	r26, r18
 500:	b3 07       	cpc	r27, r19
 502:	d1 f7       	brne	.-12     	; 0x4f8 <nRF_SET_Reciver_Addres+0x2c>
 504:	45 e0       	ldi	r20, 0x05	; 5
 506:	0e 94 2c 02 	call	0x458	; 0x458 <nRF_Write_Register>
 50a:	05 c0       	rjmp	.+10     	; 0x516 <nRF_SET_Reciver_Addres+0x4a>
 50c:	fb 01       	movw	r30, r22
 50e:	64 91       	lpm	r22, Z
 510:	69 83       	std	Y+1, r22	; 0x01
 512:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 516:	0f 90       	pop	r0
 518:	0f 90       	pop	r0
 51a:	0f 90       	pop	r0
 51c:	0f 90       	pop	r0
 51e:	0f 90       	pop	r0
 520:	df 91       	pop	r29
 522:	cf 91       	pop	r28
 524:	08 95       	ret

00000526 <nRF_Set_State_And_Width_Of_CRC>:
 526:	1f 93       	push	r17
 528:	cf 93       	push	r28
 52a:	df 93       	push	r29
 52c:	1f 92       	push	r1
 52e:	cd b7       	in	r28, 0x3d	; 61
 530:	de b7       	in	r29, 0x3e	; 62
 532:	18 2f       	mov	r17, r24
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	69 83       	std	Y+1, r22	; 0x01
 538:	0e 94 0f 02 	call	0x41e	; 0x41e <nRF_Read_One_Byte_From_Register>
 53c:	69 81       	ldd	r22, Y+1	; 0x01
 53e:	11 30       	cpi	r17, 0x01	; 1
 540:	21 f0       	breq	.+8      	; 0x54a <nRF_Set_State_And_Width_Of_CRC+0x24>
 542:	12 30       	cpi	r17, 0x02	; 2
 544:	11 f4       	brne	.+4      	; 0x54a <nRF_Set_State_And_Width_Of_CRC+0x24>
 546:	84 60       	ori	r24, 0x04	; 4
 548:	01 c0       	rjmp	.+2      	; 0x54c <nRF_Set_State_And_Width_Of_CRC+0x26>
 54a:	8b 7f       	andi	r24, 0xFB	; 251
 54c:	61 30       	cpi	r22, 0x01	; 1
 54e:	11 f4       	brne	.+4      	; 0x554 <nRF_Set_State_And_Width_Of_CRC+0x2e>
 550:	88 60       	ori	r24, 0x08	; 8
 552:	03 c0       	rjmp	.+6      	; 0x55a <nRF_Set_State_And_Width_Of_CRC+0x34>
 554:	62 30       	cpi	r22, 0x02	; 2
 556:	09 f4       	brne	.+2      	; 0x55a <nRF_Set_State_And_Width_Of_CRC+0x34>
 558:	87 7f       	andi	r24, 0xF7	; 247
 55a:	68 2f       	mov	r22, r24
 55c:	80 e0       	ldi	r24, 0x00	; 0
 55e:	0f 90       	pop	r0
 560:	df 91       	pop	r29
 562:	cf 91       	pop	r28
 564:	1f 91       	pop	r17
 566:	0c 94 18 02 	jmp	0x430	; 0x430 <nRF_Config_Register>

0000056a <nRF_RX_Power_Up>:
 56a:	c3 98       	cbi	0x18, 3	; 24
 56c:	80 e0       	ldi	r24, 0x00	; 0
 56e:	0e 94 0f 02 	call	0x41e	; 0x41e <nRF_Read_One_Byte_From_Register>
 572:	68 2f       	mov	r22, r24
 574:	63 60       	ori	r22, 0x03	; 3
 576:	80 e0       	ldi	r24, 0x00	; 0
 578:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 57c:	c3 9a       	sbi	0x18, 3	; 24
 57e:	87 e6       	ldi	r24, 0x67	; 103
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	01 97       	sbiw	r24, 0x01	; 1
 584:	f1 f7       	brne	.-4      	; 0x582 <nRF_RX_Power_Up+0x18>
 586:	00 00       	nop
 588:	08 95       	ret

0000058a <nRF_RX_EVENT>:
 58a:	ef 92       	push	r14
 58c:	ff 92       	push	r15
 58e:	0f 93       	push	r16
 590:	1f 93       	push	r17
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	80 91 92 00 	lds	r24, 0x0092
 59a:	81 30       	cpi	r24, 0x01	; 1
 59c:	21 f4       	brne	.+8      	; 0x5a6 <nRF_RX_EVENT+0x1c>
 59e:	0e 94 b5 02 	call	0x56a	; 0x56a <nRF_RX_Power_Up>
 5a2:	10 92 92 00 	sts	0x0092, r1
 5a6:	80 91 eb 00 	lds	r24, 0x00EB
 5aa:	88 23       	and	r24, r24
 5ac:	09 f4       	brne	.+2      	; 0x5b0 <nRF_RX_EVENT+0x26>
 5ae:	40 c0       	rjmp	.+128    	; 0x630 <nRF_RX_EVENT+0xa6>
 5b0:	c3 98       	cbi	0x18, 3	; 24
 5b2:	10 92 eb 00 	sts	0x00EB, r1
 5b6:	07 ec       	ldi	r16, 0xC7	; 199
 5b8:	10 e0       	ldi	r17, 0x00	; 0
 5ba:	c1 98       	cbi	0x18, 1	; 24
 5bc:	80 e6       	ldi	r24, 0x60	; 96
 5be:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 5c2:	8f ef       	ldi	r24, 0xFF	; 255
 5c4:	0e 94 95 01 	call	0x32a	; 0x32a <SPI_WriteReadByte>
 5c8:	f8 2e       	mov	r15, r24
 5ca:	c1 9a       	sbi	0x18, 1	; 24
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	8f 15       	cp	r24, r15
 5d0:	60 f4       	brcc	.+24     	; 0x5ea <nRF_RX_EVENT+0x60>
 5d2:	c1 98       	cbi	0x18, 1	; 24
 5d4:	8f ef       	ldi	r24, 0xFF	; 255
 5d6:	0e 94 95 01 	call	0x32a	; 0x32a <SPI_WriteReadByte>
 5da:	c1 9a       	sbi	0x18, 1	; 24
 5dc:	68 2f       	mov	r22, r24
 5de:	60 64       	ori	r22, 0x40	; 64
 5e0:	87 e0       	ldi	r24, 0x07	; 7
 5e2:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 5e6:	c3 9a       	sbi	0x18, 3	; 24
 5e8:	23 c0       	rjmp	.+70     	; 0x630 <nRF_RX_EVENT+0xa6>
 5ea:	c1 98       	cbi	0x18, 1	; 24
 5ec:	81 e6       	ldi	r24, 0x61	; 97
 5ee:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 5f2:	c7 ec       	ldi	r28, 0xC7	; 199
 5f4:	d0 e0       	ldi	r29, 0x00	; 0
 5f6:	ef 2c       	mov	r14, r15
 5f8:	e0 0e       	add	r14, r16
 5fa:	ec 16       	cp	r14, r28
 5fc:	29 f0       	breq	.+10     	; 0x608 <nRF_RX_EVENT+0x7e>
 5fe:	8f ef       	ldi	r24, 0xFF	; 255
 600:	0e 94 95 01 	call	0x32a	; 0x32a <SPI_WriteReadByte>
 604:	89 93       	st	Y+, r24
 606:	f9 cf       	rjmp	.-14     	; 0x5fa <nRF_RX_EVENT+0x70>
 608:	c1 9a       	sbi	0x18, 1	; 24
 60a:	87 e1       	ldi	r24, 0x17	; 23
 60c:	0e 94 0f 02 	call	0x41e	; 0x41e <nRF_Read_One_Byte_From_Register>
 610:	c8 2f       	mov	r28, r24
 612:	ff 20       	and	r15, r15
 614:	51 f0       	breq	.+20     	; 0x62a <nRF_RX_EVENT+0xa0>
 616:	e0 91 90 00 	lds	r30, 0x0090
 61a:	f0 91 91 00 	lds	r31, 0x0091
 61e:	30 97       	sbiw	r30, 0x00	; 0
 620:	21 f0       	breq	.+8      	; 0x62a <nRF_RX_EVENT+0xa0>
 622:	6f 2d       	mov	r22, r15
 624:	87 ec       	ldi	r24, 0xC7	; 199
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	09 95       	icall
 62a:	c0 ff       	sbrs	r28, 0
 62c:	c6 cf       	rjmp	.-116    	; 0x5ba <nRF_RX_EVENT+0x30>
 62e:	d1 cf       	rjmp	.-94     	; 0x5d2 <nRF_RX_EVENT+0x48>
 630:	df 91       	pop	r29
 632:	cf 91       	pop	r28
 634:	1f 91       	pop	r17
 636:	0f 91       	pop	r16
 638:	ff 90       	pop	r15
 63a:	ef 90       	pop	r14
 63c:	08 95       	ret

0000063e <nRF_Set_Channel>:
 63e:	68 2f       	mov	r22, r24
 640:	6f 77       	andi	r22, 0x7F	; 127
 642:	85 e0       	ldi	r24, 0x05	; 5
 644:	0c 94 18 02 	jmp	0x430	; 0x430 <nRF_Config_Register>

00000648 <nRF_Clear_TX>:
 648:	c1 98       	cbi	0x18, 1	; 24
 64a:	81 ee       	ldi	r24, 0xE1	; 225
 64c:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 650:	c1 9a       	sbi	0x18, 1	; 24
 652:	08 95       	ret

00000654 <nRF_Clear_RX>:
 654:	c1 98       	cbi	0x18, 1	; 24
 656:	82 ee       	ldi	r24, 0xE2	; 226
 658:	0e 94 9a 01 	call	0x334	; 0x334 <SPI_WriteByte>
 65c:	c1 9a       	sbi	0x18, 1	; 24
 65e:	08 95       	ret

00000660 <nRF_Set_Active_DataPipe_And_ACK>:
 660:	0f 93       	push	r16
 662:	1f 93       	push	r17
 664:	cf 93       	push	r28
 666:	df 93       	push	r29
 668:	1f 92       	push	r1
 66a:	cd b7       	in	r28, 0x3d	; 61
 66c:	de b7       	in	r29, 0x3e	; 62
 66e:	18 2f       	mov	r17, r24
 670:	04 2f       	mov	r16, r20
 672:	82 e0       	ldi	r24, 0x02	; 2
 674:	69 83       	std	Y+1, r22	; 0x01
 676:	0e 94 0f 02 	call	0x41e	; 0x41e <nRF_Read_One_Byte_From_Register>
 67a:	98 2f       	mov	r25, r24
 67c:	69 81       	ldd	r22, Y+1	; 0x01
 67e:	61 30       	cpi	r22, 0x01	; 1
 680:	11 f4       	brne	.+4      	; 0x686 <nRF_Set_Active_DataPipe_And_ACK+0x26>
 682:	91 2b       	or	r25, r17
 684:	05 c0       	rjmp	.+10     	; 0x690 <nRF_Set_Active_DataPipe_And_ACK+0x30>
 686:	62 30       	cpi	r22, 0x02	; 2
 688:	19 f4       	brne	.+6      	; 0x690 <nRF_Set_Active_DataPipe_And_ACK+0x30>
 68a:	81 2f       	mov	r24, r17
 68c:	80 95       	com	r24
 68e:	98 23       	and	r25, r24
 690:	69 2f       	mov	r22, r25
 692:	82 e0       	ldi	r24, 0x02	; 2
 694:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 698:	81 e0       	ldi	r24, 0x01	; 1
 69a:	0e 94 0f 02 	call	0x41e	; 0x41e <nRF_Read_One_Byte_From_Register>
 69e:	68 2f       	mov	r22, r24
 6a0:	01 30       	cpi	r16, 0x01	; 1
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <nRF_Set_Active_DataPipe_And_ACK+0x48>
 6a4:	61 2b       	or	r22, r17
 6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <nRF_Set_Active_DataPipe_And_ACK+0x50>
 6a8:	02 30       	cpi	r16, 0x02	; 2
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <nRF_Set_Active_DataPipe_And_ACK+0x50>
 6ac:	10 95       	com	r17
 6ae:	61 23       	and	r22, r17
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	0f 90       	pop	r0
 6b4:	df 91       	pop	r29
 6b6:	cf 91       	pop	r28
 6b8:	1f 91       	pop	r17
 6ba:	0f 91       	pop	r16
 6bc:	0c 94 18 02 	jmp	0x430	; 0x430 <nRF_Config_Register>

000006c0 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>:
 6c0:	cf 93       	push	r28
 6c2:	c6 2f       	mov	r28, r22
 6c4:	68 2f       	mov	r22, r24
 6c6:	8c e1       	ldi	r24, 0x1C	; 28
 6c8:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 6cc:	8d e1       	ldi	r24, 0x1D	; 29
 6ce:	0e 94 0f 02 	call	0x41e	; 0x41e <nRF_Read_One_Byte_From_Register>
 6d2:	c1 30       	cpi	r28, 0x01	; 1
 6d4:	11 f4       	brne	.+4      	; 0x6da <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1a>
 6d6:	84 60       	ori	r24, 0x04	; 4
 6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x20>
 6da:	c2 30       	cpi	r28, 0x02	; 2
 6dc:	09 f4       	brne	.+2      	; 0x6e0 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x20>
 6de:	8b 7f       	andi	r24, 0xFB	; 251
 6e0:	68 2f       	mov	r22, r24
 6e2:	8d e1       	ldi	r24, 0x1D	; 29
 6e4:	cf 91       	pop	r28
 6e6:	0c 94 18 02 	jmp	0x430	; 0x430 <nRF_Config_Register>

000006ea <Initialize_INTERRUPT_For_nRF>:
 6ea:	8b b7       	in	r24, 0x3b	; 59
 6ec:	80 62       	ori	r24, 0x20	; 32
 6ee:	8b bf       	out	0x3b, r24	; 59
 6f0:	84 b7       	in	r24, 0x34	; 52
 6f2:	84 bf       	out	0x34, r24	; 52
 6f4:	08 95       	ret

000006f6 <nRF_init>:
 6f6:	0e 94 83 01 	call	0x306	; 0x306 <init_SPI>
 6fa:	0e 94 75 03 	call	0x6ea	; 0x6ea <Initialize_INTERRUPT_For_nRF>
 6fe:	8a e5       	ldi	r24, 0x5A	; 90
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 46 02 	call	0x48c	; 0x48c <nRF_SET_Transmitter_Adres>
 706:	64 e5       	ldi	r22, 0x54	; 84
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	8a e0       	ldi	r24, 0x0A	; 10
 70c:	0e 94 66 02 	call	0x4cc	; 0x4cc <nRF_SET_Reciver_Addres>
 710:	60 e0       	ldi	r22, 0x00	; 0
 712:	80 e0       	ldi	r24, 0x00	; 0
 714:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 718:	0e 94 2a 03 	call	0x654	; 0x654 <nRF_Clear_RX>
 71c:	0e 94 24 03 	call	0x648	; 0x648 <nRF_Clear_TX>
 720:	61 e0       	ldi	r22, 0x01	; 1
 722:	81 e0       	ldi	r24, 0x01	; 1
 724:	0e 94 93 02 	call	0x526	; 0x526 <nRF_Set_State_And_Width_Of_CRC>
 728:	8a e0       	ldi	r24, 0x0A	; 10
 72a:	0e 94 1f 03 	call	0x63e	; 0x63e <nRF_Set_Channel>
 72e:	41 e0       	ldi	r20, 0x01	; 1
 730:	61 e0       	ldi	r22, 0x01	; 1
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	0e 94 30 03 	call	0x660	; 0x660 <nRF_Set_Active_DataPipe_And_ACK>
 738:	6f ef       	ldi	r22, 0xFF	; 255
 73a:	84 e0       	ldi	r24, 0x04	; 4
 73c:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 740:	66 e0       	ldi	r22, 0x06	; 6
 742:	86 e0       	ldi	r24, 0x06	; 6
 744:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 748:	61 e0       	ldi	r22, 0x01	; 1
 74a:	81 e0       	ldi	r24, 0x01	; 1
 74c:	0e 94 60 03 	call	0x6c0	; 0x6c0 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>
 750:	81 e0       	ldi	r24, 0x01	; 1
 752:	80 93 eb 00 	sts	0x00EB, r24
 756:	10 92 e8 00 	sts	0x00E8, r1
 75a:	60 e7       	ldi	r22, 0x70	; 112
 75c:	87 e0       	ldi	r24, 0x07	; 7
 75e:	0c 94 18 02 	jmp	0x430	; 0x430 <nRF_Config_Register>

00000762 <__vector_3>:
 762:	1f 92       	push	r1
 764:	0f 92       	push	r0
 766:	0f b6       	in	r0, 0x3f	; 63
 768:	0f 92       	push	r0
 76a:	11 24       	eor	r1, r1
 76c:	2f 93       	push	r18
 76e:	3f 93       	push	r19
 770:	4f 93       	push	r20
 772:	5f 93       	push	r21
 774:	6f 93       	push	r22
 776:	7f 93       	push	r23
 778:	8f 93       	push	r24
 77a:	9f 93       	push	r25
 77c:	af 93       	push	r26
 77e:	bf 93       	push	r27
 780:	cf 93       	push	r28
 782:	ef 93       	push	r30
 784:	ff 93       	push	r31
 786:	c1 98       	cbi	0x18, 1	; 24
 788:	8f ef       	ldi	r24, 0xFF	; 255
 78a:	0e 94 95 01 	call	0x32a	; 0x32a <SPI_WriteReadByte>
 78e:	c8 2f       	mov	r28, r24
 790:	c1 9a       	sbi	0x18, 1	; 24
 792:	86 ff       	sbrs	r24, 6
 794:	03 c0       	rjmp	.+6      	; 0x79c <__vector_3+0x3a>
 796:	81 e0       	ldi	r24, 0x01	; 1
 798:	80 93 eb 00 	sts	0x00EB, r24
 79c:	c5 ff       	sbrs	r28, 5
 79e:	0b c0       	rjmp	.+22     	; 0x7b6 <__vector_3+0x54>
 7a0:	c0 62       	ori	r28, 0x20	; 32
 7a2:	6c 2f       	mov	r22, r28
 7a4:	87 e0       	ldi	r24, 0x07	; 7
 7a6:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 7aa:	10 92 e8 00 	sts	0x00E8, r1
 7ae:	81 e0       	ldi	r24, 0x01	; 1
 7b0:	80 93 92 00 	sts	0x0092, r24
 7b4:	c3 98       	cbi	0x18, 3	; 24
 7b6:	c4 ff       	sbrs	r28, 4
 7b8:	0d c0       	rjmp	.+26     	; 0x7d4 <__vector_3+0x72>
 7ba:	6c 2f       	mov	r22, r28
 7bc:	60 63       	ori	r22, 0x30	; 48
 7be:	87 e0       	ldi	r24, 0x07	; 7
 7c0:	0e 94 18 02 	call	0x430	; 0x430 <nRF_Config_Register>
 7c4:	10 92 e8 00 	sts	0x00E8, r1
 7c8:	81 e0       	ldi	r24, 0x01	; 1
 7ca:	80 93 92 00 	sts	0x0092, r24
 7ce:	0e 94 24 03 	call	0x648	; 0x648 <nRF_Clear_TX>
 7d2:	c3 98       	cbi	0x18, 3	; 24
 7d4:	ff 91       	pop	r31
 7d6:	ef 91       	pop	r30
 7d8:	cf 91       	pop	r28
 7da:	bf 91       	pop	r27
 7dc:	af 91       	pop	r26
 7de:	9f 91       	pop	r25
 7e0:	8f 91       	pop	r24
 7e2:	7f 91       	pop	r23
 7e4:	6f 91       	pop	r22
 7e6:	5f 91       	pop	r21
 7e8:	4f 91       	pop	r20
 7ea:	3f 91       	pop	r19
 7ec:	2f 91       	pop	r18
 7ee:	0f 90       	pop	r0
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	0f 90       	pop	r0
 7f4:	1f 90       	pop	r1
 7f6:	18 95       	reti

000007f8 <__itoa_ncheck>:
 7f8:	bb 27       	eor	r27, r27
 7fa:	4a 30       	cpi	r20, 0x0A	; 10
 7fc:	31 f4       	brne	.+12     	; 0x80a <__itoa_ncheck+0x12>
 7fe:	99 23       	and	r25, r25
 800:	22 f4       	brpl	.+8      	; 0x80a <__itoa_ncheck+0x12>
 802:	bd e2       	ldi	r27, 0x2D	; 45
 804:	90 95       	com	r25
 806:	81 95       	neg	r24
 808:	9f 4f       	sbci	r25, 0xFF	; 255
 80a:	0c 94 08 04 	jmp	0x810	; 0x810 <__utoa_common>

0000080e <__utoa_ncheck>:
 80e:	bb 27       	eor	r27, r27

00000810 <__utoa_common>:
 810:	fb 01       	movw	r30, r22
 812:	55 27       	eor	r21, r21
 814:	aa 27       	eor	r26, r26
 816:	88 0f       	add	r24, r24
 818:	99 1f       	adc	r25, r25
 81a:	aa 1f       	adc	r26, r26
 81c:	a4 17       	cp	r26, r20
 81e:	10 f0       	brcs	.+4      	; 0x824 <__utoa_common+0x14>
 820:	a4 1b       	sub	r26, r20
 822:	83 95       	inc	r24
 824:	50 51       	subi	r21, 0x10	; 16
 826:	b9 f7       	brne	.-18     	; 0x816 <__utoa_common+0x6>
 828:	a0 5d       	subi	r26, 0xD0	; 208
 82a:	aa 33       	cpi	r26, 0x3A	; 58
 82c:	08 f0       	brcs	.+2      	; 0x830 <__utoa_common+0x20>
 82e:	a9 5d       	subi	r26, 0xD9	; 217
 830:	a1 93       	st	Z+, r26
 832:	00 97       	sbiw	r24, 0x00	; 0
 834:	79 f7       	brne	.-34     	; 0x814 <__utoa_common+0x4>
 836:	b1 11       	cpse	r27, r1
 838:	b1 93       	st	Z+, r27
 83a:	11 92       	st	Z+, r1
 83c:	cb 01       	movw	r24, r22
 83e:	0c 94 21 04 	jmp	0x842	; 0x842 <strrev>

00000842 <strrev>:
 842:	dc 01       	movw	r26, r24
 844:	fc 01       	movw	r30, r24
 846:	67 2f       	mov	r22, r23
 848:	71 91       	ld	r23, Z+
 84a:	77 23       	and	r23, r23
 84c:	e1 f7       	brne	.-8      	; 0x846 <strrev+0x4>
 84e:	32 97       	sbiw	r30, 0x02	; 2
 850:	04 c0       	rjmp	.+8      	; 0x85a <strrev+0x18>
 852:	7c 91       	ld	r23, X
 854:	6d 93       	st	X+, r22
 856:	70 83       	st	Z, r23
 858:	62 91       	ld	r22, -Z
 85a:	ae 17       	cp	r26, r30
 85c:	bf 07       	cpc	r27, r31
 85e:	c8 f3       	brcs	.-14     	; 0x852 <strrev+0x10>
 860:	08 95       	ret

00000862 <_exit>:
 862:	f8 94       	cli

00000864 <__stop_program>:
 864:	ff cf       	rjmp	.-2      	; 0x864 <__stop_program>
