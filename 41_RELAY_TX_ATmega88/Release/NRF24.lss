
NRF24.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000766  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000766  000007fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000006f  00800074  00800074  0000080e  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000810  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  00000edc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000f73  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
   4:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
   8:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
   c:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__vector_3>
  10:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  14:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  18:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  1c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  20:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  24:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__vector_10>
  2c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  30:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  34:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__vector_13>
  38:	0c 94 8a 03 	jmp	0x714	; 0x714 <__vector_14>
  3c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  40:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  44:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  48:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  4c:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>
  50:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__bad_interrupt>

00000054 <__c.1870>:
  54:	41 54 4e 45 4c 00                                   ATNEL.

0000005a <__c.1872>:
  5a:	41 54 4e 45 4c 00                                   ATNEL.

00000060 <__ctors_end>:
  60:	11 24       	eor	r1, r1
  62:	1f be       	out	0x3f, r1	; 63
  64:	cf e5       	ldi	r28, 0x5F	; 95
  66:	d8 e0       	ldi	r29, 0x08	; 8
  68:	de bf       	out	0x3e, r29	; 62
  6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
  6c:	10 e0       	ldi	r17, 0x00	; 0
  6e:	a0 e6       	ldi	r26, 0x60	; 96
  70:	b0 e0       	ldi	r27, 0x00	; 0
  72:	e6 e6       	ldi	r30, 0x66	; 102
  74:	f7 e0       	ldi	r31, 0x07	; 7
  76:	02 c0       	rjmp	.+4      	; 0x7c <__do_copy_data+0x10>
  78:	05 90       	lpm	r0, Z+
  7a:	0d 92       	st	X+, r0
  7c:	a4 37       	cpi	r26, 0x74	; 116
  7e:	b1 07       	cpc	r27, r17
  80:	d9 f7       	brne	.-10     	; 0x78 <__do_copy_data+0xc>

00000082 <__do_clear_bss>:
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	a4 e7       	ldi	r26, 0x74	; 116
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	01 c0       	rjmp	.+2      	; 0x8c <.do_clear_bss_start>

0000008a <.do_clear_bss_loop>:
  8a:	1d 92       	st	X+, r1

0000008c <.do_clear_bss_start>:
  8c:	a3 3e       	cpi	r26, 0xE3	; 227
  8e:	b2 07       	cpc	r27, r18
  90:	e1 f7       	brne	.-8      	; 0x8a <.do_clear_bss_loop>
  92:	0e 94 91 00 	call	0x122	; 0x122 <main>
  96:	0c 94 b1 03 	jmp	0x762	; 0x762 <_exit>

0000009a <__bad_interrupt>:
  9a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009e <init_SPI>:
  9e:	ba 98       	cbi	0x17, 2	; 23
  a0:	b8 9a       	sbi	0x17, 0	; 23
  a2:	b9 9a       	sbi	0x17, 1	; 23
  a4:	bc 9a       	sbi	0x17, 4	; 23
  a6:	bd 9a       	sbi	0x17, 5	; 23
  a8:	be 98       	cbi	0x17, 6	; 23
  aa:	bf 9a       	sbi	0x17, 7	; 23
  ac:	c2 9a       	sbi	0x18, 2	; 24
  ae:	c0 98       	cbi	0x18, 0	; 24
  b0:	c1 9a       	sbi	0x18, 1	; 24
  b2:	c4 9a       	sbi	0x18, 4	; 24
  b4:	c5 98       	cbi	0x18, 5	; 24
  b6:	c6 98       	cbi	0x18, 6	; 24
  b8:	c7 98       	cbi	0x18, 7	; 24
  ba:	8d b1       	in	r24, 0x0d	; 13
  bc:	80 65       	ori	r24, 0x50	; 80
  be:	8d b9       	out	0x0d, r24	; 13
  c0:	70 9a       	sbi	0x0e, 0	; 14
  c2:	08 95       	ret

000000c4 <SPI_WriteReadByte>:
  c4:	8f b9       	out	0x0f, r24	; 15
  c6:	77 9b       	sbis	0x0e, 7	; 14
  c8:	fe cf       	rjmp	.-4      	; 0xc6 <SPI_WriteReadByte+0x2>
  ca:	8f b1       	in	r24, 0x0f	; 15
  cc:	08 95       	ret

000000ce <SPI_WriteByte>:
  ce:	8f b9       	out	0x0f, r24	; 15
  d0:	77 9b       	sbis	0x0e, 7	; 14
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <SPI_WriteByte+0x2>
  d4:	08 95       	ret

000000d6 <SPI_WriteReadDataBuffer>:
  d6:	ef 92       	push	r14
  d8:	ff 92       	push	r15
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	00 d0       	rcall	.+0      	; 0xe4 <SPI_WriteReadDataBuffer+0xe>
  e4:	cd b7       	in	r28, 0x3d	; 61
  e6:	de b7       	in	r29, 0x3e	; 62
  e8:	8c 01       	movw	r16, r24
  ea:	7b 01       	movw	r14, r22
  ec:	0c c0       	rjmp	.+24     	; 0x106 <SPI_WriteReadDataBuffer+0x30>
  ee:	f7 01       	movw	r30, r14
  f0:	81 91       	ld	r24, Z+
  f2:	7f 01       	movw	r14, r30
  f4:	49 83       	std	Y+1, r20	; 0x01
  f6:	6a 83       	std	Y+2, r22	; 0x02
  f8:	0e 94 62 00 	call	0xc4	; 0xc4 <SPI_WriteReadByte>
  fc:	f8 01       	movw	r30, r16
  fe:	81 93       	st	Z+, r24
 100:	8f 01       	movw	r16, r30
 102:	6a 81       	ldd	r22, Y+2	; 0x02
 104:	49 81       	ldd	r20, Y+1	; 0x01
 106:	8e 2d       	mov	r24, r14
 108:	86 1b       	sub	r24, r22
 10a:	84 17       	cp	r24, r20
 10c:	80 f3       	brcs	.-32     	; 0xee <SPI_WriteReadDataBuffer+0x18>
 10e:	0f 90       	pop	r0
 110:	0f 90       	pop	r0
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	1f 91       	pop	r17
 118:	0f 91       	pop	r16
 11a:	ff 90       	pop	r15
 11c:	ef 90       	pop	r14
 11e:	08 95       	ret

00000120 <moja_funkcja>:
 120:	08 95       	ret

00000122 <main>:
 122:	d0 9a       	sbi	0x1a, 0	; 26
 124:	d8 9a       	sbi	0x1b, 0	; 27
 126:	0e 94 bb 02 	call	0x576	; 0x576 <nRF_init>
 12a:	80 e9       	ldi	r24, 0x90	; 144
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <register_nRF_RX_Event_Callback>
 132:	83 b7       	in	r24, 0x33	; 51
 134:	8b 60       	ori	r24, 0x0B	; 11
 136:	83 bf       	out	0x33, r24	; 51
 138:	89 b7       	in	r24, 0x39	; 57
 13a:	82 60       	ori	r24, 0x02	; 2
 13c:	89 bf       	out	0x39, r24	; 57
 13e:	8c e7       	ldi	r24, 0x7C	; 124
 140:	8c bf       	out	0x3c, r24	; 60
 142:	78 94       	sei
 144:	0e 94 ab 01 	call	0x356	; 0x356 <nRF_RX_Power_Up>
 148:	00 e0       	ldi	r16, 0x00	; 0
 14a:	10 e0       	ldi	r17, 0x00	; 0
 14c:	ff 24       	eor	r15, r15
 14e:	f3 94       	inc	r15
 150:	c4 e6       	ldi	r28, 0x64	; 100
 152:	d0 e0       	ldi	r29, 0x00	; 0
 154:	80 91 78 00 	lds	r24, 0x0078
 158:	90 91 79 00 	lds	r25, 0x0079
 15c:	89 2b       	or	r24, r25
 15e:	51 f4       	brne	.+20     	; 0x174 <main+0x52>
 160:	d0 93 79 00 	sts	0x0079, r29
 164:	c0 93 78 00 	sts	0x0078, r28
 168:	8b b3       	in	r24, 0x1b	; 27
 16a:	8f 25       	eor	r24, r15
 16c:	8b bb       	out	0x1b, r24	; 27
 16e:	11 11       	cpse	r17, r1
 170:	0b c0       	rjmp	.+22     	; 0x188 <main+0x66>
 172:	04 c0       	rjmp	.+8      	; 0x17c <main+0x5a>
 174:	11 30       	cpi	r17, 0x01	; 1
 176:	89 f4       	brne	.+34     	; 0x19a <main+0x78>
 178:	01 11       	cpse	r16, r1
 17a:	13 c0       	rjmp	.+38     	; 0x1a2 <main+0x80>
 17c:	80 e6       	ldi	r24, 0x60	; 96
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 55 02 	call	0x4aa	; 0x4aa <nRF_SendDataToAir>
 184:	01 e0       	ldi	r16, 0x01	; 1
 186:	0d c0       	rjmp	.+26     	; 0x1a2 <main+0x80>
 188:	89 e6       	ldi	r24, 0x69	; 105
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 55 02 	call	0x4aa	; 0x4aa <nRF_SendDataToAir>
 190:	10 e0       	ldi	r17, 0x00	; 0
 192:	01 e0       	ldi	r16, 0x01	; 1
 194:	0e 94 bc 01 	call	0x378	; 0x378 <nRF_RX_EVENT>
 198:	dd cf       	rjmp	.-70     	; 0x154 <main+0x32>
 19a:	00 23       	and	r16, r16
 19c:	a9 f3       	breq	.-22     	; 0x188 <main+0x66>
 19e:	10 e0       	ldi	r17, 0x00	; 0
 1a0:	f9 cf       	rjmp	.-14     	; 0x194 <main+0x72>
 1a2:	11 e0       	ldi	r17, 0x01	; 1
 1a4:	f7 cf       	rjmp	.-18     	; 0x194 <main+0x72>

000001a6 <__vector_10>:
 1a6:	1f 92       	push	r1
 1a8:	0f 92       	push	r0
 1aa:	0f b6       	in	r0, 0x3f	; 63
 1ac:	0f 92       	push	r0
 1ae:	11 24       	eor	r1, r1
 1b0:	8f 93       	push	r24
 1b2:	9f 93       	push	r25
 1b4:	80 91 78 00 	lds	r24, 0x0078
 1b8:	90 91 79 00 	lds	r25, 0x0079
 1bc:	89 2b       	or	r24, r25
 1be:	49 f0       	breq	.+18     	; 0x1d2 <__vector_10+0x2c>
 1c0:	80 91 78 00 	lds	r24, 0x0078
 1c4:	90 91 79 00 	lds	r25, 0x0079
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	90 93 79 00 	sts	0x0079, r25
 1ce:	80 93 78 00 	sts	0x0078, r24
 1d2:	9f 91       	pop	r25
 1d4:	8f 91       	pop	r24
 1d6:	0f 90       	pop	r0
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	0f 90       	pop	r0
 1dc:	1f 90       	pop	r1
 1de:	18 95       	reti

000001e0 <register_nRF_RX_Event_Callback>:
 1e0:	90 93 76 00 	sts	0x0076, r25
 1e4:	80 93 75 00 	sts	0x0075, r24
 1e8:	08 95       	ret

000001ea <nRF_Read_One_Byte_From_Register>:
 1ea:	c1 98       	cbi	0x18, 1	; 24
 1ec:	8f 71       	andi	r24, 0x1F	; 31
 1ee:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 1f2:	8f ef       	ldi	r24, 0xFF	; 255
 1f4:	0e 94 62 00 	call	0xc4	; 0xc4 <SPI_WriteReadByte>
 1f8:	c1 9a       	sbi	0x18, 1	; 24
 1fa:	08 95       	ret

000001fc <nRF_Config_Register>:
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	1f 92       	push	r1
 202:	cd b7       	in	r28, 0x3d	; 61
 204:	de b7       	in	r29, 0x3e	; 62
 206:	c1 98       	cbi	0x18, 1	; 24
 208:	8f 71       	andi	r24, 0x1F	; 31
 20a:	80 62       	ori	r24, 0x20	; 32
 20c:	69 83       	std	Y+1, r22	; 0x01
 20e:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 212:	69 81       	ldd	r22, Y+1	; 0x01
 214:	86 2f       	mov	r24, r22
 216:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 21a:	c1 9a       	sbi	0x18, 1	; 24
 21c:	0f 90       	pop	r0
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <nRF_Write_Register>:
 224:	0f 93       	push	r16
 226:	1f 93       	push	r17
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	1f 92       	push	r1
 22e:	cd b7       	in	r28, 0x3d	; 61
 230:	de b7       	in	r29, 0x3e	; 62
 232:	8b 01       	movw	r16, r22
 234:	c1 98       	cbi	0x18, 1	; 24
 236:	8f 71       	andi	r24, 0x1F	; 31
 238:	80 62       	ori	r24, 0x20	; 32
 23a:	49 83       	std	Y+1, r20	; 0x01
 23c:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 240:	49 81       	ldd	r20, Y+1	; 0x01
 242:	b8 01       	movw	r22, r16
 244:	c8 01       	movw	r24, r16
 246:	0e 94 6b 00 	call	0xd6	; 0xd6 <SPI_WriteReadDataBuffer>
 24a:	c1 9a       	sbi	0x18, 1	; 24
 24c:	0f 90       	pop	r0
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	1f 91       	pop	r17
 254:	0f 91       	pop	r16
 256:	08 95       	ret

00000258 <nRF_SET_Transmitter_Adres>:
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	00 d0       	rcall	.+0      	; 0x25e <nRF_SET_Transmitter_Adres+0x6>
 25e:	00 d0       	rcall	.+0      	; 0x260 <nRF_SET_Transmitter_Adres+0x8>
 260:	1f 92       	push	r1
 262:	cd b7       	in	r28, 0x3d	; 61
 264:	de b7       	in	r29, 0x3e	; 62
 266:	de 01       	movw	r26, r28
 268:	11 96       	adiw	r26, 0x01	; 1
 26a:	9e 01       	movw	r18, r28
 26c:	2a 5f       	subi	r18, 0xFA	; 250
 26e:	3f 4f       	sbci	r19, 0xFF	; 255
 270:	fc 01       	movw	r30, r24
 272:	01 96       	adiw	r24, 0x01	; 1
 274:	e4 91       	lpm	r30, Z
 276:	ed 93       	st	X+, r30
 278:	a2 17       	cp	r26, r18
 27a:	b3 07       	cpc	r27, r19
 27c:	c9 f7       	brne	.-14     	; 0x270 <nRF_SET_Transmitter_Adres+0x18>
 27e:	45 e0       	ldi	r20, 0x05	; 5
 280:	be 01       	movw	r22, r28
 282:	6f 5f       	subi	r22, 0xFF	; 255
 284:	7f 4f       	sbci	r23, 0xFF	; 255
 286:	80 e1       	ldi	r24, 0x10	; 16
 288:	0e 94 12 01 	call	0x224	; 0x224 <nRF_Write_Register>
 28c:	0f 90       	pop	r0
 28e:	0f 90       	pop	r0
 290:	0f 90       	pop	r0
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	08 95       	ret

0000029c <nRF_SET_Reciver_Addres>:
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	00 d0       	rcall	.+0      	; 0x2a2 <nRF_SET_Reciver_Addres+0x6>
 2a2:	00 d0       	rcall	.+0      	; 0x2a4 <nRF_SET_Reciver_Addres+0x8>
 2a4:	1f 92       	push	r1
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62
 2aa:	80 31       	cpi	r24, 0x10	; 16
 2ac:	28 f4       	brcc	.+10     	; 0x2b8 <nRF_SET_Reciver_Addres+0x1c>
 2ae:	8a 30       	cpi	r24, 0x0A	; 10
 2b0:	18 f0       	brcs	.+6      	; 0x2b8 <nRF_SET_Reciver_Addres+0x1c>
 2b2:	8c 30       	cpi	r24, 0x0C	; 12
 2b4:	b0 f4       	brcc	.+44     	; 0x2e2 <nRF_SET_Reciver_Addres+0x46>
 2b6:	01 c0       	rjmp	.+2      	; 0x2ba <nRF_SET_Reciver_Addres+0x1e>
 2b8:	8a e0       	ldi	r24, 0x0A	; 10
 2ba:	de 01       	movw	r26, r28
 2bc:	11 96       	adiw	r26, 0x01	; 1
 2be:	9e 01       	movw	r18, r28
 2c0:	2a 5f       	subi	r18, 0xFA	; 250
 2c2:	3f 4f       	sbci	r19, 0xFF	; 255
 2c4:	fb 01       	movw	r30, r22
 2c6:	6f 5f       	subi	r22, 0xFF	; 255
 2c8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ca:	e4 91       	lpm	r30, Z
 2cc:	ed 93       	st	X+, r30
 2ce:	a2 17       	cp	r26, r18
 2d0:	b3 07       	cpc	r27, r19
 2d2:	c1 f7       	brne	.-16     	; 0x2c4 <nRF_SET_Reciver_Addres+0x28>
 2d4:	45 e0       	ldi	r20, 0x05	; 5
 2d6:	be 01       	movw	r22, r28
 2d8:	6f 5f       	subi	r22, 0xFF	; 255
 2da:	7f 4f       	sbci	r23, 0xFF	; 255
 2dc:	0e 94 12 01 	call	0x224	; 0x224 <nRF_Write_Register>
 2e0:	05 c0       	rjmp	.+10     	; 0x2ec <nRF_SET_Reciver_Addres+0x50>
 2e2:	fb 01       	movw	r30, r22
 2e4:	64 91       	lpm	r22, Z
 2e6:	69 83       	std	Y+1, r22	; 0x01
 2e8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 2ec:	0f 90       	pop	r0
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	df 91       	pop	r29
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

000002fc <nRF_Set_State_And_Width_Of_CRC>:
 2fc:	1f 93       	push	r17
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	1f 92       	push	r1
 304:	cd b7       	in	r28, 0x3d	; 61
 306:	de b7       	in	r29, 0x3e	; 62
 308:	18 2f       	mov	r17, r24
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	69 83       	std	Y+1, r22	; 0x01
 30e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 312:	69 81       	ldd	r22, Y+1	; 0x01
 314:	11 30       	cpi	r17, 0x01	; 1
 316:	09 f4       	brne	.+2      	; 0x31a <nRF_Set_State_And_Width_Of_CRC+0x1e>
 318:	04 c0       	rjmp	.+8      	; 0x322 <nRF_Set_State_And_Width_Of_CRC+0x26>
 31a:	12 30       	cpi	r17, 0x02	; 2
 31c:	11 f4       	brne	.+4      	; 0x322 <nRF_Set_State_And_Width_Of_CRC+0x26>
 31e:	84 60       	ori	r24, 0x04	; 4
 320:	01 c0       	rjmp	.+2      	; 0x324 <nRF_Set_State_And_Width_Of_CRC+0x28>
 322:	8b 7f       	andi	r24, 0xFB	; 251
 324:	61 30       	cpi	r22, 0x01	; 1
 326:	11 f4       	brne	.+4      	; 0x32c <nRF_Set_State_And_Width_Of_CRC+0x30>
 328:	88 60       	ori	r24, 0x08	; 8
 32a:	03 c0       	rjmp	.+6      	; 0x332 <nRF_Set_State_And_Width_Of_CRC+0x36>
 32c:	62 30       	cpi	r22, 0x02	; 2
 32e:	09 f4       	brne	.+2      	; 0x332 <nRF_Set_State_And_Width_Of_CRC+0x36>
 330:	87 7f       	andi	r24, 0xF7	; 247
 332:	68 2f       	mov	r22, r24
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	0f 90       	pop	r0
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	1f 91       	pop	r17
 33e:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <nRF_Config_Register>

00000342 <nRF_TX_Power_Up>:
 342:	c0 98       	cbi	0x18, 0	; 24
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 34a:	68 2f       	mov	r22, r24
 34c:	6e 7f       	andi	r22, 0xFE	; 254
 34e:	62 60       	ori	r22, 0x02	; 2
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <nRF_Config_Register>

00000356 <nRF_RX_Power_Up>:
 356:	c0 98       	cbi	0x18, 0	; 24
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 35e:	68 2f       	mov	r22, r24
 360:	63 60       	ori	r22, 0x03	; 3
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 368:	c0 9a       	sbi	0x18, 0	; 24
 36a:	87 e0       	ldi	r24, 0x07	; 7
 36c:	92 e0       	ldi	r25, 0x02	; 2
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	f1 f7       	brne	.-4      	; 0x36e <nRF_RX_Power_Up+0x18>
 372:	00 c0       	rjmp	.+0      	; 0x374 <nRF_RX_Power_Up+0x1e>
 374:	00 00       	nop
 376:	08 95       	ret

00000378 <nRF_RX_EVENT>:
 378:	ff 92       	push	r15
 37a:	0f 93       	push	r16
 37c:	1f 93       	push	r17
 37e:	cf 93       	push	r28
 380:	df 93       	push	r29
 382:	80 91 74 00 	lds	r24, 0x0074
 386:	81 30       	cpi	r24, 0x01	; 1
 388:	21 f4       	brne	.+8      	; 0x392 <nRF_RX_EVENT+0x1a>
 38a:	0e 94 ab 01 	call	0x356	; 0x356 <nRF_RX_Power_Up>
 38e:	10 92 74 00 	sts	0x0074, r1
 392:	80 91 9e 00 	lds	r24, 0x009E
 396:	88 23       	and	r24, r24
 398:	09 f4       	brne	.+2      	; 0x39c <nRF_RX_EVENT+0x24>
 39a:	40 c0       	rjmp	.+128    	; 0x41c <nRF_RX_EVENT+0xa4>
 39c:	c0 98       	cbi	0x18, 0	; 24
 39e:	10 92 9e 00 	sts	0x009E, r1
 3a2:	8a e7       	ldi	r24, 0x7A	; 122
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	08 2f       	mov	r16, r24
 3a8:	c1 98       	cbi	0x18, 1	; 24
 3aa:	80 e6       	ldi	r24, 0x60	; 96
 3ac:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 3b0:	8f ef       	ldi	r24, 0xFF	; 255
 3b2:	0e 94 62 00 	call	0xc4	; 0xc4 <SPI_WriteReadByte>
 3b6:	18 2f       	mov	r17, r24
 3b8:	c1 9a       	sbi	0x18, 1	; 24
 3ba:	81 32       	cpi	r24, 0x21	; 33
 3bc:	60 f0       	brcs	.+24     	; 0x3d6 <nRF_RX_EVENT+0x5e>
 3be:	c1 98       	cbi	0x18, 1	; 24
 3c0:	8f ef       	ldi	r24, 0xFF	; 255
 3c2:	0e 94 62 00 	call	0xc4	; 0xc4 <SPI_WriteReadByte>
 3c6:	c1 9a       	sbi	0x18, 1	; 24
 3c8:	68 2f       	mov	r22, r24
 3ca:	60 64       	ori	r22, 0x40	; 64
 3cc:	87 e0       	ldi	r24, 0x07	; 7
 3ce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 3d2:	c0 9a       	sbi	0x18, 0	; 24
 3d4:	23 c0       	rjmp	.+70     	; 0x41c <nRF_RX_EVENT+0xa4>
 3d6:	c1 98       	cbi	0x18, 1	; 24
 3d8:	81 e6       	ldi	r24, 0x61	; 97
 3da:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 3de:	ca e7       	ldi	r28, 0x7A	; 122
 3e0:	d0 e0       	ldi	r29, 0x00	; 0
 3e2:	f1 2e       	mov	r15, r17
 3e4:	f0 0e       	add	r15, r16
 3e6:	04 c0       	rjmp	.+8      	; 0x3f0 <nRF_RX_EVENT+0x78>
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	0e 94 62 00 	call	0xc4	; 0xc4 <SPI_WriteReadByte>
 3ee:	89 93       	st	Y+, r24
 3f0:	fc 12       	cpse	r15, r28
 3f2:	fa cf       	rjmp	.-12     	; 0x3e8 <nRF_RX_EVENT+0x70>
 3f4:	c1 9a       	sbi	0x18, 1	; 24
 3f6:	87 e1       	ldi	r24, 0x17	; 23
 3f8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 3fc:	c8 2f       	mov	r28, r24
 3fe:	11 23       	and	r17, r17
 400:	51 f0       	breq	.+20     	; 0x416 <nRF_RX_EVENT+0x9e>
 402:	e0 91 75 00 	lds	r30, 0x0075
 406:	f0 91 76 00 	lds	r31, 0x0076
 40a:	30 97       	sbiw	r30, 0x00	; 0
 40c:	21 f0       	breq	.+8      	; 0x416 <nRF_RX_EVENT+0x9e>
 40e:	61 2f       	mov	r22, r17
 410:	8a e7       	ldi	r24, 0x7A	; 122
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	09 95       	icall
 416:	c0 ff       	sbrs	r28, 0
 418:	c7 cf       	rjmp	.-114    	; 0x3a8 <nRF_RX_EVENT+0x30>
 41a:	d1 cf       	rjmp	.-94     	; 0x3be <nRF_RX_EVENT+0x46>
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	1f 91       	pop	r17
 422:	0f 91       	pop	r16
 424:	ff 90       	pop	r15
 426:	08 95       	ret

00000428 <nRF_Set_Channel>:
 428:	68 2f       	mov	r22, r24
 42a:	6f 77       	andi	r22, 0x7F	; 127
 42c:	85 e0       	ldi	r24, 0x05	; 5
 42e:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <nRF_Config_Register>

00000432 <nRF_Clear_TX>:
 432:	c1 98       	cbi	0x18, 1	; 24
 434:	81 ee       	ldi	r24, 0xE1	; 225
 436:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 43a:	c1 9a       	sbi	0x18, 1	; 24
 43c:	08 95       	ret

0000043e <nRF_Clear_RX>:
 43e:	c1 98       	cbi	0x18, 1	; 24
 440:	82 ee       	ldi	r24, 0xE2	; 226
 442:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 446:	c1 9a       	sbi	0x18, 1	; 24
 448:	08 95       	ret

0000044a <nRF_Set_Active_DataPipe_And_ACK>:
 44a:	0f 93       	push	r16
 44c:	1f 93       	push	r17
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	1f 92       	push	r1
 454:	cd b7       	in	r28, 0x3d	; 61
 456:	de b7       	in	r29, 0x3e	; 62
 458:	18 2f       	mov	r17, r24
 45a:	04 2f       	mov	r16, r20
 45c:	82 e0       	ldi	r24, 0x02	; 2
 45e:	69 83       	std	Y+1, r22	; 0x01
 460:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 464:	98 2f       	mov	r25, r24
 466:	69 81       	ldd	r22, Y+1	; 0x01
 468:	61 30       	cpi	r22, 0x01	; 1
 46a:	11 f4       	brne	.+4      	; 0x470 <nRF_Set_Active_DataPipe_And_ACK+0x26>
 46c:	91 2b       	or	r25, r17
 46e:	05 c0       	rjmp	.+10     	; 0x47a <nRF_Set_Active_DataPipe_And_ACK+0x30>
 470:	62 30       	cpi	r22, 0x02	; 2
 472:	19 f4       	brne	.+6      	; 0x47a <nRF_Set_Active_DataPipe_And_ACK+0x30>
 474:	81 2f       	mov	r24, r17
 476:	80 95       	com	r24
 478:	98 23       	and	r25, r24
 47a:	69 2f       	mov	r22, r25
 47c:	82 e0       	ldi	r24, 0x02	; 2
 47e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 488:	68 2f       	mov	r22, r24
 48a:	01 30       	cpi	r16, 0x01	; 1
 48c:	11 f4       	brne	.+4      	; 0x492 <nRF_Set_Active_DataPipe_And_ACK+0x48>
 48e:	61 2b       	or	r22, r17
 490:	04 c0       	rjmp	.+8      	; 0x49a <nRF_Set_Active_DataPipe_And_ACK+0x50>
 492:	02 30       	cpi	r16, 0x02	; 2
 494:	11 f4       	brne	.+4      	; 0x49a <nRF_Set_Active_DataPipe_And_ACK+0x50>
 496:	10 95       	com	r17
 498:	61 23       	and	r22, r17
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	0f 90       	pop	r0
 49e:	df 91       	pop	r29
 4a0:	cf 91       	pop	r28
 4a2:	1f 91       	pop	r17
 4a4:	0f 91       	pop	r16
 4a6:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <nRF_Config_Register>

000004aa <nRF_SendDataToAir>:
 4aa:	ef 92       	push	r14
 4ac:	ff 92       	push	r15
 4ae:	0f 93       	push	r16
 4b0:	1f 93       	push	r17
 4b2:	cf 93       	push	r28
 4b4:	df 93       	push	r29
 4b6:	1f 92       	push	r1
 4b8:	cd b7       	in	r28, 0x3d	; 61
 4ba:	de b7       	in	r29, 0x3e	; 62
 4bc:	18 2f       	mov	r17, r24
 4be:	80 91 9b 00 	lds	r24, 0x009B
 4c2:	81 30       	cpi	r24, 0x01	; 1
 4c4:	a9 f1       	breq	.+106    	; 0x530 <nRF_SendDataToAir+0x86>
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	80 93 9b 00 	sts	0x009B, r24
 4cc:	80 91 9c 00 	lds	r24, 0x009C
 4d0:	81 30       	cpi	r24, 0x01	; 1
 4d2:	19 f4       	brne	.+6      	; 0x4da <nRF_SendDataToAir+0x30>
 4d4:	a0 91 9d 00 	lds	r26, 0x009D
 4d8:	08 c0       	rjmp	.+16     	; 0x4ea <nRF_SendDataToAir+0x40>
 4da:	e1 2f       	mov	r30, r17
 4dc:	f9 2f       	mov	r31, r25
 4de:	df 01       	movw	r26, r30
 4e0:	0d 90       	ld	r0, X+
 4e2:	00 20       	and	r0, r0
 4e4:	e9 f7       	brne	.-6      	; 0x4e0 <nRF_SendDataToAir+0x36>
 4e6:	11 97       	sbiw	r26, 0x01	; 1
 4e8:	a1 1b       	sub	r26, r17
 4ea:	0a 2f       	mov	r16, r26
 4ec:	a0 32       	cpi	r26, 0x20	; 32
 4ee:	08 f0       	brcs	.+2      	; 0x4f2 <nRF_SendDataToAir+0x48>
 4f0:	0f e1       	ldi	r16, 0x1F	; 31
 4f2:	99 83       	std	Y+1, r25	; 0x01
 4f4:	0e 94 a1 01 	call	0x342	; 0x342 <nRF_TX_Power_Up>
 4f8:	e7 e5       	ldi	r30, 0x57	; 87
 4fa:	f2 e0       	ldi	r31, 0x02	; 2
 4fc:	31 97       	sbiw	r30, 0x01	; 1
 4fe:	f1 f7       	brne	.-4      	; 0x4fc <nRF_SendDataToAir+0x52>
 500:	00 c0       	rjmp	.+0      	; 0x502 <nRF_SendDataToAir+0x58>
 502:	00 00       	nop
 504:	c1 98       	cbi	0x18, 1	; 24
 506:	80 ea       	ldi	r24, 0xA0	; 160
 508:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 50c:	e1 2e       	mov	r14, r17
 50e:	99 81       	ldd	r25, Y+1	; 0x01
 510:	f9 2e       	mov	r15, r25
 512:	05 c0       	rjmp	.+10     	; 0x51e <nRF_SendDataToAir+0x74>
 514:	f7 01       	movw	r30, r14
 516:	81 91       	ld	r24, Z+
 518:	7f 01       	movw	r14, r30
 51a:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 51e:	8e 2d       	mov	r24, r14
 520:	81 1b       	sub	r24, r17
 522:	80 17       	cp	r24, r16
 524:	b8 f3       	brcs	.-18     	; 0x514 <nRF_SendDataToAir+0x6a>
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	0e 94 67 00 	call	0xce	; 0xce <SPI_WriteByte>
 52c:	c1 9a       	sbi	0x18, 1	; 24
 52e:	c0 9a       	sbi	0x18, 0	; 24
 530:	0f 90       	pop	r0
 532:	df 91       	pop	r29
 534:	cf 91       	pop	r28
 536:	1f 91       	pop	r17
 538:	0f 91       	pop	r16
 53a:	ff 90       	pop	r15
 53c:	ef 90       	pop	r14
 53e:	08 95       	ret

00000540 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>:
 540:	cf 93       	push	r28
 542:	c6 2f       	mov	r28, r22
 544:	68 2f       	mov	r22, r24
 546:	8c e1       	ldi	r24, 0x1C	; 28
 548:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 54c:	8d e1       	ldi	r24, 0x1D	; 29
 54e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <nRF_Read_One_Byte_From_Register>
 552:	c1 30       	cpi	r28, 0x01	; 1
 554:	11 f4       	brne	.+4      	; 0x55a <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1a>
 556:	84 60       	ori	r24, 0x04	; 4
 558:	03 c0       	rjmp	.+6      	; 0x560 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x20>
 55a:	c2 30       	cpi	r28, 0x02	; 2
 55c:	09 f4       	brne	.+2      	; 0x560 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x20>
 55e:	8b 7f       	andi	r24, 0xFB	; 251
 560:	68 2f       	mov	r22, r24
 562:	8d e1       	ldi	r24, 0x1D	; 29
 564:	cf 91       	pop	r28
 566:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <nRF_Config_Register>

0000056a <Initialize_INTERRUPT_For_nRF>:
 56a:	8b b7       	in	r24, 0x3b	; 59
 56c:	80 62       	ori	r24, 0x20	; 32
 56e:	8b bf       	out	0x3b, r24	; 59
 570:	84 b7       	in	r24, 0x34	; 52
 572:	84 bf       	out	0x34, r24	; 52
 574:	08 95       	ret

00000576 <nRF_init>:
 576:	0e 94 4f 00 	call	0x9e	; 0x9e <init_SPI>
 57a:	0e 94 b5 02 	call	0x56a	; 0x56a <Initialize_INTERRUPT_For_nRF>
 57e:	84 e5       	ldi	r24, 0x54	; 84
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 2c 01 	call	0x258	; 0x258 <nRF_SET_Transmitter_Adres>
 586:	6a e5       	ldi	r22, 0x5A	; 90
 588:	70 e0       	ldi	r23, 0x00	; 0
 58a:	8a e0       	ldi	r24, 0x0A	; 10
 58c:	0e 94 4e 01 	call	0x29c	; 0x29c <nRF_SET_Reciver_Addres>
 590:	60 e0       	ldi	r22, 0x00	; 0
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 598:	0e 94 1f 02 	call	0x43e	; 0x43e <nRF_Clear_RX>
 59c:	0e 94 19 02 	call	0x432	; 0x432 <nRF_Clear_TX>
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	0e 94 7e 01 	call	0x2fc	; 0x2fc <nRF_Set_State_And_Width_Of_CRC>
 5a8:	8a e0       	ldi	r24, 0x0A	; 10
 5aa:	0e 94 14 02 	call	0x428	; 0x428 <nRF_Set_Channel>
 5ae:	41 e0       	ldi	r20, 0x01	; 1
 5b0:	61 e0       	ldi	r22, 0x01	; 1
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	0e 94 25 02 	call	0x44a	; 0x44a <nRF_Set_Active_DataPipe_And_ACK>
 5b8:	6f e0       	ldi	r22, 0x0F	; 15
 5ba:	84 e0       	ldi	r24, 0x04	; 4
 5bc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 5c0:	66 e0       	ldi	r22, 0x06	; 6
 5c2:	86 e0       	ldi	r24, 0x06	; 6
 5c4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 5c8:	61 e0       	ldi	r22, 0x01	; 1
 5ca:	81 e0       	ldi	r24, 0x01	; 1
 5cc:	0e 94 a0 02 	call	0x540	; 0x540 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	80 93 9e 00 	sts	0x009E, r24
 5d6:	10 92 9b 00 	sts	0x009B, r1
 5da:	60 e7       	ldi	r22, 0x70	; 112
 5dc:	87 e0       	ldi	r24, 0x07	; 7
 5de:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <nRF_Config_Register>

000005e2 <__vector_3>:
 5e2:	1f 92       	push	r1
 5e4:	0f 92       	push	r0
 5e6:	0f b6       	in	r0, 0x3f	; 63
 5e8:	0f 92       	push	r0
 5ea:	11 24       	eor	r1, r1
 5ec:	2f 93       	push	r18
 5ee:	3f 93       	push	r19
 5f0:	4f 93       	push	r20
 5f2:	5f 93       	push	r21
 5f4:	6f 93       	push	r22
 5f6:	7f 93       	push	r23
 5f8:	8f 93       	push	r24
 5fa:	9f 93       	push	r25
 5fc:	af 93       	push	r26
 5fe:	bf 93       	push	r27
 600:	cf 93       	push	r28
 602:	ef 93       	push	r30
 604:	ff 93       	push	r31
 606:	c1 98       	cbi	0x18, 1	; 24
 608:	8f ef       	ldi	r24, 0xFF	; 255
 60a:	0e 94 62 00 	call	0xc4	; 0xc4 <SPI_WriteReadByte>
 60e:	c8 2f       	mov	r28, r24
 610:	c1 9a       	sbi	0x18, 1	; 24
 612:	86 ff       	sbrs	r24, 6
 614:	03 c0       	rjmp	.+6      	; 0x61c <__vector_3+0x3a>
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	80 93 9e 00 	sts	0x009E, r24
 61c:	c5 ff       	sbrs	r28, 5
 61e:	0b c0       	rjmp	.+22     	; 0x636 <__vector_3+0x54>
 620:	81 e0       	ldi	r24, 0x01	; 1
 622:	80 93 74 00 	sts	0x0074, r24
 626:	c0 62       	ori	r28, 0x20	; 32
 628:	6c 2f       	mov	r22, r28
 62a:	87 e0       	ldi	r24, 0x07	; 7
 62c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 630:	10 92 9b 00 	sts	0x009B, r1
 634:	c0 98       	cbi	0x18, 0	; 24
 636:	c4 ff       	sbrs	r28, 4
 638:	0d c0       	rjmp	.+26     	; 0x654 <__vector_3+0x72>
 63a:	10 92 9b 00 	sts	0x009B, r1
 63e:	6c 2f       	mov	r22, r28
 640:	60 63       	ori	r22, 0x30	; 48
 642:	87 e0       	ldi	r24, 0x07	; 7
 644:	0e 94 fe 00 	call	0x1fc	; 0x1fc <nRF_Config_Register>
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	80 93 74 00 	sts	0x0074, r24
 64e:	0e 94 19 02 	call	0x432	; 0x432 <nRF_Clear_TX>
 652:	c0 98       	cbi	0x18, 0	; 24
 654:	ff 91       	pop	r31
 656:	ef 91       	pop	r30
 658:	cf 91       	pop	r28
 65a:	bf 91       	pop	r27
 65c:	af 91       	pop	r26
 65e:	9f 91       	pop	r25
 660:	8f 91       	pop	r24
 662:	7f 91       	pop	r23
 664:	6f 91       	pop	r22
 666:	5f 91       	pop	r21
 668:	4f 91       	pop	r20
 66a:	3f 91       	pop	r19
 66c:	2f 91       	pop	r18
 66e:	0f 90       	pop	r0
 670:	0f be       	out	0x3f, r0	; 63
 672:	0f 90       	pop	r0
 674:	1f 90       	pop	r1
 676:	18 95       	reti

00000678 <usart_send_char>:
 678:	90 91 b1 00 	lds	r25, 0x00B1
 67c:	9f 5f       	subi	r25, 0xFF	; 255
 67e:	9f 70       	andi	r25, 0x0F	; 15
 680:	20 91 e2 00 	lds	r18, 0x00E2
 684:	92 17       	cp	r25, r18
 686:	e1 f3       	breq	.-8      	; 0x680 <usart_send_char+0x8>
 688:	e9 2f       	mov	r30, r25
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	e0 56       	subi	r30, 0x60	; 96
 68e:	ff 4f       	sbci	r31, 0xFF	; 255
 690:	80 83       	st	Z, r24
 692:	90 93 b1 00 	sts	0x00B1, r25
 696:	55 9a       	sbi	0x0a, 5	; 10
 698:	08 95       	ret

0000069a <__vector_13>:
 69a:	1f 92       	push	r1
 69c:	0f 92       	push	r0
 69e:	0f b6       	in	r0, 0x3f	; 63
 6a0:	0f 92       	push	r0
 6a2:	11 24       	eor	r1, r1
 6a4:	2f 93       	push	r18
 6a6:	3f 93       	push	r19
 6a8:	4f 93       	push	r20
 6aa:	5f 93       	push	r21
 6ac:	6f 93       	push	r22
 6ae:	7f 93       	push	r23
 6b0:	8f 93       	push	r24
 6b2:	9f 93       	push	r25
 6b4:	af 93       	push	r26
 6b6:	bf 93       	push	r27
 6b8:	ef 93       	push	r30
 6ba:	ff 93       	push	r31
 6bc:	8c b1       	in	r24, 0x0c	; 12
 6be:	8d 30       	cpi	r24, 0x0D	; 13
 6c0:	49 f4       	brne	.+18     	; 0x6d4 <__vector_13+0x3a>
 6c2:	0e 94 3c 03 	call	0x678	; 0x678 <usart_send_char>
 6c6:	8a e0       	ldi	r24, 0x0A	; 10
 6c8:	0e 94 3c 03 	call	0x678	; 0x678 <usart_send_char>
 6cc:	81 e0       	ldi	r24, 0x01	; 1
 6ce:	80 93 77 00 	sts	0x0077, r24
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	8c b9       	out	0x0c, r24	; 12
 6d6:	e0 91 9f 00 	lds	r30, 0x009F
 6da:	ef 5f       	subi	r30, 0xFF	; 255
 6dc:	ef 71       	andi	r30, 0x1F	; 31
 6de:	90 91 b0 00 	lds	r25, 0x00B0
 6e2:	e9 17       	cp	r30, r25
 6e4:	31 f0       	breq	.+12     	; 0x6f2 <__vector_13+0x58>
 6e6:	e0 93 9f 00 	sts	0x009F, r30
 6ea:	f0 e0       	ldi	r31, 0x00	; 0
 6ec:	ee 54       	subi	r30, 0x4E	; 78
 6ee:	ff 4f       	sbci	r31, 0xFF	; 255
 6f0:	80 83       	st	Z, r24
 6f2:	ff 91       	pop	r31
 6f4:	ef 91       	pop	r30
 6f6:	bf 91       	pop	r27
 6f8:	af 91       	pop	r26
 6fa:	9f 91       	pop	r25
 6fc:	8f 91       	pop	r24
 6fe:	7f 91       	pop	r23
 700:	6f 91       	pop	r22
 702:	5f 91       	pop	r21
 704:	4f 91       	pop	r20
 706:	3f 91       	pop	r19
 708:	2f 91       	pop	r18
 70a:	0f 90       	pop	r0
 70c:	0f be       	out	0x3f, r0	; 63
 70e:	0f 90       	pop	r0
 710:	1f 90       	pop	r1
 712:	18 95       	reti

00000714 <__vector_14>:
 714:	1f 92       	push	r1
 716:	0f 92       	push	r0
 718:	0f b6       	in	r0, 0x3f	; 63
 71a:	0f 92       	push	r0
 71c:	11 24       	eor	r1, r1
 71e:	8f 93       	push	r24
 720:	9f 93       	push	r25
 722:	ef 93       	push	r30
 724:	ff 93       	push	r31
 726:	90 91 b1 00 	lds	r25, 0x00B1
 72a:	80 91 e2 00 	lds	r24, 0x00E2
 72e:	98 17       	cp	r25, r24
 730:	71 f0       	breq	.+28     	; 0x74e <__vector_14+0x3a>
 732:	80 91 e2 00 	lds	r24, 0x00E2
 736:	8f 5f       	subi	r24, 0xFF	; 255
 738:	8f 70       	andi	r24, 0x0F	; 15
 73a:	80 93 e2 00 	sts	0x00E2, r24
 73e:	e0 91 e2 00 	lds	r30, 0x00E2
 742:	f0 e0       	ldi	r31, 0x00	; 0
 744:	e0 56       	subi	r30, 0x60	; 96
 746:	ff 4f       	sbci	r31, 0xFF	; 255
 748:	80 81       	ld	r24, Z
 74a:	8c b9       	out	0x0c, r24	; 12
 74c:	01 c0       	rjmp	.+2      	; 0x750 <__vector_14+0x3c>
 74e:	55 98       	cbi	0x0a, 5	; 10
 750:	ff 91       	pop	r31
 752:	ef 91       	pop	r30
 754:	9f 91       	pop	r25
 756:	8f 91       	pop	r24
 758:	0f 90       	pop	r0
 75a:	0f be       	out	0x3f, r0	; 63
 75c:	0f 90       	pop	r0
 75e:	1f 90       	pop	r1
 760:	18 95       	reti

00000762 <_exit>:
 762:	f8 94       	cli

00000764 <__stop_program>:
 764:	ff cf       	rjmp	.-2      	; 0x764 <__stop_program>
