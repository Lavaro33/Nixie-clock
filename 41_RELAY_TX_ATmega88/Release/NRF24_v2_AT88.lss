
NRF24_v2_AT88.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000049e  00000532  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000049e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00800108  00800108  0000053a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000053a  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	1f c0       	rjmp	.+62     	; 0x40 <__ctors_end>
   2:	04 c2       	rjmp	.+1032   	; 0x40c <__vector_1>
   4:	38 c0       	rjmp	.+112    	; 0x76 <__bad_interrupt>
   6:	37 c0       	rjmp	.+110    	; 0x76 <__bad_interrupt>
   8:	36 c0       	rjmp	.+108    	; 0x76 <__bad_interrupt>
   a:	35 c0       	rjmp	.+106    	; 0x76 <__bad_interrupt>
   c:	34 c0       	rjmp	.+104    	; 0x76 <__bad_interrupt>
   e:	33 c0       	rjmp	.+102    	; 0x76 <__bad_interrupt>
  10:	32 c0       	rjmp	.+100    	; 0x76 <__bad_interrupt>
  12:	31 c0       	rjmp	.+98     	; 0x76 <__bad_interrupt>
  14:	30 c0       	rjmp	.+96     	; 0x76 <__bad_interrupt>
  16:	2f c0       	rjmp	.+94     	; 0x76 <__bad_interrupt>
  18:	2e c0       	rjmp	.+92     	; 0x76 <__bad_interrupt>
  1a:	2d c0       	rjmp	.+90     	; 0x76 <__bad_interrupt>
  1c:	2c c0       	rjmp	.+88     	; 0x76 <__bad_interrupt>
  1e:	2b c0       	rjmp	.+86     	; 0x76 <__bad_interrupt>
  20:	2a c0       	rjmp	.+84     	; 0x76 <__bad_interrupt>
  22:	29 c0       	rjmp	.+82     	; 0x76 <__bad_interrupt>
  24:	28 c0       	rjmp	.+80     	; 0x76 <__bad_interrupt>
  26:	27 c0       	rjmp	.+78     	; 0x76 <__bad_interrupt>
  28:	26 c0       	rjmp	.+76     	; 0x76 <__bad_interrupt>
  2a:	25 c0       	rjmp	.+74     	; 0x76 <__bad_interrupt>
  2c:	24 c0       	rjmp	.+72     	; 0x76 <__bad_interrupt>
  2e:	23 c0       	rjmp	.+70     	; 0x76 <__bad_interrupt>
  30:	22 c0       	rjmp	.+68     	; 0x76 <__bad_interrupt>
  32:	21 c0       	rjmp	.+66     	; 0x76 <__bad_interrupt>

00000034 <__trampolines_end>:
  34:	41 54       	subi	r20, 0x41	; 65
  36:	4e 45       	sbci	r20, 0x5E	; 94
  38:	4c 00       	.word	0x004c	; ????

0000003a <__c.1980>:
  3a:	41 54 4e 45 4c 00                                   ATNEL.

00000040 <__ctors_end>:
  40:	11 24       	eor	r1, r1
  42:	1f be       	out	0x3f, r1	; 63
  44:	cf ef       	ldi	r28, 0xFF	; 255
  46:	d4 e0       	ldi	r29, 0x04	; 4
  48:	de bf       	out	0x3e, r29	; 62
  4a:	cd bf       	out	0x3d, r28	; 61

0000004c <__do_copy_data>:
  4c:	11 e0       	ldi	r17, 0x01	; 1
  4e:	a0 e0       	ldi	r26, 0x00	; 0
  50:	b1 e0       	ldi	r27, 0x01	; 1
  52:	ee e9       	ldi	r30, 0x9E	; 158
  54:	f4 e0       	ldi	r31, 0x04	; 4
  56:	02 c0       	rjmp	.+4      	; 0x5c <__do_copy_data+0x10>
  58:	05 90       	lpm	r0, Z+
  5a:	0d 92       	st	X+, r0
  5c:	a8 30       	cpi	r26, 0x08	; 8
  5e:	b1 07       	cpc	r27, r17
  60:	d9 f7       	brne	.-10     	; 0x58 <__do_copy_data+0xc>

00000062 <__do_clear_bss>:
  62:	21 e0       	ldi	r18, 0x01	; 1
  64:	a8 e0       	ldi	r26, 0x08	; 8
  66:	b1 e0       	ldi	r27, 0x01	; 1
  68:	01 c0       	rjmp	.+2      	; 0x6c <.do_clear_bss_start>

0000006a <.do_clear_bss_loop>:
  6a:	1d 92       	st	X+, r1

0000006c <.do_clear_bss_start>:
  6c:	a0 33       	cpi	r26, 0x30	; 48
  6e:	b2 07       	cpc	r27, r18
  70:	e1 f7       	brne	.-8      	; 0x6a <.do_clear_bss_loop>
  72:	47 d0       	rcall	.+142    	; 0x102 <main>
  74:	12 c2       	rjmp	.+1060   	; 0x49a <_exit>

00000076 <__bad_interrupt>:
  76:	c4 cf       	rjmp	.-120    	; 0x0 <__vectors>

00000078 <init_SPI>:
  78:	52 98       	cbi	0x0a, 2	; 10
  7a:	20 9a       	sbi	0x04, 0	; 4
  7c:	21 9a       	sbi	0x04, 1	; 4
  7e:	22 9a       	sbi	0x04, 2	; 4
  80:	23 9a       	sbi	0x04, 3	; 4
  82:	24 98       	cbi	0x04, 4	; 4
  84:	25 9a       	sbi	0x04, 5	; 4
  86:	5a 9a       	sbi	0x0b, 2	; 11
  88:	28 98       	cbi	0x05, 0	; 5
  8a:	29 9a       	sbi	0x05, 1	; 5
  8c:	2a 9a       	sbi	0x05, 2	; 5
  8e:	2b 98       	cbi	0x05, 3	; 5
  90:	2c 98       	cbi	0x05, 4	; 5
  92:	2d 98       	cbi	0x05, 5	; 5
  94:	8c b5       	in	r24, 0x2c	; 44
  96:	80 65       	ori	r24, 0x50	; 80
  98:	8c bd       	out	0x2c, r24	; 44
  9a:	8d b5       	in	r24, 0x2d	; 45
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	8d bd       	out	0x2d, r24	; 45
  a0:	08 95       	ret

000000a2 <SPI_WriteReadByte>:
  a2:	8e bd       	out	0x2e, r24	; 46
  a4:	0d b4       	in	r0, 0x2d	; 45
  a6:	07 fe       	sbrs	r0, 7
  a8:	fd cf       	rjmp	.-6      	; 0xa4 <SPI_WriteReadByte+0x2>
  aa:	8e b5       	in	r24, 0x2e	; 46
  ac:	08 95       	ret

000000ae <SPI_WriteByte>:
  ae:	8e bd       	out	0x2e, r24	; 46
  b0:	0d b4       	in	r0, 0x2d	; 45
  b2:	07 fe       	sbrs	r0, 7
  b4:	fd cf       	rjmp	.-6      	; 0xb0 <SPI_WriteByte+0x2>
  b6:	08 95       	ret

000000b8 <SPI_WriteReadDataBuffer>:
  b8:	cf 92       	push	r12
  ba:	df 92       	push	r13
  bc:	ff 92       	push	r15
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	1f 92       	push	r1
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	f6 2e       	mov	r15, r22
  ce:	8c 01       	movw	r16, r24
  d0:	6b 01       	movw	r12, r22
  d2:	8c 2d       	mov	r24, r12
  d4:	8f 19       	sub	r24, r15
  d6:	84 17       	cp	r24, r20
  d8:	50 f4       	brcc	.+20     	; 0xee <SPI_WriteReadDataBuffer+0x36>
  da:	f6 01       	movw	r30, r12
  dc:	81 91       	ld	r24, Z+
  de:	6f 01       	movw	r12, r30
  e0:	49 83       	std	Y+1, r20	; 0x01
  e2:	df df       	rcall	.-66     	; 0xa2 <SPI_WriteReadByte>
  e4:	f8 01       	movw	r30, r16
  e6:	81 93       	st	Z+, r24
  e8:	8f 01       	movw	r16, r30
  ea:	49 81       	ldd	r20, Y+1	; 0x01
  ec:	f2 cf       	rjmp	.-28     	; 0xd2 <SPI_WriteReadDataBuffer+0x1a>
  ee:	0f 90       	pop	r0
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	1f 91       	pop	r17
  f6:	0f 91       	pop	r16
  f8:	ff 90       	pop	r15
  fa:	df 90       	pop	r13
  fc:	cf 90       	pop	r12
  fe:	08 95       	ret

00000100 <moja_funkcja>:
 100:	08 95       	ret

00000102 <main>:
 102:	5c d1       	rcall	.+696    	; 0x3bc <nRF_init>
 104:	80 e8       	ldi	r24, 0x80	; 128
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0f d0       	rcall	.+30     	; 0x128 <register_nRF_RX_Event_Callback>
 10a:	78 94       	sei
 10c:	b5 d0       	rcall	.+362    	; 0x278 <nRF_RX_Power_Up>
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	fb d0       	rcall	.+502    	; 0x30a <nRF_SendDataToAir>
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	89 e6       	ldi	r24, 0x69	; 105
 118:	98 e1       	ldi	r25, 0x18	; 24
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x18>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x22>
 124:	00 00       	nop
 126:	f3 cf       	rjmp	.-26     	; 0x10e <main+0xc>

00000128 <register_nRF_RX_Event_Callback>:
 128:	90 93 09 01 	sts	0x0109, r25
 12c:	80 93 08 01 	sts	0x0108, r24
 130:	08 95       	ret

00000132 <nRF_Read_One_Byte_From_Register>:
 132:	29 98       	cbi	0x05, 1	; 5
 134:	8f 71       	andi	r24, 0x1F	; 31
 136:	bb df       	rcall	.-138    	; 0xae <SPI_WriteByte>
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	b3 df       	rcall	.-154    	; 0xa2 <SPI_WriteReadByte>
 13c:	29 9a       	sbi	0x05, 1	; 5
 13e:	08 95       	ret

00000140 <nRF_Config_Register>:
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	1f 92       	push	r1
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
 14a:	29 98       	cbi	0x05, 1	; 5
 14c:	8f 71       	andi	r24, 0x1F	; 31
 14e:	80 62       	ori	r24, 0x20	; 32
 150:	69 83       	std	Y+1, r22	; 0x01
 152:	ad df       	rcall	.-166    	; 0xae <SPI_WriteByte>
 154:	69 81       	ldd	r22, Y+1	; 0x01
 156:	86 2f       	mov	r24, r22
 158:	aa df       	rcall	.-172    	; 0xae <SPI_WriteByte>
 15a:	29 9a       	sbi	0x05, 1	; 5
 15c:	0f 90       	pop	r0
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <nRF_Write_Register>:
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	1f 92       	push	r1
 16e:	cd b7       	in	r28, 0x3d	; 61
 170:	de b7       	in	r29, 0x3e	; 62
 172:	8b 01       	movw	r16, r22
 174:	29 98       	cbi	0x05, 1	; 5
 176:	8f 71       	andi	r24, 0x1F	; 31
 178:	80 62       	ori	r24, 0x20	; 32
 17a:	49 83       	std	Y+1, r20	; 0x01
 17c:	98 df       	rcall	.-208    	; 0xae <SPI_WriteByte>
 17e:	49 81       	ldd	r20, Y+1	; 0x01
 180:	b8 01       	movw	r22, r16
 182:	c8 01       	movw	r24, r16
 184:	99 df       	rcall	.-206    	; 0xb8 <SPI_WriteReadDataBuffer>
 186:	29 9a       	sbi	0x05, 1	; 5
 188:	0f 90       	pop	r0
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	08 95       	ret

00000194 <nRF_SET_Transmitter_Adres>:
 194:	cf 93       	push	r28
 196:	df 93       	push	r29
 198:	00 d0       	rcall	.+0      	; 0x19a <nRF_SET_Transmitter_Adres+0x6>
 19a:	00 d0       	rcall	.+0      	; 0x19c <nRF_SET_Transmitter_Adres+0x8>
 19c:	1f 92       	push	r1
 19e:	cd b7       	in	r28, 0x3d	; 61
 1a0:	de b7       	in	r29, 0x3e	; 62
 1a2:	de 01       	movw	r26, r28
 1a4:	11 96       	adiw	r26, 0x01	; 1
 1a6:	9e 01       	movw	r18, r28
 1a8:	2a 5f       	subi	r18, 0xFA	; 250
 1aa:	3f 4f       	sbci	r19, 0xFF	; 255
 1ac:	bd 01       	movw	r22, r26
 1ae:	fc 01       	movw	r30, r24
 1b0:	44 91       	lpm	r20, Z
 1b2:	4d 93       	st	X+, r20
 1b4:	01 96       	adiw	r24, 0x01	; 1
 1b6:	a2 17       	cp	r26, r18
 1b8:	b3 07       	cpc	r27, r19
 1ba:	c9 f7       	brne	.-14     	; 0x1ae <nRF_SET_Transmitter_Adres+0x1a>
 1bc:	45 e0       	ldi	r20, 0x05	; 5
 1be:	80 e1       	ldi	r24, 0x10	; 16
 1c0:	d1 df       	rcall	.-94     	; 0x164 <nRF_Write_Register>
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	08 95       	ret

000001d2 <nRF_SET_Reciver_Addres>:
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	00 d0       	rcall	.+0      	; 0x1d8 <nRF_SET_Reciver_Addres+0x6>
 1d8:	00 d0       	rcall	.+0      	; 0x1da <nRF_SET_Reciver_Addres+0x8>
 1da:	1f 92       	push	r1
 1dc:	cd b7       	in	r28, 0x3d	; 61
 1de:	de b7       	in	r29, 0x3e	; 62
 1e0:	96 ef       	ldi	r25, 0xF6	; 246
 1e2:	98 0f       	add	r25, r24
 1e4:	96 30       	cpi	r25, 0x06	; 6
 1e6:	18 f4       	brcc	.+6      	; 0x1ee <nRF_SET_Reciver_Addres+0x1c>
 1e8:	8c 30       	cpi	r24, 0x0C	; 12
 1ea:	90 f4       	brcc	.+36     	; 0x210 <nRF_SET_Reciver_Addres+0x3e>
 1ec:	01 c0       	rjmp	.+2      	; 0x1f0 <nRF_SET_Reciver_Addres+0x1e>
 1ee:	8a e0       	ldi	r24, 0x0A	; 10
 1f0:	de 01       	movw	r26, r28
 1f2:	11 96       	adiw	r26, 0x01	; 1
 1f4:	9e 01       	movw	r18, r28
 1f6:	2a 5f       	subi	r18, 0xFA	; 250
 1f8:	3f 4f       	sbci	r19, 0xFF	; 255
 1fa:	fb 01       	movw	r30, r22
 1fc:	bd 01       	movw	r22, r26
 1fe:	94 91       	lpm	r25, Z
 200:	9d 93       	st	X+, r25
 202:	31 96       	adiw	r30, 0x01	; 1
 204:	a2 17       	cp	r26, r18
 206:	b3 07       	cpc	r27, r19
 208:	d1 f7       	brne	.-12     	; 0x1fe <nRF_SET_Reciver_Addres+0x2c>
 20a:	45 e0       	ldi	r20, 0x05	; 5
 20c:	ab df       	rcall	.-170    	; 0x164 <nRF_Write_Register>
 20e:	04 c0       	rjmp	.+8      	; 0x218 <nRF_SET_Reciver_Addres+0x46>
 210:	fb 01       	movw	r30, r22
 212:	64 91       	lpm	r22, Z
 214:	69 83       	std	Y+1, r22	; 0x01
 216:	94 df       	rcall	.-216    	; 0x140 <nRF_Config_Register>
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <nRF_Set_State_And_Width_Of_CRC>:
 228:	1f 93       	push	r17
 22a:	cf 93       	push	r28
 22c:	df 93       	push	r29
 22e:	1f 92       	push	r1
 230:	cd b7       	in	r28, 0x3d	; 61
 232:	de b7       	in	r29, 0x3e	; 62
 234:	18 2f       	mov	r17, r24
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	69 83       	std	Y+1, r22	; 0x01
 23a:	7b df       	rcall	.-266    	; 0x132 <nRF_Read_One_Byte_From_Register>
 23c:	69 81       	ldd	r22, Y+1	; 0x01
 23e:	11 30       	cpi	r17, 0x01	; 1
 240:	21 f0       	breq	.+8      	; 0x24a <nRF_Set_State_And_Width_Of_CRC+0x22>
 242:	12 30       	cpi	r17, 0x02	; 2
 244:	11 f4       	brne	.+4      	; 0x24a <nRF_Set_State_And_Width_Of_CRC+0x22>
 246:	84 60       	ori	r24, 0x04	; 4
 248:	01 c0       	rjmp	.+2      	; 0x24c <nRF_Set_State_And_Width_Of_CRC+0x24>
 24a:	8b 7f       	andi	r24, 0xFB	; 251
 24c:	61 30       	cpi	r22, 0x01	; 1
 24e:	11 f4       	brne	.+4      	; 0x254 <nRF_Set_State_And_Width_Of_CRC+0x2c>
 250:	88 60       	ori	r24, 0x08	; 8
 252:	03 c0       	rjmp	.+6      	; 0x25a <nRF_Set_State_And_Width_Of_CRC+0x32>
 254:	62 30       	cpi	r22, 0x02	; 2
 256:	09 f4       	brne	.+2      	; 0x25a <nRF_Set_State_And_Width_Of_CRC+0x32>
 258:	87 7f       	andi	r24, 0xF7	; 247
 25a:	68 2f       	mov	r22, r24
 25c:	80 e0       	ldi	r24, 0x00	; 0
 25e:	0f 90       	pop	r0
 260:	df 91       	pop	r29
 262:	cf 91       	pop	r28
 264:	1f 91       	pop	r17
 266:	6c cf       	rjmp	.-296    	; 0x140 <nRF_Config_Register>

00000268 <nRF_TX_Power_Up>:
 268:	28 98       	cbi	0x05, 0	; 5
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	62 df       	rcall	.-316    	; 0x132 <nRF_Read_One_Byte_From_Register>
 26e:	68 2f       	mov	r22, r24
 270:	6e 7f       	andi	r22, 0xFE	; 254
 272:	62 60       	ori	r22, 0x02	; 2
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	64 cf       	rjmp	.-312    	; 0x140 <nRF_Config_Register>

00000278 <nRF_RX_Power_Up>:
 278:	28 98       	cbi	0x05, 0	; 5
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	5a df       	rcall	.-332    	; 0x132 <nRF_Read_One_Byte_From_Register>
 27e:	68 2f       	mov	r22, r24
 280:	63 60       	ori	r22, 0x03	; 3
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	5d df       	rcall	.-326    	; 0x140 <nRF_Config_Register>
 286:	28 9a       	sbi	0x05, 0	; 5
 288:	83 e0       	ldi	r24, 0x03	; 3
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <nRF_RX_Power_Up+0x14>
 290:	00 c0       	rjmp	.+0      	; 0x292 <nRF_RX_Power_Up+0x1a>
 292:	00 00       	nop
 294:	08 95       	ret

00000296 <nRF_Set_Channel>:
 296:	68 2f       	mov	r22, r24
 298:	6f 77       	andi	r22, 0x7F	; 127
 29a:	85 e0       	ldi	r24, 0x05	; 5
 29c:	51 cf       	rjmp	.-350    	; 0x140 <nRF_Config_Register>

0000029e <nRF_Clear_TX>:
 29e:	29 98       	cbi	0x05, 1	; 5
 2a0:	81 ee       	ldi	r24, 0xE1	; 225
 2a2:	05 df       	rcall	.-502    	; 0xae <SPI_WriteByte>
 2a4:	29 9a       	sbi	0x05, 1	; 5
 2a6:	08 95       	ret

000002a8 <nRF_Clear_RX>:
 2a8:	29 98       	cbi	0x05, 1	; 5
 2aa:	82 ee       	ldi	r24, 0xE2	; 226
 2ac:	00 df       	rcall	.-512    	; 0xae <SPI_WriteByte>
 2ae:	29 9a       	sbi	0x05, 1	; 5
 2b0:	08 95       	ret

000002b2 <nRF_Set_Active_DataPipe_And_ACK>:
 2b2:	0f 93       	push	r16
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	1f 92       	push	r1
 2bc:	cd b7       	in	r28, 0x3d	; 61
 2be:	de b7       	in	r29, 0x3e	; 62
 2c0:	18 2f       	mov	r17, r24
 2c2:	04 2f       	mov	r16, r20
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	69 83       	std	Y+1, r22	; 0x01
 2c8:	34 df       	rcall	.-408    	; 0x132 <nRF_Read_One_Byte_From_Register>
 2ca:	98 2f       	mov	r25, r24
 2cc:	69 81       	ldd	r22, Y+1	; 0x01
 2ce:	61 30       	cpi	r22, 0x01	; 1
 2d0:	11 f4       	brne	.+4      	; 0x2d6 <nRF_Set_Active_DataPipe_And_ACK+0x24>
 2d2:	91 2b       	or	r25, r17
 2d4:	05 c0       	rjmp	.+10     	; 0x2e0 <nRF_Set_Active_DataPipe_And_ACK+0x2e>
 2d6:	62 30       	cpi	r22, 0x02	; 2
 2d8:	19 f4       	brne	.+6      	; 0x2e0 <nRF_Set_Active_DataPipe_And_ACK+0x2e>
 2da:	81 2f       	mov	r24, r17
 2dc:	80 95       	com	r24
 2de:	98 23       	and	r25, r24
 2e0:	69 2f       	mov	r22, r25
 2e2:	82 e0       	ldi	r24, 0x02	; 2
 2e4:	2d df       	rcall	.-422    	; 0x140 <nRF_Config_Register>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	24 df       	rcall	.-440    	; 0x132 <nRF_Read_One_Byte_From_Register>
 2ea:	68 2f       	mov	r22, r24
 2ec:	01 30       	cpi	r16, 0x01	; 1
 2ee:	11 f4       	brne	.+4      	; 0x2f4 <nRF_Set_Active_DataPipe_And_ACK+0x42>
 2f0:	61 2b       	or	r22, r17
 2f2:	04 c0       	rjmp	.+8      	; 0x2fc <nRF_Set_Active_DataPipe_And_ACK+0x4a>
 2f4:	02 30       	cpi	r16, 0x02	; 2
 2f6:	11 f4       	brne	.+4      	; 0x2fc <nRF_Set_Active_DataPipe_And_ACK+0x4a>
 2f8:	10 95       	com	r17
 2fa:	61 23       	and	r22, r17
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	0f 90       	pop	r0
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	1f 91       	pop	r17
 306:	0f 91       	pop	r16
 308:	1b cf       	rjmp	.-458    	; 0x140 <nRF_Config_Register>

0000030a <nRF_SendDataToAir>:
 30a:	ef 92       	push	r14
 30c:	ff 92       	push	r15
 30e:	0f 93       	push	r16
 310:	1f 93       	push	r17
 312:	cf 93       	push	r28
 314:	df 93       	push	r29
 316:	8c 01       	movw	r16, r24
 318:	80 91 2c 01 	lds	r24, 0x012C
 31c:	81 30       	cpi	r24, 0x01	; 1
 31e:	71 f1       	breq	.+92     	; 0x37c <nRF_SendDataToAir+0x72>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	80 93 2c 01 	sts	0x012C, r24
 326:	80 91 2d 01 	lds	r24, 0x012D
 32a:	81 30       	cpi	r24, 0x01	; 1
 32c:	19 f4       	brne	.+6      	; 0x334 <nRF_SendDataToAir+0x2a>
 32e:	e0 91 2e 01 	lds	r30, 0x012E
 332:	06 c0       	rjmp	.+12     	; 0x340 <nRF_SendDataToAir+0x36>
 334:	f8 01       	movw	r30, r16
 336:	01 90       	ld	r0, Z+
 338:	00 20       	and	r0, r0
 33a:	e9 f7       	brne	.-6      	; 0x336 <nRF_SendDataToAir+0x2c>
 33c:	31 97       	sbiw	r30, 0x01	; 1
 33e:	e0 1b       	sub	r30, r16
 340:	fe 2e       	mov	r15, r30
 342:	8f e1       	ldi	r24, 0x1F	; 31
 344:	8e 17       	cp	r24, r30
 346:	10 f4       	brcc	.+4      	; 0x34c <nRF_SendDataToAir+0x42>
 348:	8f e1       	ldi	r24, 0x1F	; 31
 34a:	f8 2e       	mov	r15, r24
 34c:	8d df       	rcall	.-230    	; 0x268 <nRF_TX_Power_Up>
 34e:	8b e2       	ldi	r24, 0x2B	; 43
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	01 97       	sbiw	r24, 0x01	; 1
 354:	f1 f7       	brne	.-4      	; 0x352 <nRF_SendDataToAir+0x48>
 356:	00 c0       	rjmp	.+0      	; 0x358 <nRF_SendDataToAir+0x4e>
 358:	00 00       	nop
 35a:	29 98       	cbi	0x05, 1	; 5
 35c:	80 ea       	ldi	r24, 0xA0	; 160
 35e:	a7 de       	rcall	.-690    	; 0xae <SPI_WriteByte>
 360:	e0 2e       	mov	r14, r16
 362:	c0 2f       	mov	r28, r16
 364:	d1 2f       	mov	r29, r17
 366:	8c 2f       	mov	r24, r28
 368:	8e 19       	sub	r24, r14
 36a:	8f 15       	cp	r24, r15
 36c:	18 f4       	brcc	.+6      	; 0x374 <nRF_SendDataToAir+0x6a>
 36e:	89 91       	ld	r24, Y+
 370:	9e de       	rcall	.-708    	; 0xae <SPI_WriteByte>
 372:	f9 cf       	rjmp	.-14     	; 0x366 <nRF_SendDataToAir+0x5c>
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	9b de       	rcall	.-714    	; 0xae <SPI_WriteByte>
 378:	29 9a       	sbi	0x05, 1	; 5
 37a:	28 9a       	sbi	0x05, 0	; 5
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	1f 91       	pop	r17
 382:	0f 91       	pop	r16
 384:	ff 90       	pop	r15
 386:	ef 90       	pop	r14
 388:	08 95       	ret

0000038a <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>:
 38a:	cf 93       	push	r28
 38c:	c6 2f       	mov	r28, r22
 38e:	68 2f       	mov	r22, r24
 390:	8c e1       	ldi	r24, 0x1C	; 28
 392:	d6 de       	rcall	.-596    	; 0x140 <nRF_Config_Register>
 394:	8d e1       	ldi	r24, 0x1D	; 29
 396:	cd de       	rcall	.-614    	; 0x132 <nRF_Read_One_Byte_From_Register>
 398:	c1 30       	cpi	r28, 0x01	; 1
 39a:	11 f4       	brne	.+4      	; 0x3a0 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x16>
 39c:	84 60       	ori	r24, 0x04	; 4
 39e:	03 c0       	rjmp	.+6      	; 0x3a6 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1c>
 3a0:	c2 30       	cpi	r28, 0x02	; 2
 3a2:	09 f4       	brne	.+2      	; 0x3a6 <nRF_Set_Dynamic_Payload_State_On_Data_Pipe+0x1c>
 3a4:	8b 7f       	andi	r24, 0xFB	; 251
 3a6:	68 2f       	mov	r22, r24
 3a8:	8d e1       	ldi	r24, 0x1D	; 29
 3aa:	cf 91       	pop	r28
 3ac:	c9 ce       	rjmp	.-622    	; 0x140 <nRF_Config_Register>

000003ae <Initialize_INTERRUPT_For_nRF>:
 3ae:	e8 9a       	sbi	0x1d, 0	; 29
 3b0:	e9 e6       	ldi	r30, 0x69	; 105
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	82 60       	ori	r24, 0x02	; 2
 3b8:	80 83       	st	Z, r24
 3ba:	08 95       	ret

000003bc <nRF_init>:
 3bc:	5d de       	rcall	.-838    	; 0x78 <init_SPI>
 3be:	f7 df       	rcall	.-18     	; 0x3ae <Initialize_INTERRUPT_For_nRF>
 3c0:	8a e3       	ldi	r24, 0x3A	; 58
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	e7 de       	rcall	.-562    	; 0x194 <nRF_SET_Transmitter_Adres>
 3c6:	64 e3       	ldi	r22, 0x34	; 52
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	8a e0       	ldi	r24, 0x0A	; 10
 3cc:	02 df       	rcall	.-508    	; 0x1d2 <nRF_SET_Reciver_Addres>
 3ce:	60 e0       	ldi	r22, 0x00	; 0
 3d0:	80 e0       	ldi	r24, 0x00	; 0
 3d2:	b6 de       	rcall	.-660    	; 0x140 <nRF_Config_Register>
 3d4:	69 df       	rcall	.-302    	; 0x2a8 <nRF_Clear_RX>
 3d6:	63 df       	rcall	.-314    	; 0x29e <nRF_Clear_TX>
 3d8:	61 e0       	ldi	r22, 0x01	; 1
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	25 df       	rcall	.-438    	; 0x228 <nRF_Set_State_And_Width_Of_CRC>
 3de:	8a e0       	ldi	r24, 0x0A	; 10
 3e0:	5a df       	rcall	.-332    	; 0x296 <nRF_Set_Channel>
 3e2:	41 e0       	ldi	r20, 0x01	; 1
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	64 df       	rcall	.-312    	; 0x2b2 <nRF_Set_Active_DataPipe_And_ACK>
 3ea:	6f e0       	ldi	r22, 0x0F	; 15
 3ec:	84 e0       	ldi	r24, 0x04	; 4
 3ee:	a8 de       	rcall	.-688    	; 0x140 <nRF_Config_Register>
 3f0:	66 e0       	ldi	r22, 0x06	; 6
 3f2:	86 e0       	ldi	r24, 0x06	; 6
 3f4:	a5 de       	rcall	.-694    	; 0x140 <nRF_Config_Register>
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	c7 df       	rcall	.-114    	; 0x38a <nRF_Set_Dynamic_Payload_State_On_Data_Pipe>
 3fc:	81 e0       	ldi	r24, 0x01	; 1
 3fe:	80 93 2f 01 	sts	0x012F, r24
 402:	10 92 2c 01 	sts	0x012C, r1
 406:	60 e7       	ldi	r22, 0x70	; 112
 408:	87 e0       	ldi	r24, 0x07	; 7
 40a:	9a ce       	rjmp	.-716    	; 0x140 <nRF_Config_Register>

0000040c <__vector_1>:
 40c:	1f 92       	push	r1
 40e:	0f 92       	push	r0
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	0f 92       	push	r0
 414:	11 24       	eor	r1, r1
 416:	2f 93       	push	r18
 418:	3f 93       	push	r19
 41a:	4f 93       	push	r20
 41c:	5f 93       	push	r21
 41e:	6f 93       	push	r22
 420:	7f 93       	push	r23
 422:	8f 93       	push	r24
 424:	9f 93       	push	r25
 426:	af 93       	push	r26
 428:	bf 93       	push	r27
 42a:	cf 93       	push	r28
 42c:	ef 93       	push	r30
 42e:	ff 93       	push	r31
 430:	29 98       	cbi	0x05, 1	; 5
 432:	8f ef       	ldi	r24, 0xFF	; 255
 434:	36 de       	rcall	.-916    	; 0xa2 <SPI_WriteReadByte>
 436:	c8 2f       	mov	r28, r24
 438:	29 9a       	sbi	0x05, 1	; 5
 43a:	86 ff       	sbrs	r24, 6
 43c:	03 c0       	rjmp	.+6      	; 0x444 <__vector_1+0x38>
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	80 93 2f 01 	sts	0x012F, r24
 444:	c5 ff       	sbrs	r28, 5
 446:	0a c0       	rjmp	.+20     	; 0x45c <__vector_1+0x50>
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	80 93 0a 01 	sts	0x010A, r24
 44e:	c0 62       	ori	r28, 0x20	; 32
 450:	6c 2f       	mov	r22, r28
 452:	87 e0       	ldi	r24, 0x07	; 7
 454:	75 de       	rcall	.-790    	; 0x140 <nRF_Config_Register>
 456:	10 92 2c 01 	sts	0x012C, r1
 45a:	28 98       	cbi	0x05, 0	; 5
 45c:	c4 ff       	sbrs	r28, 4
 45e:	0b c0       	rjmp	.+22     	; 0x476 <__vector_1+0x6a>
 460:	10 92 2c 01 	sts	0x012C, r1
 464:	6c 2f       	mov	r22, r28
 466:	60 63       	ori	r22, 0x30	; 48
 468:	87 e0       	ldi	r24, 0x07	; 7
 46a:	6a de       	rcall	.-812    	; 0x140 <nRF_Config_Register>
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	80 93 0a 01 	sts	0x010A, r24
 472:	15 df       	rcall	.-470    	; 0x29e <nRF_Clear_TX>
 474:	28 98       	cbi	0x05, 0	; 5
 476:	ff 91       	pop	r31
 478:	ef 91       	pop	r30
 47a:	cf 91       	pop	r28
 47c:	bf 91       	pop	r27
 47e:	af 91       	pop	r26
 480:	9f 91       	pop	r25
 482:	8f 91       	pop	r24
 484:	7f 91       	pop	r23
 486:	6f 91       	pop	r22
 488:	5f 91       	pop	r21
 48a:	4f 91       	pop	r20
 48c:	3f 91       	pop	r19
 48e:	2f 91       	pop	r18
 490:	0f 90       	pop	r0
 492:	0f be       	out	0x3f, r0	; 63
 494:	0f 90       	pop	r0
 496:	1f 90       	pop	r1
 498:	18 95       	reti

0000049a <_exit>:
 49a:	f8 94       	cli

0000049c <__stop_program>:
 49c:	ff cf       	rjmp	.-2      	; 0x49c <__stop_program>
