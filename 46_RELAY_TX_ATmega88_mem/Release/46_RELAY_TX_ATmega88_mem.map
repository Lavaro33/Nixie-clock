Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                              ./nRF24L01/nRF24L01.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

prog_timer1         0x2               ./main.o
low_stat            0x1               ./main.o
prog_timer9         0x2               ./main.o
nRF_RX_bufffer      0x21              ./nRF24L01/nRF24L01.o
prog_timer5         0x2               ./main.o
TX_flag             0x1               ./nRF24L01/nRF24L01.o
high_stat           0x1               ./main.o
prog_timer8         0x2               ./main.o
prog_timer10        0x2               ./main.o
prog_timer2         0x2               ./main.o
prog_timer7         0x2               ./main.o
prog_timer3         0x2               ./main.o
transmit            0xc               ./main.o
disable_dynamic_payload
                    0x1               ./nRF24L01/nRF24L01.o
payload_width       0x1               ./nRF24L01/nRF24L01.o
RX_flag             0x1               ./nRF24L01/nRF24L01.o
prog_timer4         0x2               ./main.o
prog_timer11        0x2               ./main.o
prog_timer6         0x2               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
LOAD ./nRF24L01/SPI.o
LOAD ./nRF24L01/nRF24L01.o
LOAD ./Switch/switch.o
LOAD ./main.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xa2c
 *(.vectors)
 .vectors       0x00000000       0x34 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.__c.1871
                0x00000034        0x6 ./nRF24L01/nRF24L01.o
 .progmem.data.__c.1873
                0x0000003a        0x6 ./nRF24L01/nRF24L01.o
                0x00000040                . = ALIGN (0x2)
                0x00000040                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000040        0x0 linker stubs
 *(.trampolines*)
                0x00000040                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000040                __ctors_start = .
 *(.ctors)
                0x00000040                __ctors_end = .
                0x00000040                __dtors_start = .
 *(.dtors)
                0x00000040                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000040        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
                0x00000040                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000040        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000004c       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x0000004c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000005c        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 *(.init9)
 *(.text)
 .text          0x00000060        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
                0x00000060                __vector_22
                0x00000060                __vector_24
                0x00000060                __vector_12
                0x00000060                __bad_interrupt
                0x00000060                __vector_6
                0x00000060                __vector_3
                0x00000060                __vector_23
                0x00000060                __vector_25
                0x00000060                __vector_13
                0x00000060                __vector_17
                0x00000060                __vector_19
                0x00000060                __vector_7
                0x00000060                __vector_5
                0x00000060                __vector_4
                0x00000060                __vector_9
                0x00000060                __vector_2
                0x00000060                __vector_21
                0x00000060                __vector_15
                0x00000060                __vector_8
                0x00000060                __vector_14
                0x00000060                __vector_10
                0x00000060                __vector_16
                0x00000060                __vector_18
                0x00000060                __vector_20
 .text          0x00000062        0x0 ./nRF24L01/SPI.o
 .text          0x00000062        0x0 ./nRF24L01/nRF24L01.o
 .text          0x00000062        0x0 ./Switch/switch.o
 .text          0x00000062        0x0 ./main.o
 .text          0x00000062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text          0x00000062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x00000062                . = ALIGN (0x2)
 *(.text.*)
 .text.init_SPI
                0x00000062       0x26 ./nRF24L01/SPI.o
                0x00000062                init_SPI
 .text.SPI_WriteReadByte
                0x00000088        0xc ./nRF24L01/SPI.o
                0x00000088                SPI_WriteReadByte
 .text.SPI_WriteByte
                0x00000094        0xa ./nRF24L01/SPI.o
                0x00000094                SPI_WriteByte
 .text.SPI_WriteDataBuffer
                0x0000009e       0x3a ./nRF24L01/SPI.o
                0x0000009e                SPI_WriteDataBuffer
 .text.SPI_WriteReadDataBuffer
                0x000000d8       0x48 ./nRF24L01/SPI.o
                0x000000d8                SPI_WriteReadDataBuffer
 .text.register_nRF_RX_Event_Callback
                0x00000120        0xa ./nRF24L01/nRF24L01.o
                0x00000120                register_nRF_RX_Event_Callback
 .text.nRF_Read_One_Byte_From_Register
                0x0000012a        0xe ./nRF24L01/nRF24L01.o
                0x0000012a                nRF_Read_One_Byte_From_Register
 .text.nRF_Config_Register
                0x00000138       0x24 ./nRF24L01/nRF24L01.o
                0x00000138                nRF_Config_Register
 .text.nRF_Read_Registers
                0x0000015c       0x2e ./nRF24L01/nRF24L01.o
                0x0000015c                nRF_Read_Registers
 .text.nRF_Write_Register
                0x0000018a       0x30 ./nRF24L01/nRF24L01.o
                0x0000018a                nRF_Write_Register
 .text.nRF_SET_Transmitter_Adres
                0x000001ba       0x42 ./nRF24L01/nRF24L01.o
                0x000001ba                nRF_SET_Transmitter_Adres
 .text.nRF_SET_Reciver_Addres
                0x000001fc       0x5c ./nRF24L01/nRF24L01.o
                0x000001fc                nRF_SET_Reciver_Addres
 .text.nRF_Data_Ready
                0x00000258        0xc ./nRF24L01/nRF24L01.o
                0x00000258                nRF_Data_Ready
 .text.nRF_Set_State_And_Width_Of_CRC
                0x00000264       0x42 ./nRF24L01/nRF24L01.o
                0x00000264                nRF_Set_State_And_Width_Of_CRC
 .text.nRF_TX_Power_Up
                0x000002a6       0x10 ./nRF24L01/nRF24L01.o
                0x000002a6                nRF_TX_Power_Up
 .text.nRF_RX_Power_Up
                0x000002b6       0x1e ./nRF24L01/nRF24L01.o
                0x000002b6                nRF_RX_Power_Up
 .text.nRF_RX_EVENT
                0x000002d4       0x9e ./nRF24L01/nRF24L01.o
                0x000002d4                nRF_RX_EVENT
 .text.nRF_Set_Channel
                0x00000372        0x8 ./nRF24L01/nRF24L01.o
                0x00000372                nRF_Set_Channel
 .text.nRF_Clear_TX
                0x0000037a        0xa ./nRF24L01/nRF24L01.o
                0x0000037a                nRF_Clear_TX
 .text.nRF_Clear_RX
                0x00000384        0xa ./nRF24L01/nRF24L01.o
                0x00000384                nRF_Clear_RX
 .text.nRF_Power_Down
                0x0000038e       0x12 ./nRF24L01/nRF24L01.o
                0x0000038e                nRF_Power_Down
 .text.nRF_Set_Active_DataPipe_And_ACK
                0x000003a0       0x58 ./nRF24L01/nRF24L01.o
                0x000003a0                nRF_Set_Active_DataPipe_And_ACK
 .text.nRF_SendDataToAir
                0x000003f8       0x8e ./nRF24L01/nRF24L01.o
                0x000003f8                nRF_SendDataToAir
 .text.nRF_Set_PAYLOAD_Width
                0x00000486       0x16 ./nRF24L01/nRF24L01.o
                0x00000486                nRF_Set_PAYLOAD_Width
 .text.nRF_Set_Retransmission_Time_And_Ammount
                0x0000049c        0x6 ./nRF24L01/nRF24L01.o
                0x0000049c                nRF_Set_Retransmission_Time_And_Ammount
 .text.nRF_Set_Data_Speed_And_Reciver_Power
                0x000004a2        0x6 ./nRF24L01/nRF24L01.o
                0x000004a2                nRF_Set_Data_Speed_And_Reciver_Power
 .text.nRF_Set_Dynamic_Payload_State_On_Data_Pipe
                0x000004a8       0x24 ./nRF24L01/nRF24L01.o
                0x000004a8                nRF_Set_Dynamic_Payload_State_On_Data_Pipe
 .text.Initialize_INTERRUPT_For_nRF
                0x000004cc        0xe ./nRF24L01/nRF24L01.o
                0x000004cc                Initialize_INTERRUPT_For_nRF
 .text.nRF_init
                0x000004da       0x50 ./nRF24L01/nRF24L01.o
                0x000004da                nRF_init
 .text.__vector_1
                0x0000052a       0x8e ./nRF24L01/nRF24L01.o
                0x0000052a                __vector_1
 .text.sw_init  0x000005b8       0x2e ./Switch/switch.o
                0x000005b8                sw_init
 .text.program_timer_init
                0x000005e6       0x28 ./main.o
                0x000005e6                program_timer_init
 .text.startup.main
                0x0000060e      0x30c ./main.o
                0x0000060e                main
 .text.__vector_11
                0x0000091a      0x10e ./main.o
                0x0000091a                __vector_11
 .text.libgcc.mul
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x00000a28                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000a28        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                0x00000a28                _exit
                0x00000a28                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000a28        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000a2c                _etext = .

.data           0x00800100        0x0 load address 0x00000a2c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 .data          0x00800100        0x0 ./nRF24L01/SPI.o
 .data          0x00800100        0x0 ./nRF24L01/nRF24L01.o
 .data          0x00800100        0x0 ./Switch/switch.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x4d
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o
 .bss           0x00800100        0x0 ./nRF24L01/SPI.o
 .bss           0x00800100        0x0 ./nRF24L01/nRF24L01.o
 .bss           0x00800100        0x0 ./Switch/switch.o
 .bss           0x00800100        0x0 ./main.o
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.set_first_time_into_RX_MODE_after_TX_MODE
                0x00800100        0x1 ./nRF24L01/nRF24L01.o
                0x00800100                set_first_time_into_RX_MODE_after_TX_MODE
 .bss.first_time
                0x00800101        0x1 ./nRF24L01/nRF24L01.o
                0x00800101                first_time
 .bss.nRF_RX_Event_Callback
                0x00800102        0x2 ./nRF24L01/nRF24L01.o
 *(COMMON)
 COMMON         0x00800104       0x25 ./nRF24L01/nRF24L01.o
                0x00800104                nRF_RX_bufffer
                0x00800125                TX_flag
                0x00800126                disable_dynamic_payload
                0x00800127                payload_width
                0x00800128                RX_flag
 COMMON         0x00800129       0x24 ./main.o
                0x00800129                prog_timer1
                0x0080012b                low_stat
                0x0080012c                prog_timer9
                0x0080012e                prog_timer5
                0x00800130                high_stat
                0x00800131                prog_timer8
                0x00800133                prog_timer10
                0x00800135                prog_timer2
                0x00800137                prog_timer7
                0x00800139                prog_timer3
                0x0080013b                transmit
                0x00800147                prog_timer4
                0x00800149                prog_timer11
                0x0080014b                prog_timer6
                0x0080014d                PROVIDE (__bss_end, .)
                0x00000a2c                __data_load_start = LOADADDR (.data)
                0x00000a2c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080014d        0x0
                0x0080014d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080014d                PROVIDE (__noinit_end, .)
                0x0080014d                _end = .
                0x0080014d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm88p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./nRF24L01/SPI.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./nRF24L01/nRF24L01.o
 .comment       0x00000000       0x30 ./Switch/switch.o
 .comment       0x00000000       0x30 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(46_RELAY_TX_ATmega88_mem.elf elf32-avr)
LOAD linker stubs
